ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:09:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28060 MiB
ramon: sys.mem.avail        61763 MiB
ramon: sys.nprocs           1272
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Kfx7jB4y16eN.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4180041
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2411    292  1130/988/99      98/12     5   14   19.19)
(smt.stats    1    202   3414    463  1931/1733/99     203/13     5   14   19.47)
(smt.stats    2    313   4247   2027  2306/1973/99     332/14     5   14   19.47)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1099511627773&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1099511627773&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1099511627772&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1099511627767&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 2&181994287641
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 2 := 1099511627775 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 2&181994287641
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 2 := 1099511627775 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 2&181994287641
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 2 := 1099511627775 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 181994287641 := 274877906944&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 181994287640 := 274877906944&181994287641
(smt.stats    3    414   5955   4803  2381/2183/117     429/25     7   21   19.66)
(smt.stats    4    525   6673   6129  2777/2564/138     517/77     9   40   19.66)
(smt.stats    5    647   8553   8176  2828/2587/139     644/80    10   43   19.76)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   9833   9587  2905/2669/139     747/80    10   43   19.76)
(smt.stats    7    859  10947  11006  2954/2702/139     863/80    10   43   19.76)
(smt.stats    8    981  12574  14137  2990/2755/139    1000/80    10   43   19.86)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 2 := 2&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 4 := 4&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 4&181994287641
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 4 := 67108863 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 181994287641 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 181994287640 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 181994287632 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 181994287616 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 181994287104 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 3072 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 2048 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 8192 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 16384 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 32768 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 65536 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 131072 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 262144 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 524288 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 1048576 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 2097152 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 4194304 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 8388608 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 16777216 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 33554432 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 67108864 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 134217728 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 268435456 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 536870912 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 1073741824 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 2147483648 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 4294967296 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 8589934592 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 17179869184 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 4294967296 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 17179869184 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 34359738368 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 68719476736 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 68719476736 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 137438953472 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 1048576 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452607 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452607 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452607 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452606 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452604 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 262144 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452603 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452602 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452592 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452594 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452594 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452594 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452594 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 933906 := 549755813888&181994287641
(smt.stats    9   1115  14341  17057  3144/2872/263    1132/132    13   74   21.03)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 843776 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 835584 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 819200 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 524288 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452596 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452593 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452600 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 452600 := 549755813888&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 442368 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 425984 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 393216 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 393216 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 270336 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 278528 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 294912 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 272360 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 272352 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 272352 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 272320 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 272328 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 270336 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 278528 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 294912 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 294912 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 264128 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 262144 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 262144 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 4096 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 1984 := 824633720832&181994287641
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 824633720832&181994287641
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 2 := 3 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 824633720832&181994287641
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 2 := 3 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 824633720832&181994287641
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1 := 3 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 824633720832&181994287641
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1 := 3 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 824633720832&181994287641
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1 := 3 << 38
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 824633720832&181994287641
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 2 := 3 << 38
(smt.stats   10   1216  15844  23867  3231/3014/366    1282/178    16  108   21.03)
(smt.stats   11   1327  19656  32526  3262/3043/366    1440/178    16  108   21.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  26685  42581  3281/3057/376    1639/321    18  112   21.32)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 549755813888&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 6106713419191156736 := 671088645 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 549755813888&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 6106713419191156736 := 671088645 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 549755813888&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 18446742424442109952 := 5 << 1
(smt.stats   13   1583  30810  47957  3337/3098/383    1821/388    20  120   21.51)
ramon: poll                 wall=1.000s usage=0.943s mem=22748KiB load=0.94 rootload=0.93
(smt.stats   14   1730  31756  49371  3682/3135/383    2016/392    20  120   21.60)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 14&1
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 549756266515 := 7 << 1
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 14&1
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 549756266496 := 7 << 1
(smt.stats   15   1831  33806  54681  3787/3509/383    2440/393    20  120   21.60)
(smt.stats   16   1942  36112  60956  3799/3570/394    2672/650    22  132   21.60)
(smt.stats   17   2064  38723  71063  3806/3577/395    2828/692    23  142   21.70)
(smt.stats   18   2198  41717  80795  3821/3591/398    2981/696    24  144   21.80)
(smt.stats   19   2345  46380  95053  3833/3602/399    3186/724    25  148   21.90)
(smt.stats   20   2506  48861 101373  3846/3613/399    3349/724    25  148   21.90)
(smt.stats   21   2607  51285 107838  3851/3617/399    3456/724    25  148   21.90)
(smt.stats   22   2718  54005 118389  3854/3618/404    3635/783    27  154   21.90)
(smt.stats   23   2840  56205 124673  3869/3634/404    3832/783    27  154   22.20)
(smt.stats   24   2974  60320 133323  3873/3638/406    4026/886    28  160   22.20)
(smt.stats   25   3121  66930 147494  3876/3641/406    4293/886    28  160   22.20)
ramon: poll                 wall=2.000s usage=1.942s mem=23484KiB load=1.00 rootload=1.00
(smt.stats   26   3282  75092 168855  3882/3647/406    4461/886    28  160   22.20)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   27   3459  77585 180279  3911/3672/413    4687/1007    30  170   22.29)
(smt.stats   28   3560  82801 194622  3911/3672/413    4788/1007    30  170   22.29)
(smt.stats   29   3671  86104 205371  3917/3674/413    4935/1096    31  183   22.29)
(smt.stats   30   3793  90408 218967  3923/3680/413    5087/1096    31  183   22.29)
(smt.stats   31   3927  96177 234927  3955/3704/413    5361/1096    31  183   22.55)
(smt.stats   32   4074  99737 248471  3967/3713/413    5552/1096    31  183   22.65)
(smt.stats   33   4235 104683 261659  3976/3729/413    5720/1096    31  183   22.65)
(smt.stats   34   4412 112007 278433  3984/3741/416    5908/1199    33  197   22.65)
(smt.stats   35   4606 121704 308767  3984/3741/416    6103/1199    33  197   22.74)
(smt.stats   36   4707 127126 326649  3984/3741/416    6204/1199    33  197   22.74)
(smt.stats   37   4818 133674 348172  3984/3741/416    6315/1199    33  197   22.74)
(smt.stats   38   4940 139600 368940  3984/3741/416    6441/1199    33  197   22.74)
(smt.delete-inactive-clauses  :num-deleted-clauses 203)
(smt.stats   39   5074 145598 389074  3984/3741/416    6372/1199    33  197   22.74)
ramon: poll                 wall=3.000s usage=2.940s mem=24116KiB load=1.00 rootload=1.00
(smt.stats   40   5221 152940 415471  3984/3741/416    6519/1199    33  197   22.84)
(smt.stats   41   5382 159603 441227  3986/3743/416    6678/1199    33  197   22.84)
(smt.stats   42   5559 164148 457736  3989/3746/416    6902/1199    33  197   23.25)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 1280 := 1310720&1355
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 128 := 2097152&1355
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 128 := 2097152&1355
(smt.stats   43   5753 166647 465047  4214/3911/429    7261/1241    34  200   23.34)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 128 := 3244033&21695
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 129 := 3244033&21695
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 257 := 3244033&21695
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 513 := 3244033&21695
(smt.stats   44   5966 170910 478686  4562/4319/445    7857/1337    35  206   23.53)
(smt.stats   45   6067 172819 484189  4580/4326/445    8117/1337    35  206   23.63)
(smt.stats   46   6178 175490 493439  4612/4343/445    8287/1339    35  206   23.63)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   47   6300 178453 511453  4694/4382/445    8419/1339    35  206   23.82)
(smt.stats   48   6434 181710 524112  4742/4457/445    8767/1340    35  206   23.82)
(smt.stats   49   6581 185605 545268  4812/4510/445    8959/1341    35  206   23.91)
(smt.stats   50   6742 188923 560353  4875/4579/445    9282/1343    35  206   23.91)
(smt.stats   51   6919 195804 602037  4897/4654/446    9640/1709    36  207   24.01)
ramon: poll                 wall=4.006s usage=3.945s mem=25492KiB load=1.00 rootload=0.99
(smt.stats   52   7113 199321 618868  4976/4685/453    9930/1763    37  208   24.01)
(smt.stats   53   7326 202269 638824  5005/4758/455   10166/1808    38  232   24.11)
(smt.stats   54   7560 203455 653372  5021/4779/457   10464/1808    38  232   24.11)
(smt.stats   55   7661 203592 663236  5021/4779/457   10565/1808    38  232   24.11)
(smt.stats   56   7772 204429 670622  5026/4784/457   10679/1851    39  234   24.11)
(smt.stats   57   7894 205784 682616  5026/4784/457   10801/1851    39  234   24.11)
(smt.stats   58   8028 208073 700562  5034/4792/458   10966/1851    39  234   24.11)
(smt.stats   59   8175 208934 707952  5098/4856/458   11047/1861    40  240   24.11)
(smt.stats   60   8336 209969 719060  5140/4898/458   11177/1861    40  240   24.20)
(smt.stats   61   8513 211558 733732  5158/4916/458   11381/1861    40  240   24.30)
(smt.stats   62   8707 216632 759876  5172/4930/460   11607/1880    41  251   24.30)
(smt.stats   63   8920 222349 791730  5197/4947/460   11845/1882    41  251   24.30)
(smt.stats   64   9154 226697 816920  5215/4967/460   12264/1929    42  252   24.39)
ramon: poll                 wall=5.000s usage=4.938s mem=25900KiB load=1.00 rootload=1.00
(smt.stats   65   9411 228963 840295  5338/5075/460   12460/1930    42  252   24.39)
(smt.stats   66   9512 231047 858121  5343/5101/460   12564/1930    42  252   24.39)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   67   9623 234262 878752  5346/5102/460   12679/1930    42  252   24.39)
(smt.stats   68   9745 238489 903793  5351/5109/460   12817/1930    42  252   24.39)
(smt.stats   69   9879 241422 925475  5362/5114/460   12983/1932    42  252   24.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 87)
(smt.stats   70  10026 242894 951174  5377/5131/460   13039/1933    42  252   24.50)
(smt.stats   71  10187 244195 975034  5402/5138/460   13199/1933    42  252   24.50)
(smt.stats   72  10364 245293 999649  5446/5172/460   13375/1933    42  252   24.59)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10558 248228 1020723  5479/5225/461   13627/2121    43  253   24.59)
(smt.stats   74  10771 251825 1044131  5541/5248/462   13940/2121    43  253   24.59)
(smt.stats   75  11005 254251 1054887  5563/5313/462   14197/2155    44  253   24.69)
ramon: poll                 wall=6.000s usage=5.938s mem=26108KiB load=1.00 rootload=1.00
(smt.stats   76  11262 258967 1088801  5579/5328/462   14453/2156    44  253   24.69)
(smt.stats   77  11544 262669 1117374  5642/5349/462   14994/2158    44  253   24.69)
(smt.stats   78  11645 264323 1129927  5691/5401/462   15139/2158    44  253   24.69)
(smt.stats   79  11756 266151 1140302  5726/5451/462   15259/2158    44  253   24.78)
(smt.stats   80  11878 267597 1151185  5738/5495/462   15380/2158    44  253   24.78)
(smt.stats   81  12012 269325 1167827  5792/5507/462   15539/2159    44  253   24.78)
(smt.stats   82  12159 270383 1183300  5795/5550/462   15726/2159    44  253   24.78)
(smt.stats   83  12320 272666 1200875  5862/5556/462   15927/2170    44  253   24.88)
(smt.stats   84  12497 274621 1227166  5924/5629/462   16214/2170    44  253   24.97)
(smt.stats   85  12691 283123 1272003  5938/5694/462   17057/2170    44  253   24.97)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 8 := 8&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 8 := 8&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 8 := 8&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 4 := 8&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 8&677
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 8 := 4 << 10
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 8&677
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 8 := 4 << 10
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 2 := 2&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 2&677
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 2 := 0 << 10
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 2&677
shl: (shl[64] (bv2int %0) (mod (+ #104 #315) 64)) 2 := 0 << 10
ramon: poll                 wall=7.000s usage=6.937s mem=26456KiB load=1.00 rootload=1.00
(smt.stats   86  12904 289118 1308386  6044/5698/462   17358/2176    44  253   25.07)
(smt.stats   87  13138 290909 1334365  6066/5819/473   17688/2636    45  255   25.16)
(smt.stats   88  13395 295454 1382052  6091/5820/473   17991/2639    45  255   25.16)
(smt.stats   89  13677 305271 1440722  6124/5869/474   18658/2678    46  256   25.26)
(smt.stats   90  13987 308355 1486175  6195/5914/474   18940/2784    47  258   25.36)
(smt.stats   91  14088 310674 1506008  6204/5957/474   19205/2784    47  258   25.36)
(smt.stats   92  14199 315295 1530072  6234/5965/474   19327/2785    47  258   25.46)
ramon: poll                 wall=8.000s usage=7.937s mem=26924KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   93  14321 315716 1531732  6390/5998/474   19458/2785    47  258   25.55)
(smt.stats   94  14455 317580 1552085  6532/6255/474   19624/2785    47  258   25.55)
(smt.stats   95  14602 320771 1571562  6552/6284/474   20086/2787    47  258   25.55)
ramon: poll                 wall=9.000s usage=8.937s mem=27052KiB load=1.00 rootload=1.00
(smt.stats   96  14763 323923 1581434  6668/6309/474   20271/2788    47  258   25.65)
(smt.stats   97  14940 328706 1616980  6749/6449/474   20487/2789    47  258   25.65)
(smt.delete-inactive-clauses  :num-deleted-clauses 6)
(smt.stats   98  15134 332327 1631148  6752/6503/474   20679/2789    47  258   25.65)
(smt.stats   99  15347 337882 1682432  6757/6505/474   20892/2789    47  258   25.65)
(smt.stats  100  15581 343938 1721661  6771/6522/475   21302/3153    48  263   25.74)
(smt.stats  101  15838 348755 1757886  6829/6548/475   21615/3154    48  263   25.74)
(smt.stats  102  16120 351476 1802509  6861/6591/475   21898/3155    48  263   25.74)
ramon: poll                 wall=10.000s usage=9.936s mem=27208KiB load=1.00 rootload=1.00
(smt.stats  103  16430 356684 1852023  6864/6615/475   22277/3155    48  263   25.74)
(smt.stats  104  16770 360026 1895596  6871/6622/475   22789/3155    48  263   25.84)
(smt.stats  105  16871 361275 1908745  6876/6627/475   22893/3155    48  263   25.84)
(smt.stats  106  16982 362507 1923255  6881/6632/475   23000/3155    48  263   25.84)
(smt.stats  107  17104 365798 1944478  7046/6639/479   23182/3242    49  275   25.93)
(smt.stats  108  17238 367368 1956389  7133/6807/479   23387/3243    49  275   25.93)
(smt.stats  109  17385 371753 1992950  7141/6892/479   23604/3243    49  275   26.73)
(smt.stats  110  17546 375444 2024646  7190/6894/479   24007/3314    50  277   26.73)
(smt.stats  111  17723 380335 2060961  7198/6949/479   24319/3314    50  277   26.83)
ramon: poll                 wall=11.000s usage=10.936s mem=28456KiB load=1.00 rootload=0.99
(smt.stats  112  17917 387138 2101812  7220/6954/479   24835/3315    50  277   26.92)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  113  18130 391280 2108033  7303/7053/480   25163/3737    51  279   26.92)
(smt.stats  114  18364 392622 2110060  7410/7063/480   25489/3740    51  279   27.22)
(smt.stats  115  18621 398500 2143860  8261/7987/480   25965/3744    51  279   27.22)
ramon: poll                 wall=12.000s usage=11.935s mem=28876KiB load=1.00 rootload=1.00
(smt.stats  116  18903 406168 2213859  8267/8015/480   26477/3744    51  279   27.32)
(smt.stats  117  19213 410272 2256195  8270/8021/480   26797/3744    51  279   27.32)
(smt.stats  118  19553 414005 2296689  8366/8054/480   27200/3749    51  279   27.42)
(smt.stats  119  19926 418588 2364964  8377/8124/481   27813/4201    52  291   27.54)
(smt.delete-inactive-clauses  :num-deleted-clauses 697)
(smt.stats  120  20027 421200 2394814  8379/8130/481   27288/4201    52  291   27.54)
(smt.stats  121  20138 422732 2414036  8395/8131/481   27411/4202    52  291   27.54)
(smt.stats  122  20260 425503 2453135  8438/8150/481   27597/4204    52  291   27.54)
ramon: poll                 wall=13.000s usage=12.935s mem=29160KiB load=1.00 rootload=1.00
(smt.stats  123  20394 429499 2493515  8442/8193/481   28003/4204    52  291   27.54)
(smt.stats  124  20541 432545 2517226  8500/8199/481   28337/4207    52  291   27.65)
(smt.stats  125  20702 436083 2543423  8554/8260/481   28568/4211    52  291   27.65)
(smt.stats  126  20879 439509 2566609  8587/8308/481   29005/4211    52  291   27.74)
(smt.stats  127  21073 448894 2645728  8591/8342/481   29399/4211    52  291   27.74)
(smt.stats  128  21286 451544 2678955  8601/8345/481   29754/4212    52  291   27.84)
(smt.stats  129  21520 453563 2730790  8607/8358/481   30005/4212    52  291   27.84)
ramon: poll                 wall=14.002s usage=13.936s mem=29468KiB load=1.00 rootload=1.01
(smt.stats  130  21777 454840 2757063  8608/8359/481   30268/4212    52  291   27.84)
(smt.stats  131  22059 455336 2782750  8608/8359/481   30553/4212    52  291   27.93)
(smt.stats  132  22369 457899 2840809  8610/8361/481   30865/4212    52  291   27.93)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  133  22709 463797 2931814  8612/8363/481   31750/4212    52  291   28.03)
(smt.stats  134  23082 472679 3058966  8615/8366/481   32220/4212    52  291   28.12)
(smt.stats  135  23492 476089 3113228  8615/8366/481   32637/4212    52  291   28.12)
ramon: poll                 wall=15.000s usage=14.932s mem=29724KiB load=1.00 rootload=0.99
(smt.stats  136  23593 478434 3120188  8627/8366/481   32839/4213    52  291   28.22)
(smt.stats  137  23704 481119 3132885  8742/8384/481   33034/4224    52  291   28.22)
(smt.stats  138  23826 482576 3143586  8887/8612/482   33185/4549    53  291   28.22)
(smt.stats  139  23960 485596 3180280  8967/8649/482   33452/4550    53  291   28.22)
(smt.stats  140  24107 488231 3205801  9002/8720/482   33691/4553    53  291   28.31)
(smt.stats  141  24268 490998 3239315  9019/8762/482   34015/4553    53  291   28.31)
(smt.stats  142  24445 494561 3275131  9041/8774/482   34736/4554    53  291   28.31)
ramon: poll                 wall=16.000s usage=15.932s mem=29980KiB load=1.00 rootload=1.00
(smt.stats  143  24639 498288 3312705  9102/8796/483   35111/4756    54  294   28.58)
(smt.stats  144  24852 506606 3381871  9223/8874/483   35550/4761    54  294   28.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 182)
(smt.stats  145  25086 513273 3467378  9234/8977/483   35752/4761    54  294   28.68)
(smt.stats  146  25343 515673 3530931  9258/8985/483   36041/4762    54  294   28.68)
ramon: poll                 wall=17.000s usage=16.932s mem=30492KiB load=1.00 rootload=1.00
(smt.stats  147  25625 519851 3584478  9422/9027/483   36339/4763    54  294   28.77)
(smt.stats  148  25935 525145 3628677  9476/9182/483   36655/4765    54  294   28.77)
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069957784576&677
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 549756463375 := 1097335282953 << 10
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069957784576&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 677 := 1069957784576&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069957784576&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 676 := 1069957784576&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069957784576&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 672 := 1069957784576&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069957784576&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 640 := 1069957784576&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069957784576&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 24 := 1069957784576&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069957784576&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 2 := 1069957784576&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
shl: (shl[40] (bv2int %0) (mod (bv2int %1) 40)) 1069958118046 := 1097335283278 << 10
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 671 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 670 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 640 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 512 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 4 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 8 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 16 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 64 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 128 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 256 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 512 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 640 := 1069958117376&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958124544&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 1 := 1069958124544&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958124544&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 1 := 1069958124544&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958124544&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 2 := 1069958124544&677
band: (band[40] (shl[64] (bv2int %0) (mod #316 64)) (if (= #708 63) 0 (if #710 1 #856))) 0 := 1069958117376&677
band: (band[40] (shl[40] (bv2int %0) (mod #104 40)) (if (= #578 39) 1 (if #580 2 #689))) 2 := 1069958117376&677
(smt.stats  149  26275 532377 3685579  9738/9467/526   37318/5009    55  297   28.97)
(smt.stats  150  26648 538479 3743538  9881/9511/536   37900/5011    55  297   29.07)
ramon: poll                 wall=18.002s usage=17.936s mem=30748KiB load=1.00 rootload=1.00
(smt.stats  151  27058 545737 3799887 10004/9745/537   38463/5198    56  310   29.16)
(smt.stats  152  27508 554139 3843576 10007/9748/537   38919/5198    56  310   29.16)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  153  27609 556031 3872338 10007/9748/537   39041/5198    56  310   29.16)
(smt.stats  154  27720 557561 3895724 10025/9748/537   39159/5199    56  310   29.16)
(smt.stats  155  27842 558541 3918241 10031/9770/537   39289/5199    56  310   29.16)
(smt.stats  156  27976 561871 3951858 10041/9774/537   39476/5200    56  310   29.26)
(smt.stats  157  28123 562523 3971183 10046/9787/537   39712/5200    56  310   29.26)
(smt.stats  158  28284 565585 4015023 10064/9787/537   39883/5201    56  310   29.26)
ramon: poll                 wall=19.000s usage=18.932s mem=31004KiB load=1.00 rootload=1.00
(smt.stats  159  28461 568416 4042902 10079/9820/538   40114/5327    57  326   29.26)
(smt.stats  160  28655 571334 4054292 10092/9820/538   40313/5328    57  326   29.26)
(smt.stats  161  28868 575067 4110394 10145/9876/540   40534/5330    57  326   29.35)
(smt.stats  162  29102 578321 4168210 10165/9903/540   41208/5331    57  326   29.54)
ramon: poll                 wall=20.000s usage=19.932s mem=31516KiB load=1.00 rootload=1.00
(smt.stats  163  29359 585102 4264018 10289/9913/540   41490/5450    58  328   29.64)
ramon: end                  Fri Nov  1 18:09:34 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.990s
ramon: group.utime          19.970s
ramon: group.stime          0.020s
ramon: group.mempeak        31772KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.00
