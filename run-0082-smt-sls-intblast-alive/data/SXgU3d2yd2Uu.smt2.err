ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:31:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28254 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/SXgU3d2yd2Uu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             810444
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1 := 2 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1 := 2 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1 := 0 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 72057594037927935 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&3
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 3 := 2 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 72057594037927935 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 72057594037927934 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 63 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 62 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 60 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 129 := 1 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 8 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 16 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 64 := 64&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 64&128
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 72057594037927935 := 562949953421313 << 7
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 16 := 64&567382630220032
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 64&72057594037927808
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 64&72057594037927808
(smt.stats    0    101   4871    590  1329/1203/161      88/18    12   30   52.23)
(smt.stats    1    202   5776   1520  2493/1839/166     190/65    13   31   52.52)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 256&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 32 := 256&128
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 128 := 256&256
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 128 := 256&256
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   85.4701     10000        49          0            1        2)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 128 := 256&256
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 128 := 256&256
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 256 := 256&256
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 256 := 4 << 8
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 256 := 256&72057594037927808
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 144115188075855744 := 2251799813685246 << 8
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 0 := 0 << 3
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 8&0
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 1 := 0 << 4
(smt.stats    2    313   8014   3557  2575/2299/184     323/83    15   35   52.81)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 36028797018963968&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 144115188075855873 := 0 << 55
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 36028797018963968&1
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 144115188075855873 := 0 << 55
(sat.ddfw       1      1   44.4489     20001        98          1            1        3)
(sat.ddfw       1      1   46.0829     40001       196          2            1        5)
(sat.ddfw       1      1   39.5778     70001       343          3            1        8)
ramon: poll                 wall=1.003s usage=0.979s mem=55424KiB load=0.98 rootload=0.96
(sat.ddfw       1      1   33.7838    110001       539          4            1       12)
(smt.stats    3    414   9047   5141  2773/2484/197     429/104    17   44   53.29)
(smt.stats    4    525  11981   9021  2911/2617/221     532/119    22   84   53.29)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&2
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 2 := 2&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 2 := 2 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 2 := 2&2
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 2 := 2 << 1
(sat.ddfw       1      1   29.1709    160000       784          5            1       17)
(smt.stats    5    647  17370  13760  2968/2666/240     655/125    25   94   53.48)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  23412  21347  2992/2688/240     779/125    25   94   53.58)
ramon: poll                 wall=2.000s usage=1.979s mem=55872KiB load=1.00 rootload=1.00
(smt.stats    7    859  27373  27685  3029/2710/242     940/141    26   98   53.77)
(sat.ddfw       1      1    25.565    220001      1078          6            1       23)
(smt.stats    8    981  30135  31628  3079/2768/251    1073/155    27  113   53.87)
(smt.stats    9   1115  34439  37290  3117/2776/251    1250/157    27  113   53.96)
(smt.stats   10   1216  39229  43650  3140/2820/253    1334/173    28  138   53.96)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&1125899906842624
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1125899906842624 := 1125899906842624 << 5
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&4539061041759233
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 4539061041759233 := 1125899906842624 << 5
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&4539061041759233
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 4539061041759233 := 1125899906842624 << 5
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 3 := 32&36028797018963968
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 3 := 32&36028797018963968
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&36028797018963968
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 562949953421312 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&36028797018963968
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 562949953421312 << 6
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 32&36028797018963968
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 562949953421312 << 6
(smt.stats   11   1327  44036  51383  3197/2828/253    1464/185    29  140   54.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  47344  57481  3219/2902/274    1607/193    31  146   54.20)
ramon: poll                 wall=3.000s usage=2.973s mem=56460KiB load=0.99 rootload=1.00
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&4503599627370508
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2251799813685253 := 2251799813685254 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&4503599627370508
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2251799813685253 := 2251799813685254 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&4503599627370506
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 2251799813685252 := 2251799813685253 << 1
(sat.ddfw       1      1   22.6904    290001      1421          7            1       30)
(smt.stats   13   1583  50837  62070  3332/2948/274    1792/204    31  146   54.39)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 1 := 1&1125899906842630
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&1125899906842630
band: (band[56] (if (= #115 55) 1 (if #628 2 #736)) (shl[56] (bv2int %1) (+ 56 #739))) 1 := 1&1125899906842630
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 1&1125899906842630
band: (band[56] (if (= #115 55) 1 (if #628 2 #736)) (shl[56] (bv2int %1) (+ 56 #739))) 1 := 1&1125899906842630
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 1 := 1&2251799813685278
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 1 := 1&2251799813685278
(smt.stats   14   1730  57003  69873  3396/3036/282    1959/231    32  149   54.49)
(smt.stats   15   1831  60901  73788  3423/3062/297    2096/245    33  153   54.70)
(sat.ddfw       1      1   20.3459    370001      1813          8            1       38)
ramon: poll                 wall=4.003s usage=3.961s mem=56984KiB load=0.99 rootload=0.98
(smt.stats   16   1942  63473  79607  3479/3136/310    2231/263    35  158   54.79)
(smt.stats   17   2064  67119  84614  3508/3153/310    2373/264    35  158   54.79)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&2251799813685250
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&2251799813685252
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1227230898458460164 := 2 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&2251799813685252
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 1227230898458460164 := 2 << 1
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&4
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 1 << 2
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&4
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 1 << 2
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 2&4
shl: (shl[56] (bv2int %1) (+ 56 (* 72057594037927935 #111))) 0 := 1 << 2
(smt.stats   18   2198  71733  91789  3552/3165/311    2502/285    36  179   54.89)
(smt.stats   19   2345  75749 100303  3656/3225/316    2655/297    37  180   55.11)
(sat.ddfw       1      1   18.4351    460001      2254          9            1       47)
(smt.stats   20   2506  79752 108178  3759/3412/324    2868/302    38  180   55.31)
ramon: poll                 wall=5.000s usage=4.953s mem=57764KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   16.8237    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=5.952s mem=57824KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.7887    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=7.019s mem=57736KiB load=1.07 rootload=1.07
(smt.stats   21   2607  84397 112205  3802/3423/325    3014/316    39  195   55.40)
(smt.stats   22   2718  86645 116865  3838/3479/325    3154/318    39  195   55.50)
ramon: poll                 wall=8.000s usage=8.017s mem=58036KiB load=1.00 rootload=1.00
(smt.stats   23   2840  92248 125388  3921/3512/325    3309/344    40  196   55.71)
(sat.ddfw       1      1   14.5684    790001      3872         12            1       80)
(smt.stats   24   2974  95806 131573  4007/3662/326    3521/380    41  197   55.71)
(smt.stats   25   3121 102493 141238  4043/3665/326    3766/382    41  197   55.80)
ramon: poll                 wall=9.000s usage=9.017s mem=58128KiB load=1.00 rootload=1.00
(smt.stats   26   3282 108932 150553  4134/3707/326    3999/382    41  197   56.00)
(sat.ddfw       1      1   13.5149    920001      4509         13            1       93)
(smt.stats   27   3459 114721 164358  4169/3824/328    4234/439    42  203   56.00)
(smt.stats   28   3560 118057 170173  4173/3828/328    4372/439    42  203   56.00)
ramon: poll                 wall=10.000s usage=10.015s mem=58672KiB load=1.00 rootload=0.99
(smt.stats   29   3671 121630 179449  4180/3835/328    4510/454    43  210   56.00)
(smt.stats   30   3793 125885 188195  4241/3840/328    4651/456    43  210   56.09)
(smt.stats   31   3927 129677 198444  4294/3921/328    4843/456    43  210   56.09)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 134345 210093  4306/3959/329    4994/479    44  221   56.09)
ramon: poll                 wall=11.000s usage=11.014s mem=58992KiB load=1.00 rootload=1.00
(smt.stats   33   4235 139469 228960  4314/3967/329    5160/479    44  221   56.52)
(sat.ddfw       1      1   12.6047   1060001      5196         14            1      108)
(smt.stats   34   4412 144552 255535  4344/3993/329    5374/479    44  221   56.52)
(smt.stats   35   4606 148730 266759  4409/4043/329    5616/479    44  221   56.62)
(smt.stats   36   4707 151285 279710  4428/4060/330    5877/533    45  227   56.73)
(smt.stats   37   4818 155054 307901  4449/4077/330    6009/533    45  227   56.73)
(smt.stats   38   4940 158367 329785  4457/4084/331    6148/546    46  228   56.92)
ramon: poll                 wall=12.000s usage=12.008s mem=59088KiB load=0.99 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 63)
(smt.stats   39   5074 160957 335729  4470/4094/331    6258/546    46  228   57.02)
(sat.ddfw       1      1   11.7371   1210001      5931         15            1      123)
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330736130
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330736130
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330735618
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330735618
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330734014
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589886 := 2251799813685250 << 16
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330734014
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589886 := 2251799813685250 << 16
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330733954
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589826 := 2251799813685250 << 16
ramon: poll                 wall=13.000s usage=12.972s mem=59244KiB load=0.96 rootload=0.96
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330734014
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589886 := 2251799813685250 << 16
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330733571
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589443 := 2251799813685250 << 16
band: (band[56] (if (= #406 63) 1 (if #606 2 #808)) (shl[64] (* 2 #388) (mod #823 64))) 0 := 65536&72039863330733571
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 55 #815 #819) 64)) 216155051406589443 := 2251799813685250 << 16
(smt.stats   40   5221 164632 346762  4587/4179/347    6437/568    47  231   57.11)
ramon: poll                 wall=14.000s usage=13.974s mem=59392KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.0635   1370001      6715         16            1      139)
(smt.stats   41   5382 165156 348654  4866/4248/354    6610/570    47  231   57.40)
ramon: poll                 wall=15.000s usage=14.974s mem=59820KiB load=1.00 rootload=1.00
(smt.stats   42   5559 168459 360667  5158/4751/355    6967/573    47  231   57.49)
ramon: poll                 wall=16.000s usage=15.974s mem=60056KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.4699   1540001      7549         17            1      156)
(smt.stats   43   5753 177333 385790  5207/4792/355    7271/663    48  244   57.59)
ramon: poll                 wall=17.000s usage=16.976s mem=59892KiB load=1.00 rootload=1.00
(smt.stats   44   5966 182472 397296  5330/4856/355    7589/668    48  244   57.68)
(smt.stats   45   6067 186000 405266  5363/4977/355    7760/668    48  244   57.68)
(smt.stats   46   6178 188712 411399  5382/4993/356    7886/715    49  247   57.68)
ramon: poll                 wall=18.000s usage=18.024s mem=60204KiB load=1.05 rootload=1.05
(sat.ddfw       1      1   9.93432   1720001      8431         18            1      174)
(smt.stats   47   6300 192068 418821  5443/5008/356    8068/717    49  247   57.78)
(smt.stats   48   6434 198036 443717  5496/5103/356    8212/717    49  247   57.78)
(smt.stats   49   6581 201631 456260  5531/5144/358    8522/812    50  250   57.78)
ramon: poll                 wall=19.000s usage=19.021s mem=60316KiB load=1.00 rootload=1.00
(smt.stats   50   6742 208051 493110  5546/5158/358    8733/812    50  250   58.23)
(smt.stats   51   6919 210794 514040  5578/5190/362    8926/919    51  254   58.33)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 217912 527065  5600/5209/362    9164/927    52  255   58.52)
ramon: poll                 wall=20.000s usage=20.024s mem=61036KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:31:51 2024
ramon: root.execname        z3
ramon: root.utime           20.030s
ramon: root.stime           0.010s
ramon: group.total          20.049s
ramon: group.utime          20.029s
ramon: group.stime          0.020s
ramon: group.mempeak        61044KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.025s
ramon: loadavg              1.00
