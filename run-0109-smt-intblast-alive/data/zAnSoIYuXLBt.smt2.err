ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:08:45 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40373 MiB
ramon: sys.mem.avail        61704 MiB
ramon: sys.nprocs           1251
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zAnSoIYuXLBt.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3122184
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5153   1168  1214/1094/96     100/8     4   14   19.17)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 2&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 2&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 5&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 5&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 6&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 8&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 2&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 4&59
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 58&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 57&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 58&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 56&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 48&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 47&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 58&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 58&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 57&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 5&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 4&59
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 5&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 56&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 48&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 1&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 1&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 1&59
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 1 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7612 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7612 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7612 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 4 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 8 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 16 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 32 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 48 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 32 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 32 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7551 := 59 << 7
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 1 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 4 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 56 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 48 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 16 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 32 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 11 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 10 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 8 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 2 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 16 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 16 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 16 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 12 := 7552&59
(smt.stats    1    203   8114   2637  1898/1715/222     202/22     8   43   19.66)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 1 := 7552&59
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 7552&59
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 32 := 7552&59
(smt.stats    2    314  10924   7626  2151/1928/235     319/44     9   47   19.99)
(smt.stats    3    415  12367   9698  2335/2099/236     421/49    11   51   20.30)
(smt.stats    4    526  14690  12759  2583/2242/243     527/66    12   54   20.40)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370496 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370496 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370496 := 54 << 2
(smt.stats    5    648  20468  18166  2674/2396/244     661/77    13   71   20.40)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 1&1
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370497 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #372) 64)) 4503599627370497 := 54 << 2
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  23664  22948  2706/2436/250     808/92    15   75   20.51)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 1 := 216&1
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 216&1
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 7737 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 216&1
shl: (shl[52] (bv2int %0) (mod (bv2int %0) 52)) 191 := 54 << 2
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 216&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 1 := 216&1
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 0 := 216&1
band: (band[52] (shl[52] (bv2int %0) (mod #101 52)) (if (= #609 51) 0 (if #611 1 #755))) 1 := 216&1
(smt.stats    7    860  26003  27209  2750/2471/259    1000/105    17   82   20.71)
(smt.stats    8    982  27347  31631  2915/2602/266    1291/130    18   86   21.00)
(smt.stats    9   1116  31384  38725  3003/2684/275    1672/201    21  142   21.38)
(smt.stats   10   1217  34320  44041  3062/2691/279    1914/204    21  142   21.48)
ramon: poll                 wall=1.003s usage=0.935s mem=22832KiB load=0.93 rootload=0.93
(smt.stats   11   1328  37246  50188  3200/2755/279    2199/220    22  142   21.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  40640  58271  3284/2895/279    2666/222    22  142   21.67)
(smt.stats   13   1584  44594  69759  3331/2979/288    3061/285    23  166   21.86)
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 57 := 84464859918669&129752682729412
band: (band[52] (shl[64] (bv2int %0) (mod #373 64)) (if (or #775 #776) 0 (if #777 1 #909))) 56 := 84464859918698&129752682729412
(smt.stats   14   1731  50324  84503  3450/3019/290    3534/332    24  167   21.97)
ramon: poll                 wall=2.000s usage=1.932s mem=23328KiB load=1.00 rootload=0.99
(smt.stats   15   1832  52604  92672  3532/3143/290    3794/388    25  168   22.06)
(smt.stats   16   1943  54399  98164  3651/3263/291    4096/397    26  168   22.06)
(smt.stats   17   2065  58360 108411  3716/3353/292    4566/474    27  168   22.18)
(smt.stats   18   2199  63646 120401  3893/3409/292    4897/476    27  168   22.28)
ramon: poll                 wall=3.000s usage=2.932s mem=23872KiB load=1.00 rootload=1.00
(smt.stats   19   2346  68510 137363  4054/3591/292    5250/476    27  168   22.37)
(smt.stats   20   2507  72537 153828  4192/3785/292    5892/476    27  168   22.47)
(smt.stats   21   2608  77307 165593  4239/3884/292    6353/476    27  168   22.58)
(smt.stats   22   2719  82208 175840  4397/3931/292    6690/485    27  168   22.58)
(smt.stats   23   2841  87443 188812  4513/4108/292    7064/489    27  168   22.71)
(smt.stats   24   2975  90348 196260  4614/4294/293    7647/634    28  170   22.80)
ramon: poll                 wall=4.000s usage=3.932s mem=24400KiB load=1.00 rootload=1.00
(smt.stats   25   3122  93923 209340  4700/4357/294    8177/635    28  170   22.96)
(smt.stats   26   3283  99049 222142  4960/4505/295    8534/717    29  171   23.25)
ramon: poll                 wall=5.000s usage=4.931s mem=24580KiB load=1.00 rootload=1.00
(smt.stats   27   3460 102366 232280  5199/4667/295    9101/726    29  171   23.25)
(smt.stats   28   3561 105776 244807  5245/4892/295    9783/750    30  173   23.35)
(smt.stats   29   3672 108719 254613  5373/5000/296   10480/750    30  173   23.45)
(smt.stats   30   3794 112209 272453  5526/5060/296   10997/884    31  175   23.54)
(smt.stats   31   3928 115458 287821  5704/5244/296   11781/887    31  175   23.64)
ramon: poll                 wall=6.000s usage=5.931s mem=24992KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   32   4075 118716 298554  5861/5395/296   12262/890    31  175   23.76)
(smt.stats   33   4236 123091 322970  6103/5574/297   13270/924    32  177   24.08)
(smt.stats   34   4413 128150 349224  6350/5788/297   13862/927    32  177   24.17)
ramon: poll                 wall=7.000s usage=6.931s mem=25696KiB load=1.00 rootload=1.00
(smt.stats   35   4607 132448 372673  6593/6049/299   14864/942    33  181   24.27)
(smt.stats   36   4708 135664 403223  6768/6277/299   15461/946    33  181   24.36)
(smt.stats   37   4819 138885 436570  6932/6460/299   15865/1054    34  183   24.46)
ramon: poll                 wall=8.000s usage=7.931s mem=25860KiB load=1.00 rootload=1.00
(smt.stats   38   4941 141243 460891  7089/6623/299   16541/1056    34  183   24.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 3617)
(smt.stats   39   5075 144115 477712  7161/6792/299   14851/1057    34  183   24.65)
(smt.stats   40   5222 149304 503719  7244/6864/299   15847/1064    34  183   24.75)
ramon: poll                 wall=9.000s usage=8.930s mem=26360KiB load=1.00 rootload=1.00
(smt.stats   41   5383 154498 519853  7490/6926/299   16316/1072    34  183   24.94)
(smt.stats   42   5560 160646 552340  7632/7255/301   18232/1379    35  185   25.13)
(smt.stats   43   5754 173400 612934  7945/7331/302   18921/1868    36  197   25.22)
ramon: poll                 wall=10.000s usage=9.925s mem=26808KiB load=0.99 rootload=1.00
(smt.stats   44   5967 183715 655209  8248/7645/302   19785/1868    36  197   25.32)
(smt.stats   45   6068 187645 670170  8309/7946/302   20553/1872    36  197   25.41)
(smt.stats   46   6179 193005 689321  8467/8003/302   20938/1880    36  197   25.41)
ramon: poll                 wall=11.000s usage=10.924s mem=27024KiB load=1.00 rootload=1.00
(smt.stats   47   6301 200663 719547  8661/8280/303   21469/2227    37  200   25.51)
(smt.stats   48   6435 207276 743404  8789/8349/303   22291/2229    37  200   25.51)
(smt.stats   49   6582 213469 763293  8873/8489/303   23641/2231    37  200   25.71)
ramon: poll                 wall=12.000s usage=11.924s mem=27432KiB load=1.00 rootload=1.00
(smt.stats   50   6743 220210 782967  9061/8553/303   24398/2232    37  200   26.10)
ramon: poll                 wall=13.000s usage=12.924s mem=28212KiB load=1.00 rootload=1.00
(smt.stats   51   6920 223481 794399  9566/8879/303   25241/2232    37  200   26.46)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   52   7114 229789 837313  9685/9283/303   27194/2235    37  200   26.56)
ramon: poll                 wall=14.000s usage=13.924s mem=28252KiB load=1.00 rootload=1.00
(smt.stats   53   7327 238758 897174  9910/9372/305   28671/2840    38  210   26.78)
(smt.stats   54   7561 247783 947979 10114/9600/305   29332/2842    38  210   26.98)
ramon: poll                 wall=15.000s usage=14.923s mem=28508KiB load=1.00 rootload=0.99
(smt.stats   55   7662 251578 983006 10150/9805/306   29893/3034    39  212   26.98)
(smt.stats   56   7773 256312 1017769 10246/9828/306   30585/3034    39  212   27.07)
(smt.stats   57   7895 260108 1056035 10427/9948/306   31580/3034    39  212   27.17)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   58   8029 264114 1079427 10516/10131/307   32702/3141    40  217   27.27)
(smt.stats   59   8176 268700 1104520 10587/10229/307   33362/3141    40  217   27.36)
ramon: poll                 wall=16.000s usage=15.923s mem=28936KiB load=1.00 rootload=1.00
(smt.stats   60   8337 272885 1135232 10811/10280/307   34379/3143    40  217   27.52)
(smt.stats   61   8514 278181 1158571 10967/10643/308   35518/3234    41  228   27.71)
ramon: poll                 wall=17.000s usage=16.923s mem=29528KiB load=1.00 rootload=1.00
(smt.stats   62   8708 284977 1170406 11194/10647/308   36191/3235    41  228   27.81)
(smt.stats   63   8921 292595 1186122 11348/10910/308   37198/3240    41  228   27.90)
(smt.stats   64   9155 298726 1235919 11496/11069/308   38933/3244    41  228   28.19)
ramon: poll                 wall=18.003s usage=17.927s mem=29788KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.922s mem=30300KiB load=1.00 rootload=1.00
(smt.stats   65   9412 307612 1295626 11782/11192/308   40187/3244    41  228   28.57)
(smt.stats   66   9513 309168 1311957 11803/11476/308   40800/3244    41  228   28.57)
(smt.stats   67   9624 314809 1362224 11832/11500/308   41266/3244    41  228   28.74)
(smt.stats   68   9746 321207 1414012 11851/11511/309   41963/3608    42  251   28.84)
(smt.stats   69   9880 327098 1453118 12016/11532/309   42726/3610    42  251   28.93)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 331530 1472787 12078/11718/309   43405/3610    42  251   28.93)
ramon: poll                 wall=20.000s usage=19.922s mem=30520KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:09:05 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.000s
ramon: group.utime          19.988s
ramon: group.stime          0.012s
ramon: group.mempeak        31032KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.078s
ramon: loadavg              1.00
