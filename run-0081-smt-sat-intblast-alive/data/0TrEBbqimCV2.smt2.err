ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:19:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         31061 MiB
ramon: sys.mem.avail        62093 MiB
ramon: sys.nprocs           1375
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0TrEBbqimCV2.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             208324
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   229/228     0/0  58       0    18.48   0.00)
(sat.stats    138   1021    0   229/228   138/62  58       0    18.88   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 371 :time 0.00)
(sat.stats    138   1021    0   229/228   138/62  58       0    18.88   0.01)
(sat.stats    138   1021    0   229/228   138/62  58       0    18.88   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 521018.88 :time 0.00)
(sat.stats    138   1021    0   231/230   143/67  58       0    18.88   0.01)
(sat.stats    141   1043    1   231/230   146/68  58       0    18.88   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    144   1065    2   231/230   149/71  58       0    18.88   0.01)
(sat.stats    183   1421    3   231/230   188/103  58       0    18.98   0.01)
(sat.stats    193   1481    4   231/230   198/110  58       0    18.98   0.01)
(sat.stats    196   1521    5   231/230   201/111  58       0    18.98   0.01)
(sat.stats    199   1559    6   231/230   204/112  58       0    18.98   0.01)
(sat.stats    202   1616    7   231/230   207/114  58       0    18.98   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    263   2722    8   231/230   268/159  58       0    18.98   0.02)
(sat.stats    272   3188    9   231/230   277/164  58       0    18.98   0.02)
(sat.stats    275   3294   10   231/230   280/165  58       0    18.98   0.02)
(sat.stats    278   3354   11   231/230   283/166  58       0    18.98   0.02)
(sat.stats    281   3470   12   231/230   286/168  58       0    18.98   0.02)
(sat.stats    284   3632   13   231/230   289/170  58       0    18.98   0.02)
(sat.stats    315   4577   23   231/230   320/184  58       0    19.07   0.03)
(sat.stats    498   6987   37   231/230   503/257  58       0    19.07   0.04)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 3882 :time 0.00)
shl: (shl[53] (bv2int %0) (mod (bv2int %0) 53)) 70368744177664 := 100 << 47
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 6032 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 6063 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 1013376 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 1986048 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 15129600 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 20518912 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 19218432 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 346718208 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 2082078720 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 1939341312 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 27463254016 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 12509511680 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 884998144 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 56706990080 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 3013590646784 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 8532220968960 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 13157632311296 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 38036230373376 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 55800215109632 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 7146825580544 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 20890720927744 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 54975581388800 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 4398046511104 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 8796093022208 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 52776558133248 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 70368744177664 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 35184372088832 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
shl: (shl[64] (bv2int %0) (mod (+ #45 #690) 64)) 9007199254740991 := 100 << 47
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 27310 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 17565 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 94768 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 785088 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 3928448 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 4186112 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 336510976 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 294617088 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 1741946880 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 3825729536 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 26365394944 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 442465517568 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 100831068160 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 1271712972800 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 8074806951936 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 2309081792512 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 373662154752 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 19696720019456 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 36163624632320 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 1546188226560 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 30648886624256 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 65146063945728 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 70368744177664 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 35184372088832 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 32435593019392 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 25288767438848 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 4398046511104 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 2199023255552 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 26388279066624 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 17592186044416 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 0 := 70368744177664&5066549580791808
band: (band[53] (shl[64] (bv2int %0) (mod #691 64)) (if (or #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 #712 #713) 0 (if #714 1 #816))) 68719476736 := 5066549580791808&70368744177664
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 32 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 64 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 256 := 70368744177664&5066549580791808
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    743  13965   45  1228/1223   744/310  68       0    22.68   0.53)
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 4096 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 8192 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 65536 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 262144 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 8388610 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 8388620 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 8388616 := 70368744177664&5066549580791808
band: (band[53] (if (= #577 52) 1 (if #579 2 #681)) (shl[53] (bv2int %0) (mod #45 53))) 8388608 := 70368744177664&5066549580791808
ramon: poll                 wall=1.002s usage=1.000s mem=25216KiB load=1.00 rootload=0.98
(sat.stats   1200  30930   63  6409/6404  1201/310  68       0    24.13   1.15)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 10831 :time 0.00)
 (sat-cleaner :elim-literals 8 :elim-clauses 1 :cost 13575 :time 0.00)
(sat.stats   1597  51068  167 13752/13747  1663/500 493       0    25.90   1.67)
ramon: poll                 wall=2.000s usage=1.996s mem=31148KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.996s mem=40220KiB load=1.00 rootload=0.99
(sat.stats   2398  59243  372 136530/136525  3925/1964 493       0    42.98   3.64)
ramon: poll                 wall=4.000s usage=3.996s mem=44568KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.996s mem=46104KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.996s mem=47128KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.996s mem=48664KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.996s mem=50456KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=52504KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.996s mem=55064KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.996s mem=58132KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.996s mem=68880KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.996s mem=70412KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.996s mem=72080KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.996s mem=73612KiB load=1.00 rootload=0.99
(sat.stats   4013  67667  493 308805/308800  6741/3189 493       0    75.12  15.33)
ramon: poll                 wall=16.000s usage=15.995s mem=77196KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.995s mem=82060KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.995s mem=83084KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.002s usage=18.999s mem=83852KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.995s mem=84500KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:20:16 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.060s
ramon: group.total          20.012s
ramon: group.utime          19.948s
ramon: group.stime          0.064s
ramon: group.mempeak        85016KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
