ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:24:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         17554 MiB
ramon: sys.mem.avail        62133 MiB
ramon: sys.nprocs           1176
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bin_libmsrpc_vc1228463.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1348993
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
tabu (if (and (bvsle bv[4294967295:32] #16053) (not #18861)) (bvadd bv[1:32] (if #16051 bv[0:32] v487615604)) (if (and #8570 #10235) bv[0:32] v487615604))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw      63     22   111.111     10000         0          0           75      448)
(sat.ddfw      59     46    83.525     20023         0          1          171      539)
(sat.ddfw      49     51   111.306     40058         0          2          144      775)
(sat.ddfw      32    100    111.42     70030         0          3          148     1184)
(sat.ddfw      12     38   117.906    110000         0          4            6     9549)
(sat.ddfw      12     38   141.643    160000         0          5            6    29636)
(sat.ddfw      12    532   108.128    220011         1          6           52    30414)
(sat.ddfw      12   1025   84.9381    290000         1          7           86    30700)
ramon: poll                 wall=1.000s usage=0.979s mem=22632KiB load=0.98 rootload=0.97
(sat.ddfw       4    322   63.5449    370003         2          8           12    31397)
ramon: poll                 wall=2.000s usage=1.979s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       4   1025     44.99    460073         3          9           65    31607)
(sat.ddfw       4   1025    40.806    560007         3         10           63    32403)
ramon: poll                 wall=3.000s usage=2.979s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       3    951   30.6925    670009         4         11           12    32756)
ramon: poll                 wall=4.000s usage=3.979s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   26.3904    790059         5         12           87    33462)
ramon: poll                 wall=5.001s usage=4.978s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   23.8057    920038         6         13           19    33694)
ramon: poll                 wall=6.003s usage=5.982s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   21.3493   1060004         7         14           18    33837)
ramon: poll                 wall=7.000s usage=6.977s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   20.1896   1210013         7         15           24    34967)
ramon: poll                 wall=8.000s usage=7.977s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       3   1025   18.6186   1370003         7         16           22    35191)
ramon: poll                 wall=9.000s usage=8.971s mem=22632KiB load=0.99 rootload=0.99
(sat.ddfw       3   1025    17.993   1540001         9         17           22    36183)
ramon: poll                 wall=10.000s usage=9.970s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       2    130    17.045   1720013        10         18           12    36682)
ramon: poll                 wall=11.000s usage=10.970s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   16.4464   1910018        12         19           91    38167)
ramon: poll                 wall=12.003s usage=11.974s mem=22632KiB load=1.00 rootload=1.01
(sat.ddfw       2   1025   16.0076   2110049        13         20           60    40398)
ramon: poll                 wall=13.000s usage=12.970s mem=22632KiB load=1.00 rootload=0.99
(sat.ddfw       2   1025   15.4968   2320000        14         21           43    42014)
ramon: poll                 wall=14.000s usage=13.970s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   15.2606   2540012        14         22          112    44219)
ramon: poll                 wall=15.000s usage=14.970s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   14.9707   2770081        15         23          123    45451)
ramon: poll                 wall=16.000s usage=15.970s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   14.6173   3010010        15         24           67    47814)
ramon: poll                 wall=17.000s usage=16.970s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   14.2168   3260069        15         25          122    49039)
ramon: poll                 wall=18.000s usage=17.969s mem=22632KiB load=1.00 rootload=1.00
(sat.ddfw       2   1025   13.8946   3520024        17         26           21    50779)
ramon: poll                 wall=19.000s usage=18.969s mem=22632KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.969s mem=22632KiB load=1.00 rootload=1.00
ramon: end                  Mon Dec 30 12:24:28 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.000s
ramon: group.total          19.979s
ramon: group.utime          19.975s
ramon: group.stime          0.004s
ramon: group.mempeak        22888KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.009s
ramon: loadavg              1.00
