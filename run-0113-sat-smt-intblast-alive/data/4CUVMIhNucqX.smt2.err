ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:56:28 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41329 MiB
ramon: sys.mem.avail        61385 MiB
ramon: sys.nprocs           1331
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/4CUVMIhNucqX.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3669620
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   204/204     0/0  63       0    18.54   0.00)
(sat.stats    101    429    0   204/204   101/33  63       0    18.74   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 390 :time 0.00)
(sat.stats    101    429    0   204/204   101/33  63       0    18.74   0.00)
(sat.stats    101    429    0   204/204   101/33  63       0    18.74   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 379018.74 :time 0.00)
(sat.stats    101    429    0   206/206    73/32  63       0    18.74   0.00)
(sat.stats    104    456    1   206/206    76/35  63       0    18.74   0.00)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    524    2   206/206    79/38  63       0    18.74   0.00)
(sat.stats    110    576    3   206/206    82/40  63       0    18.74   0.00)
(sat.stats    113    639    4   206/206    85/41  63       0    18.74   0.00)
(sat.stats    116    703    5   206/206    88/41  63       0    18.74   0.00)
(sat.stats    119    791    6   206/206    91/42  63       0    18.74   0.00)
(sat.stats    122    874    7   206/206    94/42  63       0    18.74   0.01)
(sat.stats    125    956    8   206/206    97/42  63       0    18.74   0.01)
(sat.stats    128   1007    9   206/206   100/42  63       0    18.74   0.01)
(sat.stats    131   1066   10   206/206   103/42  63       0    18.74   0.01)
(sat.stats    134   1133   11   206/206   106/45  63       0    18.74   0.01)
(sat.stats    140   1269   13   206/206   112/50  63       0    18.74   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    222   2746   14   206/206   194/104  63       0    18.93   0.01)
(sat.stats    315   3875   23   206/206   287/144  63       0    18.93   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2447 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2792 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5305 :time 0.00)
(sat.stats    787  11903   44  3111/3111   803/200  77       0    20.46   0.49)
(sat.stats    790  12243   45  3111/3111   806/201  77       0    20.36   0.49)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 5751 :time 0.00)
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #63))) 68719476735 := 68719476735 >>l 34
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 1&68719476732
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #523 #527) 64)) 0 := 2305843009213693952 >>l 61
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 1 := 1&68719476732
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 1&68719476732
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 1 := 68719476732&1
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 7750 :time 0.00)
(sat.stats   1064  16422   70  3905/3902  1098/232 101       0    20.75   0.63)
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 8940 :time 0.00)
lshr: (lshr[36] (bv2int %0) (+ 36 (* 68719476735 #63))) 0 := 17179886134 >>l 15
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 0&68717379584
lshr: (lshr[64] (* 134217728 (bv2int %0)) (mod (+ 63 #523 #527) 64)) 1234201802178559 := 2607179366400 >>l 42
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 42176 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 2 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 24 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 4 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 32 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 16 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 57344 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 6912 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 128 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 7168 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 512 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 2048 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 4096 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 327680 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 16384 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 32768 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 393216 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 524288 := 524288&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 262144 := 524288&68717379584
 (sat-cleaner :elim-literals 8 :elim-clauses 1 :cost 9832 :time 0.00)
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 2&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 2 := 68717379584&2
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 2 := 3&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 8 := 10&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 10&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 8 := 68717379584&10
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 10&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 4 := 68717379584&10
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 26&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 16 := 68717379584&26
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 42&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 32 := 68717379584&42
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 106&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 64 := 68717379584&106
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 170&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 128 := 68717379584&170
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 382&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 256 := 68717379584&382
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 766&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 512 := 68717379584&766
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 1534&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 1024 := 68717379584&1534
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 2558&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 2048 := 68717379584&2558
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 4606&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 4096 := 68717379584&4606
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 14846&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 8192 := 68717379584&14846
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 29182&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 16384 := 68717379584&29182
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 45566&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 32768 := 68717379584&45566
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 78334&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 65536 := 68717379584&78334
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 143870&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 131072 := 68717379584&143870
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 0 := 275966&68717379584
band: (band[36] (if (= #238 63) 633825300104891328711496826880 (if #416 316912650052445664355748413440 #413)) (lshr[64] (* 134217728 #60) (mod #530 64))) 262144 := 68717379584&275966
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 4 := 524287&68717379584
ramon: poll                 wall=1.000s usage=0.987s mem=26572KiB load=0.99 rootload=0.96
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 448 := 276416&68717379584
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 432 := 275967&68717379584
ramon: poll                 wall=2.000s usage=1.985s mem=32020KiB load=1.00 rootload=0.99
band: (band[36] (lshr[36] (bv2int %0) (+ 36 #440)) (if (= #82 35) 2361183241400462868480 (if #444 1180591620700231434240 #512))) 13216 := 262142&68717379584
ramon: poll                 wall=3.000s usage=2.984s mem=35708KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 16950 :time 0.00)
(sat.stats   2469  67634  140 36499/36485  2994/915 370       0    37.45   3.14)
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   2472  67638  141 36499/36485  2997/915 370       0    37.45   3.14)
ramon: poll                 wall=4.000s usage=3.983s mem=48360KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.973s mem=63120KiB load=0.99 rootload=0.99
ramon: poll                 wall=6.000s usage=5.973s mem=67428KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.972s mem=71556KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.971s mem=91336KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.971s mem=93928KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.970s mem=97256KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.970s mem=99444KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.969s mem=99MiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.969s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.969s mem=103MiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.968s mem=104MiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.967s mem=106MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.967s mem=107MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.966s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.961s mem=109MiB load=0.99 rootload=0.99
ramon: poll                 wall=20.000s usage=19.960s mem=110MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:56:48 2024
ramon: root.execname        z3
ramon: root.utime           19.890s
ramon: root.stime           0.080s
ramon: group.total          19.983s
ramon: group.utime          19.895s
ramon: group.stime          0.088s
ramon: group.mempeak        111MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.021s
ramon: loadavg              1.00
