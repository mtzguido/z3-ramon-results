ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:42:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29347 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6b1XDhjA7x3I.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             640683
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1       100     10000        49          0            1        2)
(sat.ddfw       1      1    48.314     20001        98          1            1        3)
(smt.stats    0    101   1276    296  1144/989/94     102/17     2   15   51.76)
(smt.stats    1    202   1833    847  1372/1212/100     197/16     3   21   51.85)
(sat.ddfw       1      1   46.5116     40001       196          2            1        5)
(smt.stats    2    313   2576   2017  1446/1289/104     312/20     5   26   51.95)
(smt.stats    3    414   3466   3547  1518/1357/106     418/26     7   32   52.05)
(sat.ddfw       1      1   39.4737     70001       343          3            1        8)
(smt.stats    4    525   4229   5176  1545/1375/111     541/36     8   32   52.05)
(smt.stats    5    647   6091   7348  1557/1402/111     653/60     9   40   52.15)
ramon: poll                 wall=1.004s usage=0.913s mem=54560KiB load=0.91 rootload=0.90
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   7088   8480  1563/1411/111     754/60     9   40   52.24)
(smt.stats    7    859   9502  10488  1565/1416/111     870/60     9   40   52.24)
(smt.stats    8    981  10781  13016  1580/1420/111    1007/62     9   40   52.24)
(smt.stats    9   1115  11821  14977  1582/1433/118    1138/95    10   50   52.24)
(sat.ddfw       1      1   33.3611    110001       539          4            1       12)
(smt.stats   10   1216  12945  17162  1595/1449/125    1229/103    12   70   52.37)
(smt.stats   11   1327  13750  18370  1610/1450/125    1341/103    12   70   52.37)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  15026  21130  1627/1476/125    1461/103    12   70   52.37)
(smt.stats   13   1583  15928  24219  1665/1482/125    1599/103    12   70   52.37)
(sat.ddfw       1      1   28.4895    160000       784          5            1       17)
ramon: poll                 wall=2.004s usage=1.911s mem=54728KiB load=1.00 rootload=1.00
(smt.stats   14   1730  17074  27274  1768/1541/125    1772/104    12   70   52.46)
(smt.stats   15   1831  18006  29653  1811/1657/125    1877/106    12   70   52.46)
(smt.stats   16   1942  18847  31790  1914/1670/126    1996/125    13   73   52.46)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 2144&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4503599627372640 := 2143 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 2144&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4503599627372640 := 2143 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 8459&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4503599627378955 := 2143 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 8459&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4503599627378955 := 2143 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 4286&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2142 := 2143 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 4286&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 8259 := 2143 << 1
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 4286&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 8259 := 2143 << 1
(smt.stats   17   2064  20114  33581  1957/1781/126    2141/127    13   73   52.63)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 1 := 4385&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4385 := 2192 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 1 := 4385&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4385 := 2192 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 1 := 4383&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4383 := 2192 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 4382&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 4382 := 2192 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&1
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2193 := 2192 << 50
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&1
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2193 := 2192 << 50
(smt.stats   18   2198  22212  36544  2007/1826/137    2275/151    14   75   52.73)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1329&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1329 := 2189 << 47
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2189 << 47
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2189 << 47
(smt.stats   19   2345  25019  39740  2042/1870/148    2422/153    15   82   53.02)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1829587348619264&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2190 := 2189 << 47
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1829587348619264&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 4377 := 2189 << 47
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 2&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2251799813685250 := 2191 << 49
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2191 << 49
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2191 << 49
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1688849860263936&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1125899906842625 := 2191 << 49
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1688849860263936&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1688849860263937 := 2191 << 49
(smt.stats   20   2506  28613  42090  2105/1887/153    2591/159    16   83   53.22)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1970324836974590&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1970324836974590 := 2190 << 48
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1329&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1329 := 2190 << 48
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1329&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1329 := 2190 << 48
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1688849860263936&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 8577 := 2190 << 48
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1688849860263936&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1125899906842623 := 2190 << 48
(smt.stats   21   2607  30580  45394  2142/1954/168    2695/162    17   86   53.35)
(sat.ddfw       1      1   23.8005    220001      1078          6            1       23)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1329&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1329 := 2177 << 35
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2177 << 35
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2177 << 35
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 74801150427136&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 74801150427135 := 2177 << 35
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 74801150427136&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 74801150427135 := 2177 << 35
(smt.stats   22   2718  32984  48598  2189/1997/178    2808/164    18   88   53.56)
(smt.stats   23   2840  36780  52157  2214/2039/188    2930/165    19   90   53.56)
(smt.stats   24   2974  40427  55571  2215/2040/188    3069/165    20   90   53.56)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 2251799813685247&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1233986297899515903 := 2161 << 19
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 2251799813685247&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1233986297899515903 := 2161 << 19
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 2251799813685247&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1233986297899515903 := 2161 << 19
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1125899906842625&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1235112197806358529 := 2161 << 19
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1125899906842623&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2433069698686910463 := 2161 << 19
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1125899906842623&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2435321498500595711 := 2161 << 19
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1125899906842624&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2433069698686910464 := 2161 << 19
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1125899906842624&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 2433069698686910464 := 2161 << 19
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1132986368&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 325 := 2161 << 19
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1132986368&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 326 := 2161 << 19
(smt.stats   25   3121  43139  58869  2258/2041/188    3221/167    20   90   53.66)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1125899906842625&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1125899906842625 := 2163 << 21
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 324&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 324 := 2163 << 21
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 324&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 324 := 2163 << 21
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 4536139776&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 4536139777 := 2163 << 21
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 324&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 324 := 2162 << 20
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1 := 2162 << 20
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1329&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1329 := 2162 << 20
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 2267021312&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 4534042625 := 2162 << 20
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 2267021312&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 4534042625 := 2162 << 20
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1 := 2178 << 36
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1 := 2184 << 42
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 338&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 338 := 2184 << 42
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 338&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 338 := 2184 << 42
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1 := 2183 << 41
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 324&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 324 := 2182 << 40
(smt.stats   26   3282  46164  61793  2351/2094/198    3383/176    21   92   53.95)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1125899906842625&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1125899906842625 := 2182 << 40
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1688849860263934&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 1688849860263934 := 2182 << 40
(smt.stats   27   3459  49836  65599  2430/2232/238    3559/176    22  100   53.95)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 324&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 324 := 2187 << 45
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2187 << 45
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 0 := 2187 << 45
ramon: poll                 wall=3.000s usage=2.817s mem=56208KiB load=0.91 rootload=0.90
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 387028092977152&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1688849860263937 := 2187 << 45
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 387028092977152&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1688849860263937 := 2187 << 45
(smt.stats   28   3560  51457  67731  2481/2237/238    3675/180    23  100   54.05)
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 74309393851613185 := 2188 << 46
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 11258999068426240 := 2188 << 46
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #366) 64)) 74309393851613184 := 2188 << 46
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 844424930131968&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2294284288 := 2188 << 46
band: (band[51] (shl[64] (bv2int %0) (mod #367 64)) (if (or #865 #866 #867 #868 #869 #870 #871 #872 #873 #874 #875 #876 #877 #878 #879 #880 ...) 0 (if #915 1 #941))) 0 := 844424930131968&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 2294284288 := 2188 << 46
(smt.stats   29   3671  53544  70414  2557/2351/259    3792/189    24  106   54.14)
(sat.ddfw       1      1   21.1225    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.774s mem=56948KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   18.7838    370001      1813          8            1       38)
(smt.stats   30   3793  56400  73064  2682/2357/260    3915/192    24  106   54.43)
ramon: poll                 wall=5.000s usage=4.719s mem=56616KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   16.8856    460001      2254          9            1       47)
ramon: poll                 wall=6.000s usage=5.718s mem=56984KiB load=1.00 rootload=1.00
(smt.stats   31   3927  60039  75654  2823/2512/260    4060/196    24  106   54.52)
(sat.ddfw       1      1   15.6691    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   32   4074  62253  81310  2881/2674/272    4234/228    26  126   54.73)
ramon: poll                 wall=7.000s usage=6.862s mem=57048KiB load=1.14 rootload=1.14
(smt.stats   33   4235  68322  89214  2890/2680/273    4397/229    26  126   54.73)
(sat.ddfw       1      1   14.9132    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.856s mem=56972KiB load=0.99 rootload=1.00
(sat.ddfw       1      1   13.7504    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.852s mem=57132KiB load=1.00 rootload=1.00
(smt.stats   34   4412  71548  92278  2985/2688/273    4592/264    27  131   54.92)
ramon: poll                 wall=10.000s usage=9.854s mem=57680KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.7676    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.853s mem=57564KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.9149   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=11.948s mem=57568KiB load=1.10 rootload=1.09
ramon: poll                 wall=13.000s usage=12.947s mem=57576KiB load=1.00 rootload=1.00
(smt.stats   35   4606  73165  95490  3341/2955/276    4793/275    27  131   55.40)
(sat.ddfw       1      1   11.1649   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.948s mem=57616KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=15.018s mem=57704KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   10.6228   1370001      6715         16            1      139)
(smt.stats   36   4707  74471  97546  3563/3280/277    4881/311    28  141   55.50)
ramon: poll                 wall=16.000s usage=16.019s mem=57772KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.004s usage=17.019s mem=57812KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.0331   1540001      7549         17            1      156)
ramon: poll                 wall=18.000s usage=18.008s mem=57844KiB load=0.99 rootload=0.99
(smt.stats   37   4818  75539  99151  3776/3422/277    4999/324    28  141   55.69)
ramon: poll                 wall=19.000s usage=19.008s mem=58128KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    9.5037   1720001      8431         18            1      174)
ramon: poll                 wall=20.004s usage=20.014s mem=58256KiB load=1.00 rootload=1.01
ramon: end                  Fri Nov  1 21:42:56 2024
ramon: root.execname        z3
ramon: root.utime           20.090s
ramon: root.stime           0.010s
ramon: group.total          20.103s
ramon: group.utime          20.091s
ramon: group.stime          0.012s
ramon: group.mempeak        58264KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.097s
ramon: loadavg              1.00
