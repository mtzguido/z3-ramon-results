ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:40:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28972 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/WcHUENyPxrYc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             448473
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts     :learned/bin    :gc          :time)
(sat.stats          :decisions   :clauses/bin :units       :memory       )
(sat.stats      0      0    0     8/8     0/0  70       0    17.93   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 5 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 0 :time 0.00)
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 18446744073709551615 := 0 << 62
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 136 :time 0.00)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 184 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 226 :time 0.00)
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 369 :time 0.00)
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 0 := 0 >>l 1
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 0 := 505 << 62
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 9223372036847742608 := 9223372036847742608 << 61
(sat.stats    166   1732    0   555/553   153/30 100       0    18.60   0.15)
 (sat-cleaner :elim-literals 4 :elim-clauses 57 :cost 588 :time 0.00)
(sat.stats    166   1732    0   576/574    85/21 109       0    18.60   0.15)
(sat.stats    166   1732    0   576/574    85/21 109       0    18.60   0.15)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 3 :elim-bin 201 :time 0.00)
 (sat-probing :cost 406018.70 :time 0.00)
(sat.stats    166   1732    0   102/100    94/33 109       0    18.70   0.15)
(sat.stats    171   1833    1   102/100   101/37 109       0    18.70   0.15)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin    :units         :memory       )
(sat.stats    174   1880    2   102/100   104/37 109       0    18.70   0.15)
(sat.stats    177   1956    3   120/118   107/37 109       0    18.70   0.16)
(sat.stats    180   2004    4   135/133   110/38 109       0    18.70   0.17)
(sat.stats    183   2034    5   141/139   113/38 109       0    18.70   0.17)
(sat.stats    186   2077    6   149/147   116/38 109       0    18.70   0.17)
(sat.stats    189   2124    7   158/156   119/38 109       0    18.70   0.17)
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 23832&0
lshr: (lshr[64] (bv2int %1) (mod (+ #50 #59) 64)) 0 := 47665 >>l 1
(sat.stats    192   2161    8   164/161   122/39 109       0    18.80   0.17)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 426 :time 0.00)
(sat.stats    196   2247    9   199/196   124/40 117       0    18.80   0.17)
(sat.stats    199   2316   10   199/196   127/41 117       0    18.80   0.17)
(sat.stats    202   2405   11   203/200   131/42 117       0    18.80   0.17)
(sat.stats    205   2497   12   211/208   134/42 117       0    18.80   0.18)
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 3268 := 3268 >>l 8
(sat.stats    215   2801   14   267/261   146/44 117       0    18.80   0.19)
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 2 := 2 >>l 12
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 2 := 2 >>l 16
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 3 := 3 >>l 20
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 3 := 3 >>l 24
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 28
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 625 :time 0.00)
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 32
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 36
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 645 :time 0.00)
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 40
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 44
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 48
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 684 :time 0.00)
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 52
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 56
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 60
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 720 :time 0.00)
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 1 >>l 4
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 766 :time 0.00)
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 0 := 4611686018427388408 << 59
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&4611686018427387904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776816 << 58
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 4611686018427388412 := 4611686018427388412 << 55
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&9079256848778919936
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776824 << 54
 (sat-cleaner :elim-literals 11 :elim-clauses 0 :cost 1168 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats       :decisions   :clauses/bin       :units         :memory       )
(sat.stats    384   7158   30  1787/1753   357/103 177       0    19.89   0.26)
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 4611686018427388416 := 4611686018427388416 << 51
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 14705 := 68720525312&1152921504606846976
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 14704 := 68720525312&1152921504606846976
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 12 := 68720525312&1152921504606846976
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 68720525312&1152921504606846976
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776832 << 50
 (sat-cleaner :elim-literals 10 :elim-clauses 0 :cost 2002 :time 0.00)
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 1161928703861587968 := 4611686018427388420 << 47
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&72620543991349248
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776840 << 46
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 77687093572141056 := 4611686018427388456 << 11
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&1130496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776912 << 10
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 1146880 := 4611686018427388464 << 3
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&4480
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776928 << 2
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 4448 := 4611686018427388460 << 7
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&71168
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776920 << 6
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 66560 := 4611686018427388424 << 43
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&4573968371548160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776848 << 42
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 4820258976169984 := 4611686018427388452 << 15
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&17956864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776904 << 14
ramon: poll                 wall=1.000s usage=0.998s mem=26088KiB load=1.00 rootload=0.99
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 4785074604081152 := 4611686018427388448 << 19
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&285212672
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776896 << 18
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 75998243711877120 := 4611686018427388444 << 23
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&4529848320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776888 << 22
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 4496293888 := 4611686018427388440 << 27
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&71940702208
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776880 << 26
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 70866960384 := 4611686018427388432 << 35
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&18141941858304
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776864 << 34
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 18004502904832 := 4611686018427388428 << 39
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&288072046477312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776856 << 38
 (sat-cleaner :elim-literals 11 :elim-clauses 4 :cost 3152 :time 0.00)
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 18279380811776 := 4611686018427388436 << 31
 (sat-cleaner :elim-literals 20 :elim-clauses 0 :cost 3284 :time 0.00)
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&1142461300736
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 0 := 9223372036854776872 << 30
(sat.stats    796  24223   36 21385/21332   851/222 281       0    25.94   1.83)
(sat.stats    804  24469   37 21463/21410   859/226 281       0    26.04   1.88)
 (sat-cleaner :elim-literals 2 :elim-clauses 2 :cost 3570 :time 0.00)
ramon: poll                 wall=2.000s usage=1.997s mem=27348KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 4227 :time 0.00)
ramon: poll                 wall=3.000s usage=2.997s mem=27704KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4270 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 4317 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4571 :time 0.00)
ramon: poll                 wall=4.000s usage=3.996s mem=28228KiB load=1.00 rootload=1.00
lshr: (lshr[63] (bv2int %1) (mod (bv2int %0) 63)) 1 := 17 >>l 6
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #51))) 9223372032559808512 := 9223372036854775806 << 57
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&8935141660703064064
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #123 #124) 64)) 9223372036854776506 := 18446744073709551612 << 56
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 0&8935141660703064064
lshr: (lshr[64] (bv2int %1) (mod (+ #50 #59) 64)) 9223372036854775809 := 1 >>l 6
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 4769 :time 0.00)
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 2 := 2&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 2&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 1 := 8935141660703064064&2
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 2&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 2 := 8935141660703064064&2
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 106688 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 4 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 32 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 8 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 16 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 3889792 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 6507008 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 256 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 10488832 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 29491200 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 92160 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 81920 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 12288 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 8192 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 98304 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 65536 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 978583552 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 1038614528 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 50331648 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 1048576 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 12582912 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 2097152 := 8935141660703064064&1073741824
ramon: poll                 wall=5.000s usage=4.996s mem=29048KiB load=1.00 rootload=0.99
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 8388608 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 805306368 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 33554432 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 201326592 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 134217728 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 536870912 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1073741824&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 1073741824 := 8935141660703064064&1073741824
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 2147483648&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 2147483648 := 8935141660703064064&2147483648
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 4294967296&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 4294967296 := 8935141660703064064&4294967296
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 8589934592&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 8589934592 := 8935141660703064064&8589934592
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 17179869184&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 17179869184 := 8935141660703064064&17179869184
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 34359738368&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 34359738368 := 8935141660703064064&34359738368
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 68719476736&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 68719476736 := 8935141660703064064&68719476736
(sat.stats   1200  60774   43 27808/27753  1379/396 309       0    28.45   5.80)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5252 :time 0.00)
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 137438953472&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 137438953472 := 8935141660703064064&137438953472
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5328 :time 0.00)
ramon: poll                 wall=6.000s usage=5.994s mem=30188KiB load=1.00 rootload=1.00
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 8 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 246784 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 704 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 32 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 256 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 128 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 512 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 21901312 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 2048 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 231702528 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 24576 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 16384 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1617297408 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 65536 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 3940810752 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 12362711040 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 524288 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1048576 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 99153346560 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 12582912 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 8388608 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 16777216 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 87778394112 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 67108864 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 134217728 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 35433480192 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 536870912 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 15032385536 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 47244640256 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 137438953472 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 120259084288 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 8589934592 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 34359738368 := 137438953475&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 68719476736 := 137438953475&8935141660703064064
ramon: poll                 wall=7.000s usage=6.994s mem=32240KiB load=1.00 rootload=0.99
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 4 := 6&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 8 := 10&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 16 := 20&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 32 := 36&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 64 := 92&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 128 := 156&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 256 := 382&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 512 := 540&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 412316860412&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 274877906944 := 8935141660703064064&412316860412
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 687194767356&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 549755813888 := 8935141660703064064&687194767356
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1099512152056&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 1099511627776 := 8935141660703064064&1099512152056
ramon: poll                 wall=8.000s usage=7.993s mem=38128KiB load=1.00 rootload=1.00
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 2199023256060&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 2199023255552 := 8935141660703064064&2199023256060
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 4398046511124&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 4398046511104 := 8935141660703064064&4398046511124
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 8796093022236&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 8796093022208 := 8935141660703064064&8796093022236
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 17592186044416&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 17592186044416 := 8935141660703064064&17592186044416
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 35184372088832&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 35184372088832 := 8935141660703064064&35184372088832
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 70368744177664&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 70368744177664 := 8935141660703064064&70368744177664
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 140737488355328&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 140737488355328 := 8935141660703064064&140737488355328
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 281474976710656&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 281474976710656 := 8935141660703064064&281474976710656
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 562949953421312&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 562949953421312 := 8935141660703064064&562949953421312
ramon: poll                 wall=9.000s usage=8.993s mem=41492KiB load=1.00 rootload=1.00
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 1125899906842624&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 1125899906842624 := 8935141660703064064&1125899906842624
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 2251799813685248&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 2251799813685248 := 8935141660703064064&2251799813685248
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 4503599627370496&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 4503599627370496 := 8935141660703064064&4503599627370496
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 9007199254740992&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 9007199254740992 := 8935141660703064064&9007199254740992
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 18014398509481984&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 18014398509481984 := 8935141660703064064&18014398509481984
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 36028797018963968&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 36028797018963968 := 8935141660703064064&36028797018963968
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 0 := 72057594037927936&8935141660703064064
band: (band[63] (shl[64] (* 2 #50) (mod #125 64)) (lshr[64] (bv2int %1) (mod #128 64))) 72057594037927936 := 8935141660703064064&72057594037927936
ramon: poll                 wall=10.000s usage=9.992s mem=44328KiB load=1.00 rootload=1.00
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1024 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 2048 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 4096 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 8192 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 16384 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 32768 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 65536 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 131072 := 144115188075855871&8935141660703064064
ramon: poll                 wall=11.000s usage=10.990s mem=45420KiB load=1.00 rootload=1.00
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 262144 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 524288 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1048576 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 2097152 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 4194304 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 8388608 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 16777216 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 33554432 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 67108864 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 134217728 := 144115188075855871&8935141660703064064
ramon: poll                 wall=12.003s usage=11.994s mem=46392KiB load=1.00 rootload=1.00
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 268435456 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 536870912 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1073741824 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 2147483648 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 4294967296 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 8589934592 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 17179869184 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 34359738368 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 68719476736 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 2557738924113920 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 2696002511306752 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 2748779069440 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 2199023255552 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1099511627776 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 18981968741924864 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 8796093022208 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 133243217100406784 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 11258999068426240 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1618481116086272 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1829587348619264 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 562949953421312 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 281474976710656 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 1125899906842624 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 13510798882111488 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 117093590311632896 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 18014398509481984 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 108086391056891904 := 144115188075855871&8935141660703064064
band: (band[63] (lshr[63] (bv2int %1) (mod #50 63)) (shl[63] (bv2int %0) (+ 63 #112))) 72057594037927936 := 144115188075855871&8935141660703064064
ramon: poll                 wall=13.000s usage=12.989s mem=47960KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.989s mem=50044KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 6976 :time 0.00)
ramon: poll                 wall=15.000s usage=14.988s mem=50456KiB load=1.00 rootload=1.00
(sat.stats   1699 107567   51 91091/91036  3717/2273 1133       0    49.84  15.36)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7137 :time 0.00)
ramon: poll                 wall=16.000s usage=15.988s mem=50636KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7182 :time 0.00)
ramon: poll                 wall=17.000s usage=16.987s mem=51136KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7422 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7481 :time 0.00)
ramon: poll                 wall=18.000s usage=17.986s mem=53900KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 7647 :time 0.00)
ramon: poll                 wall=19.000s usage=18.986s mem=54176KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 2 :elim-clauses 2 :cost 7715 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 7700 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7697 :time 0.00)
ramon: poll                 wall=20.000s usage=19.985s mem=54204KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:40:23 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.998s
ramon: group.utime          19.966s
ramon: group.stime          0.032s
ramon: group.mempeak        54460KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
