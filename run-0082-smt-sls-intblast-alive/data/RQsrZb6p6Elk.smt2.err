ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:29:24 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28247 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1388
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/RQsrZb6p6Elk.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             803095
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   60.6061     10000        49          0            1        2)
(smt.stats    0    103   1456    577  1068/954/101      83/9     6   28   51.76)
(sat.ddfw       1      1   32.3657     20001        98          1            1        3)
(sat.ddfw       1      1   34.5423     40001       196          2            1        5)
(smt.stats    1    204   2088   1212  1366/1189/102     198/18     7   30   51.85)
(smt.stats    2    315   2406   1649  1450/1256/102     318/21     7   30   51.95)
ramon: poll                 wall=1.000s usage=0.786s mem=54208KiB load=0.79 rootload=0.78
(smt.stats    3    416   2979   3108  1595/1390/102     436/23     7   30   51.95)
(sat.ddfw       1      1   30.0903     70001       343          3            1        8)
(smt.stats    4    527   3901   4623  1645/1491/119     530/41     8   33   52.05)
(smt.stats    5    649   5986   8673  1656/1523/132     633/74    11   62   52.05)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    750   7204  10959  1677/1536/133     741/73    12   63   52.05)
(smt.stats    7    861   8167  14172  1706/1565/133     853/74    12   63   52.24)
(smt.stats    8    983   8925  16490  1726/1589/141     981/99    13   68   52.24)
(sat.ddfw       1      1    28.169    110001       539          4            1       12)
(smt.stats    9   1117  10039  19182  1754/1604/141    1129/99    13   68   52.24)
(smt.stats   10   1218  11289  21260  1762/1617/141    1222/101    14   80   52.24)
(smt.stats   11   1329  12762  23407  1771/1630/141    1339/101    14   80   52.34)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1451  14212  26210  1783/1633/141    1470/101    14   80   52.34)
(smt.stats   13   1585  15146  27400  1788/1647/141    1610/101    14   80   52.34)
(smt.stats   14   1732  17419  30817  1788/1647/141    1757/101    14   80   52.52)
(smt.stats   15   1833  18255  32513  1793/1650/141    1865/102    14   80   52.52)
(smt.stats   16   1944  19681  34510  1796/1653/141    1976/102    14   80   52.52)
(smt.stats   17   2066  20997  35818  1806/1665/141    2097/102    14   80   52.74)
(sat.ddfw       1      1   25.3802    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.725s mem=54856KiB load=0.94 rootload=0.94
(smt.stats   18   2200  22988  39813  1819/1679/146    2205/129    15  101   52.74)
(smt.stats   19   2347  24418  42577  1850/1683/146    2360/131    15  101   52.74)
(smt.stats   20   2508  25342  45466  1970/1831/149    2522/140    16  105   52.74)
(smt.stats   21   2609  25940  47721  1990/1843/149    2616/140    16  105   52.74)
(smt.stats   22   2720  27567  49450  2018/1859/149    2720/143    17  113   52.84)
(sat.ddfw       1      1   22.6504    220001      1078          6            1       23)
(smt.stats   23   2842  28689  51119  2112/1936/149    2842/145    17  113   52.84)
(smt.stats   24   2976  29693  54107  2150/1985/149    2999/145    17  113   52.84)
ramon: poll                 wall=3.000s usage=2.595s mem=55152KiB load=0.87 rootload=0.87
(smt.stats   25   3123  30510  56851  2176/2016/149    3147/145    17  113   52.94)
(smt.stats   26   3284  31497  61212  2206/2037/149    3309/146    17  113   52.94)
(smt.stats   27   3461  33014  65743  2220/2073/149    3487/146    17  113   52.94)
(smt.stats   28   3562  34518  67806  2221/2082/149    3587/146    17  113   52.94)
(smt.stats   29   3673  36430  71034  2226/2086/149    3698/146    17  113   52.94)
(smt.stats   30   3795  39732  73593  2226/2086/149    3820/146    17  113   52.94)
(sat.ddfw       1      1   20.6795    290001      1421          7            1       30)
(smt.stats   31   3929  43321  75874  2226/2086/149    3954/146    17  113   53.10)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   32   4076  45330  79783  2229/2089/149    4098/146    17  113   53.10)
(smt.stats   33   4237  47201  82518  2258/2091/149    4258/147    17  113   53.10)
(smt.stats   34   4414  49076  87096  2296/2137/149    4433/147    17  113   53.35)
(smt.stats   35   4608  49996  92560  2337/2158/150    4627/180    18  114   53.35)
ramon: poll                 wall=4.000s usage=3.593s mem=55696KiB load=1.00 rootload=0.99
(smt.stats   36   4709  50589  94516  2342/2201/150    4728/180    18  114   53.35)
(smt.stats   37   4820  51046  96830  2369/2221/150    4833/181    18  114   53.35)
(smt.stats   38   4942  51901 101017  2378/2231/150    4964/181    18  114   53.35)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021149&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 8796093021149 := 8796093021148 << 17
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021149&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 8796093021149 := 8796093021148 << 17
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021149&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 26388279065565 := 8796093021148 << 17
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 26388279065207 := 8796093021148 << 17
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8795954085888&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093022158 := 8796093021148 << 17
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8795954085888&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093022158 := 8796093021148 << 17
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8795954085888&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093020959 := 8796093021148 << 17
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8795954085888&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8795954085887 := 8796093021148 << 17
(smt.stats   39   5076  53183 103152  2405/2241/150    5098/182    18  114   53.44)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021148&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1152912708513823708 := 8796093021147 << 16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021146&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576460752303422426 := 8796093021147 << 16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796023488512&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093022158 := 8796093021147 << 16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796023488512&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093021146 := 8796093021147 << 16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796023488512&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093021146 := 8796093021147 << 16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796023488512&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093020959 := 8796093021147 << 16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796023488512&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796023488513 := 8796093021147 << 16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021164&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576443160117378028 := 8796093021163 << 32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021164&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576443160117378028 := 8796093021163 << 32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021164&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576443160117378028 := 8796093021163 << 32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021164&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576460752303422444 := 8796093021163 << 32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093022207&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576460752303423487 := 8796093021163 << 32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550199 := 8796093021162 << 31
(sat.ddfw       1      1   18.9036    370001      1813          8            1       38)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020961&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550369 := 8796093021162 << 31
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020961&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550369 := 8796093021162 << 31
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576460752303422071 := 8796093021161 << 30
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576425567931333239 := 8796093021161 << 30
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576425567931333239 := 8796093021161 << 30
(smt.stats   40   5223  55196 105824  2521/2282/160    5299/194    19  116   53.67)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 7671885332480&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093021160 := 8796093021161 << 30
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 7671885332480&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093021160 := 8796093021161 << 30
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 7671885332480&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093020959 := 8796093021161 << 30
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 7671885332480&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796024406017 := 8796093021161 << 30
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550199 := 8796093021164 << 33
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550199 := 8796093021165 << 34
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550199 := 8796093021165 << 34
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550199 := 8796093021166 << 35
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550199 := 8796093021167 << 36
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550199 := 8796093021168 << 37
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550199 := 8796093021169 << 38
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020792&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550200 := 8796093021169 << 38
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020792&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550200 := 8796093021169 << 38
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021168&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550576 := 8796093021169 << 38
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020792&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550200 := 8796093021169 << 38
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021168&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550576 := 8796093021168 << 37
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021168&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550576 := 8796093021168 << 37
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021168&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550576 := 8796093021167 << 36
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021168&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550576 := 8796093021167 << 36
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021167&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550575 := 8796093021166 << 35
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021167&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550575 := 8796093021166 << 35
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093021167&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446744073709550575 := 8796093021166 << 35
(smt.stats   41   5384  58353 108710  2680/2419/191    5463/199    19  116   53.87)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576425567931333239 := 8796093021135 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796022702081&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 26388208746497 := 8796093021135 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093019099&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 26388279063515 := 8796093021135 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093005040&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093021134 := 8796093021135 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020790&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576425567931333238 := 8796093021135 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093005040&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093022158 := 8796093021135 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796022702081&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 149533511057409 := 8796093021135 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093005040&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093021136 := 8796093021135 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576451956210399863 := 8796093021139 << 8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576460752303422071 := 8796093021139 << 8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576460752303422071 := 8796093021139 << 8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021138 << 7
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021136 << 5
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021137 << 6
(smt.stats   42   5561  62113 112359  2771/2536/221    5635/214    20  128   54.14)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021146 << 15
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021140 << 9
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021144 << 13
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021145 << 14
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021141 << 10
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021142 << 11
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021143 << 12
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576478344489466487 := 8796093021132 << 1
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576460752303422071 := 8796093021172 << 41
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576451956210399863 := 8796093021172 << 41
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8796093020791&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 576451956210399863 := 8796093021172 << 41
(smt.stats   43   5755  67642 117144  2867/2635/251    5828/216    20  128   54.33)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 7627861917696&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796024799232 := 8796093021167 << 36
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 7627861917696&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796024799231 := 8796093021167 << 36
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 7627861917696&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8795956576257 := 8796093021167 << 36
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 6597069766656&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093021167 := 8796093021168 << 37
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 6597069766656&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093021169 := 8796093021168 << 37
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 6597069766656&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 8796093022158 := 8796093021168 << 37
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 7284264534016&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446601824392708096 := 8796093021173 << 42
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 7009386627072&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446601549514801152 := 8796093021171 << 40
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 6871947673600&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446601412075847680 := 8796093021170 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446594540128174081 := 8796093021170 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8795956969471&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446594539992121343 := 8796093021170 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 8795956969471&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446462598596788223 := 8796093021170 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 1099511627776&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 7681549008895 := 8796093021170 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 1099511627776&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 6871947673599 := 8796093021170 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 1099511627776&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 1099511627777 := 8796093021170 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (or #808 #809 #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 ...) 0 (if #851 1 #891))) 0 := 1099511627776&0
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 6871947673599 := 8796093021170 << 39
(smt.stats   44   5968  71586 121745  3055/2761/296    6048/225    21  143   54.52)
ramon: poll                 wall=5.000s usage=4.593s mem=57140KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.3779    460001      2254          9            1       47)
(smt.stats   45   6069  72827 123902  3123/2892/332    6134/231    21  143   54.90)
(smt.stats   46   6180  76451 133418  3226/3005/332    6239/232    21  143   54.90)
ramon: poll                 wall=6.000s usage=5.611s mem=57748KiB load=1.02 rootload=1.01
(smt.stats   47   6302  79885 136517  3238/3032/332    6342/244    22  164   55.40)
(smt.stats   48   6436  84008 140282  3267/3059/332    6467/246    22  164   55.40)
(sat.ddfw       1      1   16.0333    560001      2745         10            1       57)
(smt.stats   49   6583  88602 143906  3302/3102/332    6596/248    22  164   55.49)
(smt.stats   50   6744  93896 148196  3317/3119/332    6753/249    22  164   55.72)
ramon: poll                 wall=7.000s usage=6.747s mem=57996KiB load=1.14 rootload=1.14
(smt.stats   51   6921 102241 154776  3334/3137/332    6929/249    22  164   55.82)
(sat.ddfw       1      1   14.8568    670001      3284         11            1       68)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7115 107686 161659  3341/3144/332    7124/249    22  164   55.82)
ramon: poll                 wall=8.000s usage=7.747s mem=58184KiB load=1.00 rootload=1.00
(smt.stats   53   7328 114675 169412  3389/3144/332    7360/258    22  164   55.91)
(sat.ddfw       1      1   13.8408    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.747s mem=58368KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.854s mem=58272KiB load=1.11 rootload=1.11
(sat.ddfw       1      1   12.9508    920001      4509         13            1       93)
(smt.stats   54   7562 117274 172535  3787/3233/332    7599/291    22  164   56.20)
ramon: poll                 wall=11.000s usage=10.854s mem=58416KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.1623   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=11.853s mem=58508KiB load=1.00 rootload=1.00
(smt.stats   55   7663 117737 173444  4183/3807/332    7704/294    22  164   56.59)
ramon: poll                 wall=13.003s usage=12.857s mem=59124KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.4635   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.854s mem=59128KiB load=1.00 rootload=1.00
(smt.stats   56   7774 119403 176216  4509/4126/333    7817/335    23  166   56.68)
(sat.ddfw       1      1   10.8364   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=14.854s mem=59136KiB load=1.00 rootload=1.00
(smt.stats   57   7896 120729 178421  4791/4386/333    7942/350    23  166   56.78)
ramon: poll                 wall=16.003s usage=15.802s mem=59152KiB load=0.94 rootload=0.95
(smt.stats   58   8030 123807 183606  5038/4792/333    8080/357    23  166   56.78)
(sat.ddfw       1      1     10.19   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=16.752s mem=59452KiB load=0.95 rootload=0.94
(smt.stats   59   8177 128748 192337  5328/4945/334    8221/373    24  169   56.87)
ramon: poll                 wall=18.000s usage=17.696s mem=59468KiB load=0.94 rootload=0.95
(sat.ddfw       1      1   9.63494   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=18.665s mem=59468KiB load=0.97 rootload=0.97
(smt.stats   60   8338 131854 197235  5583/5147/334    8405/391    24  169   56.97)
ramon: poll                 wall=20.000s usage=19.661s mem=59888KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:29:44 2024
ramon: root.execname        z3
ramon: root.utime           19.660s
ramon: root.stime           0.010s
ramon: group.total          19.675s
ramon: group.utime          19.663s
ramon: group.stime          0.012s
ramon: group.mempeak        60148KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              0.98
