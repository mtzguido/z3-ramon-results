ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:45:24 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27864 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/aZs7MkatqgSq.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             857506
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   1965    419  1200/1085/111      91/4     6   17   51.96)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&4
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 1 := 2 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&4
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 1 := 2 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&0
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 562949953421311 := 562949953421312 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&1125899906842622
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&1125899906842622
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&1125899906842622
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 2 := 562949953421313 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&4
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&4
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 2 := 562949953421314 << 1
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 1&2
band: (band[50] (if (= #114 49) 1 (if #612 2 #751)) (shl[50] (bv2int %0) (+ 50 #754))) 1 := 1&2
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&2
(smt.stats    1    202   3396   1553  1422/1283/140     175/3     9   26   52.16)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   107.527     10000        49          0            1        2)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&6
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1 := 1&6
(smt.stats    2    313   5898   5778  2174/1959/141     278/44    11   30   52.36)
(smt.stats    3    414   6569   8409  2447/2200/146     382/66    12   31   52.55)
(sat.ddfw       1      1   49.7562     20001        98          1            1        3)
(smt.stats    4    525   7644  10552  2481/2214/151     481/99    14   43   52.65)
(sat.ddfw       1      1   47.1698     40001       196          2            1        5)
(smt.stats    5    647   9580  13436  2514/2263/155     589/103    15   45   52.84)
(sat.ddfw       1      1   35.8423     70001       343          3            1        8)
ramon: poll                 wall=1.004s usage=0.856s mem=55084KiB load=0.85 rootload=0.84
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748   9826  13711  2577/2316/155     690/110    16   46   53.13)
(smt.stats    7    859  10528  15158  2892/2603/155     839/112    16   46   53.03)
(sat.ddfw       1      1   29.6077    110001       539          4            1       12)
(smt.stats    8    981  12254  19043  2977/2686/157     996/150    17   51   53.03)
(smt.stats    9   1115  15883  25892  2997/2743/157    1135/150    17   51   53.13)
(smt.stats   10   1216  24074  39027  3019/2771/157    1224/150    17   51   53.23)
(smt.stats   11   1327  34969  58714  3021/2773/157    1333/150    17   51   53.23)
(sat.ddfw       1      1   26.3569    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.813s mem=55600KiB load=0.96 rootload=0.96
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  42404  73351  3030/2782/158    1463/204    18   52   53.38)
(smt.stats   13   1583  44481  79509  3041/2789/158    1610/204    18   52   53.38)
(smt.stats   14   1730  48094  84939  3091/2797/159    1786/229    19   55   53.38)
(smt.stats   15   1831  49339  87949  3143/2855/159    1890/230    19   55   53.48)
(sat.ddfw       1      1   22.8662    220001      1078          6            1       23)
(smt.stats   16   1942  50714  90429  3209/2898/159    2014/230    19   55   53.48)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842618
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842560
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842368
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842112
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906842112
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906841600
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906840576
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&1125899906840576
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&32766
(smt.stats   17   2064  53791  99210  3279/2999/159    2144/230    19   55   53.48)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 2 := 1125899906842630 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 2 := 1125899906842630 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 2 := 1125899906842630 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 2 := 1125899906842630 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 65538 := 844424930131969 << 16
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 65536 := 1125899906908164 << 15
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 65538 := 844424930131969 << 16
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 65538 := 844424930131969 << 16
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 34720&65536
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 98306 := 844424930131969 << 16
(smt.stats   18   2198  56802 106779  3328/3069/205    2284/292    20   62   53.58)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 596487955435770 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 16 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 32 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 16 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 32 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 64 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 128 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 256 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 512 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1024 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2048 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4096 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8192 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 16384 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 32768 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 65536 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 131072 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 262144 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 524288 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1048576 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2097152 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4194304 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8388608 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 16777216 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 33554432 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 67108864 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 134217728 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 268435456 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 536870912 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1073741824 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 536870912 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1073741824 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2147483648 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4294967296 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4294967296 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8589934592 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 17179869184 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 17179869184 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 34359738368 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 68719476736 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 137438953472 := 596487955435771&844437815296000
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 274877906944 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 549755813888 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 549755813888 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 1099511627776 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 274877906944 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2199023255552 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2199023255552 := 596487955435771&844437819228160
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4398046511104 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 17592186044416 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 35184372088832 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 70368744177664 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 140737488355328 := 596487955435771&879609302220800
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 281474976710656 := 596487955435771&879609302220800
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 562949953421312 := 596487955435771&879609302220800
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 879609302220800 := 1688876703809536 << 49
ramon: poll                 wall=3.000s usage=2.730s mem=57388KiB load=0.92 rootload=0.91
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&845524441759744
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&853221023154176
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&290271069732864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 1416170976575488 := 562993171529728 << 49
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&290271069732864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 1416170976575488 := 562993171529728 << 49
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&325455441821696
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 1451355348664320 := 562994245271552 << 49
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&290271069732864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 575625123466313728 := 580516638097408 << 49
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&509623572299776
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517272723456
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517339766784
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517272723456
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517272723456
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517205549056
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&298517138505728
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8796093022208 := 596487955435771&290275633135616
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 576751027936559104 := 580550997975040 << 49
(sat.ddfw       1      1   20.6307    290001      1421          7            1       30)
(smt.stats   19   2345  59665 111981  3566/3242/415    2454/335    22  113   55.13)
(smt.stats   20   2506  63921 122569  3731/3474/460    2698/405    24  128   55.32)
ramon: poll                 wall=4.000s usage=3.703s mem=57640KiB load=0.97 rootload=0.97
(smt.stats   21   2607  68781 128336  3763/3486/460    2799/405    24  128   55.48)
(sat.ddfw       1      1   18.7266    370001      1813          8            1       38)
(smt.stats   22   2718  72941 143035  3925/3582/464    3038/424    25  153   55.48)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 0 := 1717990240583680 << 13
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 0 := 1717990240649216 << 13
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 0 := 1717990240649216 << 13
(smt.stats   23   2840  77353 158810  4011/3738/465    3195/528    27  158   55.57)
(smt.stats   24   2974  80635 169425  4084/3812/480    3416/540    28  162   55.57)
ramon: poll                 wall=5.000s usage=4.702s mem=57724KiB load=1.00 rootload=1.00
(smt.stats   25   3121  86784 182256  4135/3820/480    3592/542    28  162   55.57)
(sat.ddfw       1      1   17.1168    460001      2254          9            1       47)
(smt.stats   26   3282  94887 199902  4189/3882/481    3736/589    29  191   55.84)
(smt.stats   27   3459 101276 213978  4249/3974/485    3943/623    30  203   55.84)
(smt.stats   28   3560 105403 222331  4259/3988/486    4037/623    30  203   55.93)
ramon: poll                 wall=6.000s usage=5.702s mem=58024KiB load=1.00 rootload=1.00
(smt.stats   29   3671 109791 233102  4288/3995/486    4174/626    31  203   55.93)
(sat.ddfw       1      1   15.8453    560001      2745         10            1       57)
(smt.stats   30   3793 114150 245600  4361/4017/486    4309/627    31  203   55.93)
(smt.stats   31   3927 118878 259870  4505/4106/487    4498/638    32  210   56.12)
ramon: poll                 wall=7.000s usage=6.861s mem=58384KiB load=1.16 rootload=1.16
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 2 := 8680&70918231556096
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 4 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&70369012613120
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 10 := 8680&70369281048576
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 10 := 8680&70369281048576
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 123247 270585  4613/4253/488    4723/710    33  212   56.22)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 12 := 8680&71468255805440
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 8 := 8680&71468255805440
(sat.ddfw       1      1   15.0479    670001      3284         11            1       68)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71469367296000
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744236295194880 << 14
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71469363167232
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744236295194628 << 14
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71469363167232
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744305014671364 << 14
(smt.stats   33   4235 126850 284223  4887/4357/509    5040/721    33  212   56.42)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71468561989632
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744167575668992 << 14
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 8680&71468557860864
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 744167575668740 << 14
(smt.stats   34   4412 134328 306272  4958/4685/520    5314/841    35  224   56.42)
ramon: poll                 wall=8.000s usage=7.856s mem=59028KiB load=0.99 rootload=0.99
(smt.stats   35   4606 142895 325783  4990/4714/526    5574/906    36  239   56.84)
(sat.ddfw       1      1   13.8825    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.855s mem=59160KiB load=1.00 rootload=1.00
(smt.stats   36   4707 147968 340421  5018/4720/526    5670/907    36  239   56.93)
ramon: poll                 wall=10.000s usage=9.852s mem=59164KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   12.8968    920001      4509         13            1       93)
(smt.stats   37   4818 148884 343086  5414/4784/526    5800/908    36  239   57.03)
(smt.stats   38   4940 151321 352335  5593/5198/526    5942/911    36  239   57.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 440)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&69021532160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 13837309924117381120 := 1688987307642890 << 5
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&68753096704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 13837309923848945664 := 1688987307610122 << 5
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&68757225472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 49 #843 #847) 64)) 13837309923853074432 := 1688987307610626 << 5
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415800999936
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 4415800999934 := 844493927022592 << 6
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415532564480
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 4415532564478 := 844493922828288 << 6
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415529418752
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 4415529418750 := 844493922779136 << 6
ramon: poll                 wall=11.000s usage=10.853s mem=59732KiB load=1.00 rootload=1.00
(smt.stats   39   5074 154481 361946  5706/5333/529    5689/964    37  247   57.50)
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415697125376
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 844493925399552 << 6
band: (band[50] (if (= #377 63) 1 (if #589 2 #836)) (shl[64] (* 2 #358) (mod #851 64))) 0 := 33&4415696207872
shl: (shl[50] (bv2int %0) (+ 50 (* 1125899906842623 #110))) 0 := 844493925385216 << 6
(smt.stats   40   5221 159151 373724  5800/5468/539    5894/967    37  247   57.56)
(smt.stats   41   5382 164716 385690  5880/5530/539    6122/1024    38  251   57.66)
(sat.ddfw       1      1   12.0378   1060001      5196         14            1      108)
(smt.stats   42   5559 168312 401627  5930/5633/541    6341/1041    39  253   57.66)
(smt.stats   43   5753 171539 412384  5992/5661/541    6550/1083    40  255   57.75)
ramon: poll                 wall=12.000s usage=11.852s mem=60264KiB load=1.00 rootload=1.00
(smt.stats   44   5966 175046 428228  6386/5720/541    6936/1091    40  255   57.75)
(smt.stats   45   6067 177721 433077  6414/6135/549    7128/1167    41  268   57.85)
(smt.stats   46   6178 182152 447980  6438/6140/549    7275/1168    41  268   57.85)
ramon: poll                 wall=13.000s usage=12.849s mem=60388KiB load=1.00 rootload=1.00
(smt.stats   47   6300 187136 463892  6472/6175/549    7443/1204    42  268   57.94)
(sat.ddfw       1      1    11.296   1210001      5931         15            1      123)
(smt.stats   48   6434 191475 472941  6668/6194/549    7801/1212    42  268   57.94)
(smt.stats   49   6581 199106 483358  6822/6523/549    8041/1212    42  268   58.04)
ramon: poll                 wall=14.000s usage=13.850s mem=60568KiB load=1.00 rootload=1.00
(smt.stats   50   6742 205347 502350  6932/6523/549    8373/1214    42  268   58.13)
(smt.stats   51   6919 211555 534731  7009/6673/549    8839/1215    42  268   58.63)
ramon: poll                 wall=15.004s usage=14.857s mem=60816KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   10.6518   1370001      6715         16            1      139)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7113 219336 564115  7040/6733/557    9171/1499    43  288   58.73)
(smt.stats   53   7326 226368 584154  7381/6745/557    9705/1582    44  319   59.02)
ramon: poll                 wall=16.000s usage=15.856s mem=61348KiB load=1.00 rootload=1.00
(smt.stats   54   7560 235153 624381  7638/7336/560   10521/1795    45  322   59.11)
(smt.stats   55   7661 239533 643854  7653/7349/560   10887/1830    46  328   59.11)
(smt.stats   56   7772 243444 659166  7682/7359/560   11061/1831    46  328   59.21)
(smt.stats   57   7894 247424 675565  7707/7386/560   11231/1832    46  328   59.21)
(sat.ddfw       1      1   10.0675   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=16.855s mem=61620KiB load=1.00 rootload=1.00
(smt.stats   58   8028 249523 690101  7718/7415/560   11399/1834    46  328   59.21)
(smt.stats   59   8175 252330 715544  7733/7420/560   11570/1835    46  328   59.31)
(smt.stats   60   8336 255971 746563  7755/7443/562   11885/1979    47  336   59.31)
(smt.stats   61   8513 260395 778515  7776/7478/563   12535/2161    48  349   59.40)
ramon: poll                 wall=18.000s usage=17.855s mem=61840KiB load=1.00 rootload=1.00
(smt.stats   62   8707 269810 823428  7792/7489/563   13422/2161    48  349   59.59)
(smt.stats   63   8920 278335 862224  7884/7545/564   14137/2693    49  357   59.69)
(sat.ddfw       1      1   9.54654   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=18.854s mem=62184KiB load=1.00 rootload=1.00
(smt.stats   64   9154 290973 889920  7927/7599/564   14929/2694    49  357   59.92)
ramon: poll                 wall=20.000s usage=19.856s mem=62592KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:45:44 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.020s
ramon: group.total          19.933s
ramon: group.utime          19.909s
ramon: group.stime          0.024s
ramon: group.mempeak        62848KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.082s
ramon: loadavg              0.99
