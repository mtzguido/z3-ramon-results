ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:37:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41152 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1250
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/cj4tmKkldhG9.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3024650
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2237   1167   624/558/98     104/17     6   15   18.65)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&44
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 44 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&44
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 44 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&43
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 1 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 1 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&1
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 1 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&20
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 20 := 44 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 21 := 22 << 2
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 21 := 22 << 2
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 21 := 22 << 2
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 89 := 22 << 2
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&88
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&88
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&536
(smt.stats    1    202   2895   2449  1125/1022/149     241/31     9   36   19.05)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2 := 2&216
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&216
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2 := 2&216
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2&216
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2 := 2&216
(smt.stats    2    313   4969   8052  1342/1063/149     426/48     9   36   19.14)
(smt.stats    3    414   7063   9885  1452/1322/152     600/71    11   41   19.24)
(smt.stats    4    525   9425  11946  1470/1324/158     843/72    11   41   19.37)
(smt.stats    5    647  10965  13588  1614/1351/158    1009/116    12   54   19.48)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  11711  14430  1884/1635/159    1145/122    13   56   19.57)
(smt.stats    7    859  13181  17886  2089/1815/159    1331/124    13   56   19.67)
(smt.stats    8    981  14786  22023  2176/2034/162    1694/142    14   63   19.67)
(smt.stats    9   1115  16559  26770  2209/2057/163    2063/166    15   64   19.76)
ramon: poll                 wall=1.000s usage=0.954s mem=20924KiB load=0.95 rootload=0.94
(smt.stats   10   1216  17884  32407  2335/2109/165    2264/233    16   66   19.86)
(smt.stats   11   1327  19407  38456  2379/2211/165    2526/256    17   79   19.86)
(smt.stats   12   1449  20987  43533  2406/2255/165    2835/259    17   79   20.05)
(smt.stats   13   1583  22130  48507  2445/2283/165    3022/260    17   79   20.05)
(smt.stats   14   1730  23366  54590  2453/2318/168    3359/407    18   84   20.05)
(smt.stats   15   1831  25022  59732  2461/2320/168    3506/407    18   84   20.05)
(smt.stats   16   1942  26518  65358  2465/2330/168    3701/456    19   88   20.15)
(smt.stats   17   2064  27457  70876  2465/2330/170    3971/466    20   90   20.15)
(smt.stats   18   2198  29271  77279  2472/2333/170    4183/466    20   90   20.15)
(smt.stats   19   2345  31773  88081  2480/2345/170    4368/466    20   90   20.29)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 8388608&8390160
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 8388608&8390160
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 8388608&8390160
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8388608 := 8388608&8390160
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8390160 := 8390160 << 23
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8388608 := 8388608&8390160
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8390160 := 8390160 << 23
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8388608 := 8388608&8390161
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8390161 := 8390160 << 23
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8388608 := 8388608&16777213
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 16777213 := 8390160 << 23
(smt.stats   20   2506  33206  94795  2534/2395/196    4716/491    21   93   20.38)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&4195385
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097148 := 2097152&4195385
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 304 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 320 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 384 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 512 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1024 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 304 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 320 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 384 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 512 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1024 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4096 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8192 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 16384 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 32768 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 65536 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 131072 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1048576 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1048576 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&4195565
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4352 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4608 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4608 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 4608 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 5120 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 6144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 20480 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 16384 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 65536 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 131072 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 65536 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 16384 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 262144 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1048576 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1048576 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195381
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195385
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 524288 := 2097152&4195385
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&6292233
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 6292233 := 8389828 << 21
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2097152 := 2097152&6292233
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 6292233 := 8389828 << 21
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   21   2607  34640 100488  2716/2561/345    4908/541    22  135   20.87)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 128 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 128 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&10485761
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&10486017
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 10486017 := 8389854 << 8
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&16776957
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&8388605
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8388605 := 8389854 << 8
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 256 := 256&8388605
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 8388605 := 8389854 << 8
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 512&6291457
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 6291457 := 8389852 << 9
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 512&2097153
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 2097153 := 8389852 << 9
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 512&2097153
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 2097153 := 8389852 << 9
(smt.stats   22   2718  36787 107156  2798/2646/366    5336/681    23  147   21.06)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2048&2097153
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2048&2099201
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 2099201 := 8389848 << 11
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2048&2539777
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 2048 := 2048&2541825
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 23 #457 #461) 32)) 2541825 := 8389848 << 11
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1024 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1024 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539524 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539524 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539524 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539525 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 2539525 := 4194924 << 12
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2046 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2045 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 256 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 512 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2044 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 2040 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 256 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 112 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 112 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 96 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 64 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 32 := 2048&2539520
(smt.stats   23   2840  39131 113345  2950/2754/424    5624/690    23  147   21.36)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 32 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 2048&2539520
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 16 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 12 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 40 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 32 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 32 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 8 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 64 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 64 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 64 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 128 := 2048&2539520
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 128 := 2048&2539520
(smt.stats   24   2974  41599 124736  3063/2895/493    6159/742    24  191   21.85)
ramon: poll                 wall=2.000s usage=1.952s mem=23256KiB load=1.00 rootload=0.99
(smt.stats   25   3121  46316 134871  3183/2908/494    6820/746    24  191   21.95)
(smt.stats   26   3282  49557 140147  3393/3052/494    7063/949    25  203   22.14)
(smt.stats   27   3461  54809 155609  3623/3454/512    7755/1097    26  214   22.33)
(smt.stats   28   3562  57683 162263  3797/3604/516    8077/1101    26  214   22.42)
ramon: poll                 wall=3.000s usage=2.950s mem=23956KiB load=1.00 rootload=1.00
(smt.stats   29   3673  59634 167218  3962/3607/517    8202/1192    27  270   22.52)
(smt.stats   30   3795  60265 168778  4227/3836/517    8380/1194    27  270   22.72)
(smt.stats   31   3929  60899 171240  4786/4259/517    8686/1195    27  270   22.81)
(smt.stats   32   4076  65654 185893  4833/4632/519    9548/1369    28  278   23.00)
ramon: poll                 wall=4.000s usage=3.950s mem=24464KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   33   4237  71060 207860  4968/4650/519   10039/1374    28  278   23.10)
(smt.stats   34   4414  77642 231233  5186/4990/521   11273/1546    29  284   23.29)
(smt.stats   35   4608  84818 250611  5212/5014/527   11991/1546    29  284   23.48)
(smt.stats   36   4709  87284 258510  5321/5056/528   12324/1914    30  312   23.57)
(smt.stats   37   4820  89113 269243  5426/5150/533   12955/1914    30  312   23.96)
ramon: poll                 wall=5.002s usage=4.954s mem=25600KiB load=1.00 rootload=1.00
(smt.stats   38   4942  90117 273542  5726/5242/533   13260/1916    30  312   24.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5076  93636 284217  5770/5548/540   13845/1916    30  312   24.05)
(smt.stats   40   5223  97419 295279  5883/5590/540   14065/2183    31  350   24.15)
ramon: poll                 wall=6.000s usage=5.950s mem=25600KiB load=1.00 rootload=1.00
(smt.stats   41   5384 100350 316223  6052/5713/540   14721/2185    31  350   24.25)
(smt.stats   42   5561 103799 331652  6147/5899/540   15491/2194    31  350   24.34)
ramon: poll                 wall=7.000s usage=6.950s mem=25856KiB load=1.00 rootload=0.99
(smt.stats   43   5755 107642 343747  6396/6029/540   16016/2200    31  350   24.53)
(smt.stats   44   5968 110998 353767  6744/6298/540   16402/2212    31  350   24.63)
(smt.stats   45   6069 114394 364128  6837/6629/540   16877/2212    31  350   24.63)
(smt.stats   46   6180 117804 379550  6927/6643/540   17163/2214    31  350   24.73)
ramon: poll                 wall=8.000s usage=7.949s mem=26368KiB load=1.00 rootload=1.00
(smt.stats   47   6302 119914 387999  7028/6741/540   17440/2227    31  350   24.82)
(smt.stats   48   6436 122377 400980  7186/6908/540   17938/2228    31  350   24.92)
(smt.stats   49   6583 125477 411111  7209/7012/541   18507/2601    32  354   25.24)
(smt.stats   50   6744 130231 439632  7235/7030/541   19392/2601    32  354   25.34)
ramon: poll                 wall=9.000s usage=8.949s mem=26940KiB load=1.00 rootload=1.00
(smt.stats   51   6921 134231 463012  7379/7183/546   20170/2776    33  367   25.43)
(smt.stats   52   7115 138438 479570  7479/7184/546   20680/2780    33  367   25.62)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   53   7328 142000 516545  7683/7377/546   21316/2783    33  367   25.62)
ramon: poll                 wall=10.000s usage=9.949s mem=27196KiB load=1.00 rootload=1.00
(smt.stats   54   7562 148457 532274  7915/7493/546   21816/2937    34  383   25.72)
(smt.stats   55   7663 151420 546930  8125/7874/546   22279/2938    34  383   25.72)
(smt.stats   56   7774 153056 557608  8324/7954/546   22658/2951    34  383   25.81)
(smt.stats   57   7896 155804 568972  8463/8154/546   22981/2958    34  383   25.91)
(smt.stats   58   8030 159646 591191  8551/8309/548   24139/3137    35  391   26.00)
ramon: poll                 wall=11.000s usage=10.949s mem=27708KiB load=1.00 rootload=1.00
(smt.stats   59   8177 165183 633523  8674/8381/548   24980/3140    35  391   26.20)
(smt.stats   60   8338 169242 652008  8835/8524/549   25345/3350    36  393   26.39)
ramon: poll                 wall=12.000s usage=11.949s mem=27964KiB load=1.00 rootload=1.00
(smt.stats   61   8515 172415 671093  9009/8809/551   26318/3352    36  393   26.49)
(smt.stats   62   8709 175898 690362  9240/8820/551   26836/3354    36  393   26.59)
ramon: poll                 wall=13.000s usage=12.949s mem=28476KiB load=1.00 rootload=1.00
(smt.stats   63   8922 178594 707759  9713/9098/551   27616/3357    36  393   26.90)
(smt.stats   64   9156 184157 765762  9797/9566/552   28855/3544    37  427   27.00)
(smt.stats   65   9413 189485 818684 10018/9756/553   29838/3586    38  431   27.09)
ramon: poll                 wall=14.002s usage=13.953s mem=28732KiB load=1.00 rootload=1.00
(smt.stats   66   9514 190656 832135 10084/9864/554   30670/3586    38  431   27.28)
(smt.stats   67   9625 192687 848475 10114/9897/554   31021/3812    39  435   27.28)
(smt.stats   68   9747 195381 870563 10187/9940/554   31437/3813    39  435   27.28)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   69   9881 198327 889522 10330/10057/554   31847/3819    39  435   27.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10028 201070 908485 10409/10171/554   32513/3824    39  435   27.47)
ramon: poll                 wall=15.000s usage=14.949s mem=28988KiB load=1.00 rootload=1.00
(smt.stats   71  10189 203349 939796 10485/10227/554   33111/3826    39  435   27.56)
(smt.stats   72  10366 206689 970028 10661/10332/554   33633/3826    39  435   27.66)
ramon: poll                 wall=16.002s usage=15.953s mem=29500KiB load=1.00 rootload=1.00
(smt.stats   73  10560 209421 995683 10893/10605/555   34167/4214    40  443   27.75)
(smt.stats   74  10773 211299 1003223 11175/10713/555   34792/4219    40  443   27.88)
ramon: poll                 wall=17.000s usage=16.949s mem=29500KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   75  11007 214652 1029403 11384/11064/555   35750/4227    40  443   28.07)
(smt.stats   76  11264 219858 1059842 11594/11206/555   36430/4235    40  443   28.17)
ramon: poll                 wall=18.000s usage=17.949s mem=29756KiB load=1.00 rootload=1.00
(smt.stats   77  11546 223874 1087933 12085/11521/555   37250/4246    40  443   28.36)
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 1&12624942
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 0 := 14701079 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 1&12624942
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 0 := 14701079 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 1&12624942
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 5 := 14701079 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 1&12624942
shl: (shl[24] (bv2int %0) (+ 24 (* 16777215 #108))) 5 := 14701079 << 1
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 1 := 1&12624942
band: (band[24] (if (= #242 31) 1 (if #346 2 #450)) (shl[32] (* 2 #106) (mod #465 32))) 0 := 1&12624942
band: (band[24] (if (= #112 23) 1 (if #366 2 #410)) (shl[24] (bv2int %0) (+ 24 #413))) 1 := 1&12624942
(smt.stats   78  11647 225924 1101292 12225/11993/561   37907/4488    41  444   28.55)
(smt.stats   79  11758 228267 1118006 12283/12043/571   38741/4489    41  444   28.65)
ramon: poll                 wall=19.000s usage=18.949s mem=30268KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.949s mem=30268KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:37:49 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          19.999s
ramon: group.utime          19.967s
ramon: group.stime          0.032s
ramon: group.mempeak        30504KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.048s
ramon: loadavg              1.00
