ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:15:05 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41691 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/PnUYYK6AshKV.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2950167
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 1&61
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 1&61
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 2&61
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 2 := 44 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 2&61
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 2 := 44 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 2&61
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 2 := 44 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 42&61
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 42&61
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 42&61
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 6&61
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 2&61
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 2 := 44 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 1&61
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1 := 1&61
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 1 := 44 << 7
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1 := 1&61
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 1 := 44 << 7
(smt.stats    0    101   4265    879  1100/991/124      94/25     6   23   19.15)
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 0&4052807
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 137438953472 := 60 << 23
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 0&4052807
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 137438953472 := 60 << 23
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 0&4052807
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 137438953472 := 60 << 23
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 48 := 48&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 48&4052807
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 48 := 60 << 23
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 54&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 48&4052807
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 48 := 60 << 23
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 137438953471 := 60 << 23
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 137438953470 := 60 << 23
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 2 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 4 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 8 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 16 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 32 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 64 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 32 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 64 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 128 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 256 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 512 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1024 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 2048 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 4096 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 8192 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 16384 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 32768 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 65536 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 131072 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 262144 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 524288 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1048576 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 2097152 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 4160 := 503316480&4052807
(smt.stats    1    202   6624   2273  1745/1571/179     190/30     8   36   19.83)
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 6144 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 8192 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 16384 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 32768 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 65536 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 131072 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 262144 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 524288 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1048576 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 2097152 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 32768 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 65536 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 131072 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 262144 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 65536 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 32768 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139264 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139264 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139328 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139392 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139520 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139776 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139335 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139328 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139270 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139268 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 139264 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 655360 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 524288 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1048576 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1048576 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 2097152 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 2097152 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 64 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 256 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 512 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 512 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 512 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 128 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 64 := 503316480&4052807
(smt.stats    2    313   8625   4189  1997/1710/227     394/48    10   50   20.03)
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 32 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 32 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 32 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 6 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 137438953471 := 60 << 23
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 2 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 4 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 8 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 16 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 32 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 64 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 128 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 256 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 512 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1024 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 2048 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 4096 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 8192 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 16384 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 32768 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 65536 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 131072 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 262144 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 524288 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1048576 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 2097152 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 503316481 := 60 << 23
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 2048 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 2048 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 2048 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1536 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1024 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1088 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1040 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1028 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1028 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1040 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1048 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1040 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 128 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 128 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 128 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1540 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1544 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1544 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1540 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1552 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1552 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1600 := 503316480&4052807
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 503316480&4052807
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1600 := 503316480&4052807
(smt.stats    3    414  10936   6413  2161/1924/425     597/139    12   86   20.91)
(smt.stats    4    525  13098  10164  2318/2100/473     674/185    17  141   21.20)
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 8388740&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 8388740 := 1 << 1
(smt.stats    5    647  17073  14629  2540/2151/476     863/190    18  143   21.49)
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 8388996&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 137447342468 := 1 << 1
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 8388996&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 137447342468 := 1 << 1
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 2&0
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 8388608 := 1 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  21530  23710  2850/2364/481    1024/205    19  145   21.59)
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 2 := 2 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 3&1
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1 := 3&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 3 := 2 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1 := 3&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 3 := 2 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 8&1
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 16777216 := 2 << 2
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 8&1
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 16777216 := 2 << 2
(smt.stats    7    859  26758  29900  2950/2635/486    1182/226    20  146   21.79)
(smt.stats    8    981  31026  38548  3114/2817/502    1702/310    23  158   22.26)
(smt.stats    9   1115  36940  49480  3169/2850/511    1997/408    25  173   22.36)
(smt.stats   10   1216  40863  59766  3218/2918/520    2229/459    28  198   22.55)
ramon: poll                 wall=1.000s usage=0.941s mem=23948KiB load=0.94 rootload=0.92
(smt.stats   11   1327  45266  70333  3231/2923/520    2563/460    28  198   22.65)
(smt.stats   12   1449  50229  80419  3305/3000/526    3271/556    29  208   22.84)
(smt.stats   13   1583  55880 100279  3325/3021/528    3644/639    30  227   22.93)
(smt.stats   14   1730  66589 125932  3335/3031/530    4044/681    31  228   22.93)
(smt.stats   15   1831  72024 137987  3357/3033/530    4342/707    32  234   23.14)
(smt.stats   16   1942  76528 154460  3441/3106/532    4575/768    33  234   23.23)
(smt.stats   17   2064  82848 178174  3465/3137/534    4764/791    34  234   23.23)
(smt.stats   18   2198  90169 197733  3503/3144/534    5023/800    35  241   23.61)
ramon: poll                 wall=2.000s usage=1.941s mem=25316KiB load=1.00 rootload=1.00
(smt.stats   19   2345  96640 214938  3671/3303/544    5616/864    37  269   23.70)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   20   2506 101804 232294  3795/3468/551    6379/884    38  274   23.89)
(smt.stats   21   2607 106788 240798  3902/3471/551    6650/978    39  288   23.89)
ramon: poll                 wall=3.000s usage=2.940s mem=25900KiB load=1.00 rootload=1.00
(smt.stats   22   2718 110761 249857  4234/3667/551    6907/981    39  288   24.07)
(smt.stats   23   2840 117901 267956  4303/3941/551    7208/984    39  288   24.17)
(smt.stats   24   2974 122376 285010  4349/4011/551    8001/985    39  288   24.26)
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 2&0
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 3 := 1 << 1
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 2&0
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 3 := 1 << 1
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 8&1
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 1 := 8&1
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 1 := 8&1
(smt.stats   25   3121 125601 303755  4387/4054/556    8851/1195    40  291   24.72)
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 4&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 137438953476 := 3 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 137220&3
shl: (shl[64] (bv2int %0) (mod (+ #101 #297) 64)) 137220 := 3 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 24&3
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 7 := 3 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 24&3
shl: (shl[37] (bv2int %0) (mod (bv2int %0) 37)) 7 := 3 << 3
band: (band[37] (shl[64] (bv2int %0) (mod #298 64)) (if (or #685 #686) 0 (if #687 1 #834))) 0 := 24&3
band: (band[37] (shl[37] (bv2int %0) (mod #101 37)) (if (= #564 36) 0 (if #566 1 #665))) 2 := 24&3
(smt.stats   26   3282 130536 314263  4568/4098/559    9300/1198    40  291   24.82)
ramon: poll                 wall=4.000s usage=3.940s mem=26596KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   27   3459 135107 326399  4828/4473/573   10121/1334    41  299   25.29)
(smt.stats   28   3560 139535 337460  4899/4543/573   10394/1338    41  299   25.29)
ramon: poll                 wall=5.000s usage=4.939s mem=26972KiB load=1.00 rootload=0.99
(smt.stats   29   3671 145452 351645  5008/4567/573   10800/1439    42  335   25.39)
ramon: poll                 wall=6.000s usage=5.939s mem=27072KiB load=1.00 rootload=1.00
(smt.stats   30   3793 151794 372542  5183/4694/573   11268/1442    42  335   25.49)
(smt.stats   31   3927 160778 393119  5379/4861/573   12560/1448    42  335   25.79)
ramon: poll                 wall=7.001s usage=6.940s mem=27372KiB load=1.00 rootload=1.01
(smt.stats   32   4074 167740 405739  5509/5052/574   13253/1723    43  335   26.36)
ramon: poll                 wall=8.000s usage=7.939s mem=28000KiB load=1.00 rootload=0.99
(smt.stats   33   4235 176037 426065  5687/5209/574   14182/1726    43  335   26.17)
(smt.stats   34   4412 183219 436216  5866/5354/574   14891/1734    43  335   26.27)
ramon: poll                 wall=9.001s usage=8.938s mem=28020KiB load=1.00 rootload=1.00
(smt.stats   35   4606 191952 482557  5933/5590/576   16374/2057    44  335   26.45)
ramon: poll                 wall=10.000s usage=9.936s mem=28512KiB load=1.00 rootload=1.00
(smt.stats   36   4707 199575 499890  6051/5594/576   16600/2183    45  336   26.68)
ramon: poll                 wall=11.000s usage=10.936s mem=28512KiB load=1.00 rootload=1.00
(smt.stats   37   4818 203524 515564  6302/5716/576   16845/2187    45  336   26.78)
(smt.stats   38   4940 208074 532878  6509/6017/576   17790/2191    45  336   26.87)
(smt.delete-inactive-clauses  :num-deleted-clauses 586)
ramon: poll                 wall=12.001s usage=11.928s mem=28616KiB load=0.99 rootload=0.99
(smt.stats   39   5074 212804 545569  6622/6232/576   18020/2193    45  336   27.16)
(smt.stats   40   5221 219728 579126  6674/6289/577   18647/2489    46  338   27.28)
(smt.stats   41   5382 224516 604922  6750/6367/577   19056/2489    46  338   27.47)
ramon: poll                 wall=13.000s usage=12.926s mem=29316KiB load=1.00 rootload=1.00
(smt.stats   42   5560 229596 629601  6826/6467/578   20984/2801    47  341   27.57)
(smt.stats   43   5754 237341 654979  7072/6468/579   21852/2808    47  341   27.67)
ramon: poll                 wall=14.000s usage=13.926s mem=29448KiB load=1.00 rootload=1.00
(smt.stats   44   5967 243786 689643  7269/6737/579   22585/2812    47  341   27.86)
(smt.stats   45   6068 248707 706170  7327/6928/580   23720/2889    48  343   28.05)
ramon: poll                 wall=15.000s usage=14.926s mem=29704KiB load=1.00 rootload=1.00
(smt.stats   46   6179 255431 728391  7464/6981/580   24482/2892    48  343   28.14)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6301 262459 757797  7716/7143/580   25113/2895    48  343   28.48)
ramon: poll                 wall=16.000s usage=15.926s mem=30084KiB load=1.00 rootload=1.00
(smt.stats   48   6435 268193 780971  7923/7564/584   27101/3111    49  349   28.67)
(smt.stats   49   6582 276784 792658  7989/7570/584   27443/3115    49  349   28.96)
ramon: poll                 wall=17.000s usage=16.926s mem=30516KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.925s mem=30704KiB load=1.00 rootload=1.00
(smt.stats   50   6743 285752 806067  8152/7660/584   28052/3116    49  349   29.15)
ramon: poll                 wall=19.000s usage=18.925s mem=30832KiB load=1.00 rootload=1.00
(smt.stats   51   6920 295204 821974  8384/7876/584   29227/3419    50  367   29.34)
ramon: poll                 wall=20.000s usage=19.925s mem=31172KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:15:25 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.989s
ramon: group.utime          19.969s
ramon: group.stime          0.020s
ramon: group.mempeak        31428KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
