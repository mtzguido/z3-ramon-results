ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:22:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25687 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/R1UE7fA8iDeA.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             30478
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4984    944  1234/1085/98     106/28     4   15   19.25)
(smt.stats    1    202   6910   2890  2257/2045/105     351/39     8   24   19.45)
(smt.stats    2    313   8844   5077  2310/2080/106     466/47    10   26   19.55)
(smt.stats    3    414  10009   7347  2443/2221/108     561/66    11   29   19.55)
(smt.stats    4    525  11099  10012  2459/2234/109     671/64    12   32   19.67)
(smt.stats    5    647  12473  12404  2480/2255/112     794/73    13   33   19.78)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  13116  13347  2479/2255/112     893/78    14   37   19.78)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&8796093022207
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288195191779622912 := 35184372088831 << 44
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&8796093022207
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 35184371056640 := 35184371056640 << 44
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&8796093022207
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288230376151711744 := 8796093038593 << 44
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8796093022207 := 17592186044416&8796093022207
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8796093022206 := 17592186044416&8796093022207
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8796093022204 := 17592186044416&8796093022207
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8796093022200 := 17592186044416&8796093022207
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 17592186044416&8796093022207
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 1064965 := 1064965 << 44
(smt.stats    7    859  14272  14269  2592/2270/123    1008/84    15   40   19.98)
(smt.stats    8    981  14643  14885  2682/2379/130    1134/88    15   40   19.98)
(smt.stats    9   1115  16525  18119  2744/2503/133    1266/88    15   40   20.07)
(smt.stats   10   1216  19008  21778  2778/2540/138    1356/92    17   52   20.07)
(smt.stats   11   1327  21031  25729  2794/2564/139    1462/96    18   53   20.07)
(smt.stats   12   1449  22607  28523  2811/2574/141    1589/99    19   55   20.07)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   13   1583  24577  32257  2854/2614/148    1725/117    20   68   20.19)
(smt.stats   14   1730  28126  38571  2861/2629/148    1884/127    21   71   20.19)
(smt.stats   15   1831  29671  41880  2904/2632/148    1989/128    21   71   20.31)
(smt.stats   16   1942  31983  46617  2915/2681/148    2110/147    21   71   20.31)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 6 := 7356425&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 6 := 7356425&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 6 := 7356426&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 10 := 7356432&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 10 := 7356426&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288371113647423498 := 1064962 << 7
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 10 := 7356432&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 10 := 7356426&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288371113647423498 := 1048576 << 7
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 10 := 7356426&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288371113647423498 := 1048576 << 7
(smt.stats   17   2064  35226  49316  2968/2697/149    2250/191    22   77   20.31)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 10 := 7356432&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 10 := 7356426&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288371113647423498 := 1048576 << 7
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 10 := 7356426&63
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288371113647423498 := 1064962 << 7
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 18 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 59 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 19 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 18 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 18 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 18 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 9 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 16 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 32 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 49 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 32 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 16 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 32 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8 := 134217728&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 8 := 134217984&63
ramon: poll                 wall=1.000s usage=0.912s mem=21520KiB load=0.91 rootload=0.91
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 16 := 136316672&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 16 := 136316672&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 16 := 136316672&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 32 := 136316672&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 32 := 136316672&63
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 32 := 136316928&63
(smt.stats   18   2198  37112  54600  3081/2841/212    2390/216    24   92   20.40)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 64 := 136317200&127
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 80 := 136317264&127
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 136317264 := 0 << 8
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 80 := 136317200&127
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 80 := 136317200&127
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 80 := 136317200&127
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 80 := 136317264&127
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 136317264 := 0 << 8
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 80 := 136317264&127
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 136317264 := 0 << 8
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 272630528&127
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 8796095135755 := 1064963 << 8
(smt.stats   19   2345  38659  57206  3276/2870/229    2576/245    25   93   20.92)
(smt.stats   20   2506  40810  62569  3387/3141/243    2763/273    26  104   20.92)
(smt.stats   21   2607  43652  68079  3402/3158/245    2905/298    27  109   20.92)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 3&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 3 := 3 << 1
(smt.stats   22   2718  46017  74337  3436/3170/246    3046/311    28  112   21.02)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 16&1
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 16 := 16 << 2
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 16&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 16 := 16 << 3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 1048584&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 1048584 := 1048584 << 1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 1048584&0
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 1048584 := 1048584 << 1
(smt.stats   23   2840  48563  83343  3537/3237/251    3244/337    29  114   21.02)
(smt.stats   24   2974  51529  92791  3575/3325/269    3426/360    31  139   21.16)
(smt.stats   25   3121  53918  96949  3649/3345/270    3565/390    32  155   21.16)
(smt.stats   26   3282  58688 108297  3667/3415/270    3745/397    33  156   21.25)
(smt.stats   27   3459  63019 120255  3750/3480/270    3939/398    33  156   21.42)
(smt.stats   28   3560  65519 128997  3769/3493/279    4107/427    34  164   21.53)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&511
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 0 := 0 << 10
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&511
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 0 := 0 << 10
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&511
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 0 := 0 << 10
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&511
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 26388276985858 := 0 << 10
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&511
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 0 := 0 << 10
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&511
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 26388276985858 := 0 << 10
(smt.stats   29   3671  67147 133530  3827/3523/279    4243/445    35  169   21.53)
(smt.stats   30   3793  71504 150642  3838/3558/293    4410/448    36  172   21.64)
ramon: poll                 wall=2.000s usage=1.912s mem=22840KiB load=1.00 rootload=1.00
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&1099511627775
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 35184372088832 := 31061204533248 << 41
(smt.stats   31   3927  73543 156758  3875/3572/293    4545/487    37  181   21.87)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&549755813887
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288406298012155904 := 26491366670336 << 40
(smt.stats   32   4074  76110 161202  4197/3776/302    4760/496    37  181   21.97)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&549755813887
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 6917529027641081856 := 26491433779200 << 40
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&274877906943
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 6917529027641081856 := 26491433779200 << 39
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&274877906943
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 26407606419455 := 26491433779200 << 39
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&274877906943
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 4435166023657717760 := 26491433779200 << 39
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&274877906943
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 26407606419455 := 26491433779200 << 39
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&274877906943
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 6917529027641081856 := 26491467333632 << 39
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&274877906943
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 26416196354047 := 26491467333632 << 39
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&274877906943
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288476666756333568 := 26491467333632 << 39
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&274877906943
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 26388276985860 := 26491467333632 << 39
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&274877906943
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288441482384244736 := 26491467333632 << 39
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   33   4235  78556 165983  4477/4152/318    4976/573    38  194   22.16)
ramon: poll                 wall=3.000s usage=2.911s mem=23492KiB load=1.00 rootload=1.00
(smt.stats   34   4412  79344 167568  4533/4215/318    5156/597    38  194   22.74)
(smt.stats   35   4606  82509 175783  5232/4925/319    5439/647    39  196   22.74)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&0
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 3158024 := 17592186044416 << 1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&0
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 1 := 0 << 1
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 0&0
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 1 := 0 << 1
(smt.stats   36   4707  85538 192978  5274/4956/319    5557/649    39  196   22.74)
(smt.stats   37   4818  88568 200760  5329/5018/324    5680/683    40  198   22.84)
ramon: poll                 wall=4.000s usage=3.910s mem=24160KiB load=1.00 rootload=1.00
(smt.stats   38   4940  91200 211531  5394/5041/324    5850/686    40  198   22.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5074  94934 217157  5415/5112/327    6002/738    41  198   22.84)
(smt.stats   40   5221  99747 235873  5434/5125/327    6224/739    41  198   22.86)
(smt.stats   41   5383 103410 250500  5466/5148/327    6422/819    42  205   22.87)
ramon: poll                 wall=5.000s usage=4.909s mem=24388KiB load=1.00 rootload=0.99
(smt.stats   42   5560 107501 259247  5540/5195/330    6707/917    43  209   23.08)
(smt.stats   43   5754 113919 278156  5797/5488/341    6939/989    44  223   23.17)
(smt.stats   44   5967 120013 304281  5808/5499/341    7231/989    44  223   23.27)
ramon: poll                 wall=6.000s usage=5.909s mem=24684KiB load=1.00 rootload=1.00
(smt.stats   45   6068 122838 310977  5814/5499/341    7341/990    44  223   23.27)
(smt.stats   46   6179 125686 322025  5831/5520/341    7473/990    44  223   23.27)
(smt.stats   47   6301 128206 332296  5847/5534/341    7621/990    44  223   23.27)
(smt.stats   48   6435 129787 340149  5850/5541/341    7757/990    44  223   23.39)
(smt.stats   49   6582 133966 363397  5855/5546/341    7923/990    44  223   23.39)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   50   6743 138785 378248  5866/5557/343    8160/1061    45  231   23.39)
(smt.stats   51   6920 143294 390048  5881/5562/343    8362/1062    45  231   23.48)
(smt.stats   52   7114 147125 403487  5900/5580/346    8555/1082    46  241   23.63)
ramon: poll                 wall=7.000s usage=6.908s mem=25088KiB load=1.00 rootload=1.00
(smt.stats   53   7327 156319 436177  5904/5595/346    8780/1082    46  241   23.64)
(smt.stats   54   7561 161317 461406  5940/5609/350    9056/1101    47  247   23.76)
(smt.stats   55   7662 164973 482754  5961/5653/350    9196/1101    47  247   23.76)
(smt.stats   56   7773 167805 501551  5966/5655/350    9317/1101    47  247   23.86)
(smt.stats   57   7895 172816 518134  6000/5682/350    9458/1101    47  247   23.86)
(smt.stats   58   8029 175913 526342  6053/5732/352    9621/1157    48  251   23.86)
(smt.stats   59   8176 181970 545908  6080/5759/356    9807/1158    48  251   23.98)
ramon: poll                 wall=8.000s usage=7.907s mem=25388KiB load=1.00 rootload=1.00
(smt.stats   60   8337 188130 574951  6098/5768/357    9984/1188    49  265   23.98)
(smt.stats   61   8514 190782 587030  6140/5819/358   10182/1197    50  278   24.08)
(smt.stats   62   8708 194668 595295  6149/5826/358   10378/1197    50  278   24.08)
(smt.stats   63   8921 200996 619334  6151/5828/358   10604/1209    51  289   24.08)
ramon: poll                 wall=9.000s usage=8.907s mem=25660KiB load=1.00 rootload=1.00
(smt.stats   64   9155 205362 632100  6313/5837/358   10901/1210    51  289   24.21)
ramon: poll                 wall=10.000s usage=9.902s mem=25768KiB load=1.00 rootload=1.00
(smt.stats   65   9412 209837 641167  6847/6320/359   11192/1276    52  290   24.40)
(smt.stats   66   9513 211624 650142  6885/6562/363   11340/1277    52  290   24.40)
(smt.stats   67   9624 215104 660687  6887/6564/363   11460/1277    52  290   24.40)
(smt.stats   68   9746 218531 677160  6912/6573/363   11599/1309    53  310   24.40)
(smt.stats   69   9880 223161 696493  6923/6600/363   11742/1309    53  310   24.40)
ramon: poll                 wall=11.000s usage=10.902s mem=25852KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   70  10027 225782 707550  6936/6613/363   11922/1309    53  310   24.40)
(smt.stats   71  10188 230565 722465  7020/6614/363   12112/1310    53  310   24.50)
(smt.stats   72  10365 236503 749713  7065/6708/363   12318/1310    53  310   24.59)
(smt.stats   73  10559 241491 767306  7085/6754/363   12590/1311    53  310   24.59)
ramon: poll                 wall=12.000s usage=11.900s mem=26152KiB load=1.00 rootload=1.00
(smt.stats   74  10772 246478 788268  7161/6810/365   12855/1436    54  311   24.78)
(smt.stats   75  11006 255454 813316  7178/6836/365   13140/1436    54  311   24.78)
(smt.stats   76  11263 263899 845613  7247/6854/365   13525/1485    55  312   24.87)
ramon: poll                 wall=13.000s usage=12.899s mem=26604KiB load=1.00 rootload=0.99
(smt.stats   77  11545 270090 869405  7377/6965/368   13838/1573    56  317   24.99)
(smt.stats   78  11646 273088 880362  7455/7062/368   13957/1574    56  317   24.99)
ramon: poll                 wall=14.000s usage=13.899s mem=26612KiB load=1.00 rootload=1.00
(smt.stats   79  11757 276195 886011  7618/7142/368   14097/1617    57  318   25.18)
ramon: poll                 wall=15.000s usage=14.898s mem=26620KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.897s mem=26620KiB load=1.00 rootload=1.00
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1 := 17592186044416&3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 17592186044416&3
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 288247968337756160 := 28174683488257 << 3
(smt.stats   80  11879 279881 902480  7780/7313/368   14254/1621    57  318   25.18)
(smt.stats   81  12013 282055 911006  7845/7496/368   14414/1621    57  318   25.55)
(smt.stats   82  12160 285503 922553  7929/7509/368   14622/1621    57  318   25.65)
(smt.stats   83  12321 291006 946605  7991/7622/368   14788/1625    57  318   25.65)
(smt.stats   84  12498 293759 961942  8010/7668/368   14991/1625    57  318   25.65)
ramon: poll                 wall=17.000s usage=16.897s mem=27132KiB load=1.00 rootload=1.00
(smt.stats   85  12692 299925 983685  8145/7684/369   15208/1741    58  321   25.74)
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1 := 824633720992&3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 824633720992&3
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 26388276985858 := 103079215124 << 3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 824633720992&3
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 26388276985860 := 103079215124 << 3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 824633720992&3
shl: (shl[45] (bv2int %1) (mod (bv2int %0) 45)) 26388279071743 := 103079215124 << 3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 1 := 549755813904&3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 549755813904&3
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 1 := 549755813904&3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 549755813904&3
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 2 := 549755813904&3
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 0 := 549755813904&3
band: (band[45] (shl[45] (bv2int %1) (mod #104 45)) (if (= #593 44) 0 (if #595 1 #718))) 1 := 549755813904&3
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   86  12905 304880 1006939  8288/7932/401   15489/1789    59  328   25.93)
(smt.stats   87  13139 312704 1023204  8322/7978/401   15772/1789    59  328   25.93)
ramon: poll                 wall=18.000s usage=17.896s mem=27540KiB load=1.00 rootload=1.00
(smt.stats   88  13396 321600 1078468  8372/8017/401   16103/1824    60  330   26.05)
(smt.stats   89  13678 327351 1104248  8422/8035/401   16444/1825    60  330   26.05)
(smt.stats   90  13988 333172 1147610  8489/8109/403   16855/1893    61  334   26.25)
(smt.stats   91  14089 335860 1158663  8537/8166/404   17084/1893    61  334   26.25)
ramon: poll                 wall=19.000s usage=18.896s mem=27880KiB load=1.00 rootload=1.00
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 4 := 35184372088580&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 70368744177412 := 35184372088770 << 4
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 4 := 35184372088580&7
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 70368744177412 := 35184372088772 << 4
band: (band[45] (shl[64] (bv2int %1) (mod #341 64)) (if (or #738 #739) 0 (if #740 1 #879))) 4 := 35184372072964&15
shl: (shl[64] (bv2int %1) (mod (+ #104 #340) 64)) 70368744161796 := 35184372088770 << 5
(smt.stats   92  14200 340494 1177851  8670/8192/405   17270/1927    62  339   26.41)
(smt.stats   93  14322 343605 1194065  8749/8371/417   17472/1929    62  339   26.41)
(smt.stats   94  14456 348119 1217945  8756/8386/419   17703/1958    63  342   26.52)
ramon: poll                 wall=20.000s usage=19.890s mem=28412KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 18:22:34 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.000s
ramon: group.total          19.984s
ramon: group.utime          19.980s
ramon: group.stime          0.004s
ramon: group.mempeak        28856KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.092s
ramon: loadavg              0.99
