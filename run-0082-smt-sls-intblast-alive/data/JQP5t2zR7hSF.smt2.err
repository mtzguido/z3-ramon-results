ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:12:25 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28612 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JQP5t2zR7hSF.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             745548
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   3538   1108  1026/913/91      93/10     4   14   51.86)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   105.263     10000        49          0            1        2)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 17179869183 := 17179869183&17179869184
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 1 := 17179869183&2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 1 := 17179869183&2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&8
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&8
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&64
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&128
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&64
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&128
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&256
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&512
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&512
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1024
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2048
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4096
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&8192
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2048
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4096
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&8192
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16384
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16384
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32768
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16384
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32768
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&65536
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&131072
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&16384
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32768
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&65536
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&131072
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&32768
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&65536
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&131072
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&524288
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&524288
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1048576
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1048576
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&524288
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1048576
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2097152
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&2097152
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&524288
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&1048576
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&4194304
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 262143 := 17179869183&262144
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&262144
(smt.stats    1    202   4507   2718  1813/1594/265     227/38     8   54   52.84)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 7864320 := 17179869183&8388608
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 7340032 := 17179869183&8388608
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 1048576 := 17179869183&8388608
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2097152 := 17179869183&8388608
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 4194304 := 17179869183&8388608
(sat.ddfw       1      1   51.8187     20001        98          1            1        3)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388608 := 17179869183&8388616
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388624 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388640 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388672 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388640 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388672 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388736 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388736 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8388864 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8389120 := 17179869183&16777216
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 8389632 := 17179869183&16777216
(smt.stats    2    313   4862   3061  2015/1730/310     407/65     9   67   53.51)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 4195328 := 17179869183&8388608
(smt.stats    3    414   5299   3521  2119/1916/375     640/67     9   67   53.63)
(sat.ddfw       1      1   52.6316     40001       196          2            1        5)
(smt.stats    4    525   6755   6610  2632/2454/378    1146/153    10   80   53.63)
(smt.stats    5    647  11986  20067  2700/2480/382    2104/345    12   89   53.84)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2162688
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196448
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196448
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196416
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196352
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2134400 := 8589934591&2196352
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  12862  22627  2924/2527/382    2500/600    13  100   54.02)
(sat.ddfw       1      1   45.8015     70001       343          3            1        8)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2155392 := 8589934591&2195904
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2155392 := 8589934591&2195840
(smt.stats    7    859  13625  26444  3362/2765/387    2755/603    13  100   54.12)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2169792
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2169792
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2169728
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2169728
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2167680
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2139008 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 2136960 := 8589934591&2163584
(smt.stats    8    982  15772  32700  3571/3389/413    3756/1017    15  107   54.37)
ramon: poll                 wall=1.000s usage=0.910s mem=56620KiB load=0.91 rootload=0.90
(smt.stats    9   1116  18832  45154  3675/3419/418    4394/1242    16  130   54.46)
(sat.ddfw       1      1   38.9864    110001       539          4            1       12)
(smt.stats   10   1217  21057  59875  3971/3557/418    4936/1250    16  130   54.67)
(smt.stats   11   1328  23482  69595  4200/4018/421    5203/1531    17  138   54.67)
(sat.ddfw       1      1   33.4441    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   12   1450  26514  81640  4270/4089/439    5512/1616    18  195   55.18)
(smt.stats   13   1584  30293  91864  4441/4219/442    5674/1832    19  233   55.38)
ramon: poll                 wall=2.000s usage=1.907s mem=57904KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    29.326    220001      1078          6            1       23)
(smt.stats   14   1731  35530 101717  4906/4619/444    6257/1878    20  233   55.76)
(smt.stats   15   1832  38648 109514  5209/4725/445    6520/1972    21  254   55.95)
(smt.stats   16   1943  44145 123637  5231/4979/448    7531/2129    23  275   56.05)
(smt.stats   17   2065  49796 129658  5246/4997/448    7679/2131    23  275   56.05)
(sat.ddfw       1      1    26.003    290001      1421          7            1       30)
(smt.stats   18   2199  56644 156393  5260/5011/449    8366/2473    25  278   56.16)
ramon: poll                 wall=3.000s usage=2.905s mem=58492KiB load=1.00 rootload=1.00
(smt.stats   19   2346  66141 185510  5283/5032/450    8910/2600    26  278   56.36)
(smt.stats   20   2507  71301 201543  5382/5133/451    9325/2668    27  280   56.46)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943046
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943046
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943046
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943052
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943052
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943052
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 8589934591&41943048
(sat.ddfw       1      1   23.2693    370001      1813          8            1       38)
(smt.stats   21   2608  74152 219108  5452/5201/464    9686/2675    27  280   56.55)
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&104857600
band: (band[35] (if (or #640 #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 ...) 0 (if #670 1 #736)) (shl[64] (* 2 #114) (mod #858 64))) 0 := 17179869183&88080384
(smt.stats   22   2719  77538 235252  5553/5242/465    9953/2748    28  287   56.55)
ramon: poll                 wall=4.000s usage=3.904s mem=58992KiB load=1.00 rootload=0.99
(smt.stats   23   2841  83539 280776  5612/5311/465   10715/2763    29  297   56.76)
(sat.ddfw       1      1   20.9937    460001      2254          9            1       47)
(smt.stats   24   2975  88374 293099  5695/5376/465   11372/2767    29  297   56.95)
(smt.stats   25   3122  94971 324309  5715/5457/465   13902/2769    29  297   57.59)
ramon: poll                 wall=5.000s usage=4.905s mem=59896KiB load=1.00 rootload=1.01
(smt.stats   26   3283 100550 345381  5889/5468/465   14343/2773    29  297   57.69)
(sat.ddfw       1      1   19.1791    560001      2745         10            1       57)
(smt.stats   27   3460 106223 367312  6018/5642/465   14714/2780    29  297   57.78)
(smt.stats   28   3561 110477 414980  6020/5765/465   15540/2780    29  297   57.88)
ramon: poll                 wall=6.004s usage=5.905s mem=60148KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.6197    670001      3284         11            1       68)
(smt.stats   29   3672 120373 456793  6051/5770/465   16034/2780    29  297   57.97)
(smt.stats   30   3794 126174 480895  6120/5820/465   17357/2783    29  297   58.07)
ramon: poll                 wall=7.000s usage=6.899s mem=60468KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   16.2778    790001      3872         12            1       80)
(smt.stats   31   3928 130935 497186  6303/6048/467   18240/3764    30  300   58.37)
ramon: poll                 wall=8.004s usage=7.928s mem=60888KiB load=1.03 rootload=1.03
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4075 138884 516448  6330/6062/467   19063/3765    30  300   58.70)
(sat.ddfw       1      1   15.1409    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.926s mem=60952KiB load=1.00 rootload=0.99
(smt.stats   33   4236 148311 564430  6514/6078/467   19894/4016    31  305   58.95)
(sat.ddfw       1      1     14.16   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=9.846s mem=61344KiB load=0.92 rootload=0.92
(smt.stats   34   4413 154047 598492  6793/6274/467   20611/4016    31  305   59.05)
ramon: poll                 wall=11.000s usage=10.845s mem=61596KiB load=1.00 rootload=1.00
(smt.stats   35   4607 166568 628656  6863/6605/468   22399/4444    32  320   59.24)
(sat.ddfw       1      1   13.2649   1210001      5931         15            1      123)
(smt.stats   36   4708 173408 655762  6927/6613/468   22941/4453    32  320   59.34)
(smt.stats   37   4819 179234 667095  7016/6708/469   23327/4567    33  325   59.34)
ramon: poll                 wall=12.000s usage=11.844s mem=61880KiB load=1.00 rootload=1.00
(smt.stats   38   4941 184251 678872  7116/6782/469   23837/4575    33  325   59.45)
(smt.delete-inactive-clauses  :num-deleted-clauses 34)
(smt.stats   39   5075 190492 695836  7220/6915/470   24494/4579    33  325   59.58)
(sat.ddfw       1      1   12.7166   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=13.105s mem=62164KiB load=1.26 rootload=1.25
(smt.stats   40   5222 205463 736773  7249/6994/470   24879/4736    34  329   59.58)
(sat.ddfw       1      1   12.3582   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=14.151s mem=62304KiB load=1.05 rootload=1.04
(smt.stats   41   5383 214831 789340  7437/6994/470   25532/4743    34  329   60.12)
(smt.stats   42   5560 222130 813664  7639/7251/470   26550/4745    34  329   60.30)
ramon: poll                 wall=15.000s usage=15.147s mem=63012KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.6437   1720001      8431         18            1      174)
(smt.stats   43   5754 235496 845827  7879/7413/470   27451/4751    34  329   60.45)
ramon: poll                 wall=16.000s usage=16.145s mem=63092KiB load=1.00 rootload=1.00
(smt.stats   44   5967 246955 879322  8092/7677/470   28535/4757    34  329   60.55)
ramon: poll                 wall=17.000s usage=17.140s mem=63160KiB load=1.00 rootload=1.00
(smt.stats   45   6068 250254 897940  8155/7848/470   29530/4762    34  329   60.90)
(sat.ddfw       1      1   10.9947   1910001      9362         19            1      193)
(smt.stats   46   6179 253733 913523  8321/7934/470   29810/4764    34  329   60.90)
ramon: poll                 wall=18.000s usage=18.141s mem=63376KiB load=1.00 rootload=1.00
(smt.stats   47   6301 257377 935767  8537/8106/470   30207/4765    34  329   60.90)
(smt.stats   48   6435 261493 958361  8802/8315/470   30623/4775    34  329   61.09)
ramon: poll                 wall=19.000s usage=19.135s mem=63636KiB load=0.99 rootload=0.99
(smt.stats   49   6582 265924 997803  9055/8580/472   31689/5481    35  349   61.18)
(sat.ddfw       1      1   10.4205   2110001     10343         20            1      214)
ramon: poll                 wall=20.000s usage=20.127s mem=63812KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   50   6743 270355 1034033  9429/8816/472   32356/5481    35  349   61.28)
ramon: end                  Fri Nov  1 22:12:45 2024
ramon: root.execname        z3
ramon: root.utime           20.180s
ramon: root.stime           0.020s
ramon: group.total          20.209s
ramon: group.utime          20.181s
ramon: group.stime          0.028s
ramon: group.mempeak        64088KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.086s
ramon: loadavg              1.01
