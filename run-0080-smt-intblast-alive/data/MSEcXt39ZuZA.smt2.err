ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:12:49 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25972 MiB
ramon: sys.mem.avail        61755 MiB
ramon: sys.nprocs           1406
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/MSEcXt39ZuZA.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4192596
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   5948    959  1282/1109/90     100/3     3   13   19.10)
(smt.stats    1    203   8558   4118  1949/1727/92     195/2     4   14   19.20)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 1 := 18 << 45
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 1 := 18 << 45
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 1 := 18 << 45
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 36028797018963968 := 36028797018963998 << 45
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 36028797018963968 := 36028797018963998 << 45
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 36028797018963968 := 36028797018963998 << 45
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 36028797018963967 := 18014398521803264 << 46
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 36028797018963967 := 18014398521803264 << 46
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 36028797018963967 := 18014398521803264 << 46
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 18014398521803265 := 18014398521803264 << 46
(smt.stats    2    314   9043   5026  2263/1961/105     303/11     5   14   19.59)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 35184372088832&0
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 18014398521803265 := 18014398521803264 << 46
(smt.stats    3    415  11723   7892  2351/2123/108     392/12     7   16   19.59)
(smt.stats    4    526  12457   9894  2552/2312/116     440/20    11   51   19.72)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 1 := 1&25166360
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 1&25166360
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 18014398522065164 := 18014398522065164 << 1
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 1 := 1&25166360
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 1&25166360
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 18014398522065164 := 18014398522065164 << 1
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 1 := 1&15729570
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 1&15729570
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 18014398517346769 := 18014398517346769 << 1
(smt.stats    5    648  15310  11911  2611/2338/117     582/29    12   51   19.82)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  15702  12424  2727/2377/123     691/32    12   51   20.22)
(smt.stats    7    860  16322  14047  3103/2771/123     814/53    13   54   20.22)
ramon: poll                 wall=1.000s usage=0.999s mem=21472KiB load=1.00 rootload=0.99
(smt.stats    8    982  16893  14737  3331/3070/123     936/53    13   54   20.89)
(smt.stats    9   1116  21891  20071  3840/3595/128    1113/66    14   56   20.70)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 262144 := 262144&36028797018963967
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 72057594037927935 := 18014398522068482 << 18
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 262144 := 262144&18014398522066478
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 262143 := 262144&18014398521802751
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 262143 := 262144&18014398521540608
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 262144&18014398521540608
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 54043195540504576 := 18014398521054722 << 18
(smt.stats   10   1217  23050  22581  3980/3731/139    1210/132    16   64   20.79)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 262144&18014398521024003
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 17636096140794404355 := 18014398520467982 << 18
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 262144&18014398520467983
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 262144 := 262144&18014398519971333
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 262142 := 262144&18014398519971333
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 262144&18014398519971333
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 162129586595827205 := 18014398519971332 << 18
(smt.stats   11   1328  24370  24754  4193/3947/150    1317/140    17   67   20.79)
ramon: poll                 wall=2.000s usage=1.999s mem=22140KiB load=1.00 rootload=1.00
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 262144&18718911525552128
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 1 := 9359284837549826 << 19
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 262144&18694859440259072
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 1 := 9324031700108546 << 19
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 262144&18577760917127168
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 262143 := 9288847104672006 << 19
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 262144&18718911525552128
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 262143 := 9359284837549826 << 19
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  25428  26581  4380/4133/157    1507/146    18   71   20.91)
(smt.stats   13   1584  29497  31086  4400/4153/161    1629/216    19   78   21.00)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057726
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057726
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057726
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057223
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 90776163711985159 := 54747366693021190 << 4
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057223
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 90776163711985159 := 54747366693021190 << 4
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057223
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 90776163711985159 := 54747366693021190 << 4
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674309626
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674309615
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 90776163712237551 := 54747366693273090 << 4
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057726
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057711
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 90776163711985647 := 54747366693021190 << 4
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057223
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 90776163711985159 := 54747366693021190 << 4
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057223
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 90776163711985159 := 54747366693021190 << 4
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&18718569674057711
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 90776163711985647 := 54747366693021190 << 4
(smt.stats   14   1731  33080  38042  4518/4268/177    1787/222    20   83   21.10)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&33626877217448000
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 1 := 34827837118323970 << 5
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&19203043128680576
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 1 := 32125292489364740 << 5
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&19203043128680576
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 1 := 32125292489364740 << 5
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&20322493318537440
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 1 := 28782575587269895 << 5
(smt.stats   15   1832  33786  39867  4682/4274/177    1898/223    20   83   21.19)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 2&172128
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 1116892707588055136 := 69805794224253446 << 1
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 2&172128
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 1116892707588055136 := 69805794224253446 << 1
(smt.stats   16   1943  35290  43434  4780/4529/190    2054/253    22   88   21.19)
(smt.stats   17   2065  39129  47286  4789/4537/190    2249/253    22   88   21.19)
(smt.stats   18   2199  42048  55008  4804/4546/190    2398/332    23   97   21.31)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 18014398509481984&137550102528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 137550102528 := 36028797019488680 << 54
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 18014398509481984&137550102528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 137550102528 := 36028797019488680 << 54
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 18014398509481984&137550102528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 137550102528 := 36028797019488680 << 54
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 18014398509481984&137521266688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 137521266688 := 36028797019488570 << 54
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 18014398509481984&137521266688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 137521266688 := 36028797019488570 << 54
(smt.stats   19   2346  44633  62014  4913/4568/190    2582/342    23   97   21.31)
(smt.stats   20   2507  47380  67918  5012/4699/197    2745/366    25  102   21.43)
ramon: poll                 wall=3.000s usage=2.998s mem=22756KiB load=1.00 rootload=1.00
(smt.stats   21   2608  50133  71525  5059/4760/197    2850/366    25  102   21.52)
(smt.stats   22   2719  52076  74358  5150/4807/197    2989/366    25  102   21.52)
(smt.stats   23   2841  56047  82668  5180/4920/198    3121/397    26  103   21.52)
(smt.stats   24   2975  57394  85242  5433/4925/198    3265/404    26  103   21.72)
(smt.stats   25   3122  59123  89833  5656/5275/198    3426/409    26  103   21.81)
ramon: poll                 wall=4.000s usage=3.997s mem=23100KiB load=1.00 rootload=1.00
(smt.stats   26   3283  61139  95958  6050/5790/199    3629/461    27  105   21.91)
(smt.stats   27   3460  64309 107690  6295/5801/199    3815/465    27  105   22.10)
(smt.stats   28   3561  65062 109725  6448/6040/199    3938/471    27  105   22.10)
ramon: poll                 wall=5.000s usage=4.996s mem=23480KiB load=1.00 rootload=1.00
(smt.stats   29   3672  66017 111357  6639/6197/199    4052/477    27  105   22.19)
(smt.stats   30   3794  66744 113457  6859/6496/199    4185/479    27  105   22.19)
(smt.stats   31   3928  67853 116705  7042/6653/199    4338/482    27  105   22.29)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  69279 118609  7402/6905/199    4515/483    27  105   22.48)
ramon: poll                 wall=6.000s usage=5.996s mem=23864KiB load=1.00 rootload=1.00
(smt.stats   33   4236  71046 123878  7969/7316/199    4714/488    27  105   22.58)
ramon: poll                 wall=7.000s usage=6.995s mem=24232KiB load=1.00 rootload=1.00
(smt.stats   34   4413  72545 129593  8371/7738/199    4917/497    27  105   22.67)
(smt.stats   35   4607  77720 142070  8449/8189/199    5181/497    27  105   22.80)
(smt.stats   36   4708  80241 150717  8600/8250/200    5273/646    28  110   22.90)
(smt.stats   37   4819  81090 154092  8798/8373/200    5400/649    28  110   22.90)
(smt.stats   38   4941  82411 160572  8944/8683/202    5534/672    29  114   22.99)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
ramon: poll                 wall=8.000s usage=7.995s mem=24480KiB load=1.00 rootload=1.00
(smt.stats   39   5075  86003 172728  8969/8700/202    5699/673    29  114   22.99)
(smt.stats   40   5222  88047 180713  9016/8721/202    5861/677    29  114   22.99)
(smt.stats   41   5383  90713 195645  9074/8814/203    6077/759    30  116   22.99)
(smt.stats   42   5560  93992 207837  9150/8832/203    6333/760    30  116   22.99)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 128&19203043129032704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 18429918319819620352 := 47079988390817784 << 7
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 128&19203043129032704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 18429918319819620352 := 47079988390817784 << 7
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 128&19203043129032704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 10395496584590655488 := 47079988390817344 << 7
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 128&19203043129032704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 10395496584590655488 := 47079988390817344 << 7
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 128&22521708969197568
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 10398815250430820352 := 47079988390817344 << 7
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 128&19203043129032704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 10395496584590655488 := 47079988390817344 << 7
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 128&19203043129032704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 10395496584590655488 := 47079988390817344 << 7
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 128&19203043129032704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 10395496584590655488 := 47079988390817344 << 7
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 128&19203043129032704
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #844 #846) 64)) 10395496584590655488 := 47079988390817344 << 7
(smt.stats   43   5754  97352 220086  9330/8988/209    6570/854    31  119   23.19)
ramon: poll                 wall=9.000s usage=8.995s mem=24712KiB load=1.00 rootload=0.98
(smt.stats   44   5967  98357 222227  9781/9183/209    6787/855    31  119   23.67)
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas         :deletions     )
(smt.stats   45   6068 100576 232581 10404/10142/210    6940/855    31  119   23.48)
(smt.stats   46   6179 104242 248025 10407/10145/210    7054/919    32  120   23.48)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&59373726990336
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 16 := 16&59373726990336
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&59373726990336
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 15 := 16&59373726990336
(smt.stats   47   6301 106486 254033 10584/10147/210    7191/922    32  120   23.58)
ramon: poll                 wall=10.000s usage=9.994s mem=25216KiB load=1.00 rootload=1.00
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 16 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 15 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 14 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 12 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61576381464576
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 1 := 16&61576381464576
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61576381464576
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 2 := 16&61576381464576
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61576381464576
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 4 := 16&61576381464576
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 4 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 8 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 2 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 16 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 16 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 16 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572690477056
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 8 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572748148736
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 8 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572748148736
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 8 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572748148736
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 8 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572748148736
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 4 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 16&61572748148736
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 2 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 2 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 4 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 8 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 16 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 16 := 16&61572748148736
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 2 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 4 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 4 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 4 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 4 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 2 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 2 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 10 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 8 := 16&61572690477056
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 8 := 16&61572690477056
(smt.stats   48   6435 108591 263600 10787/10471/278    7374/937    33  121   23.92)
(smt.stats   49   6582 114236 276845 10870/10567/294    7549/940    33  121   24.02)
(smt.stats   50   6743 115118 279610 11240/10703/294    7753/994    34  140   24.50)
ramon: poll                 wall=11.000s usage=10.993s mem=26208KiB load=1.00 rootload=1.00
(smt.stats   51   6920 116545 281690 11871/11371/294    7940/996    34  140   24.69)
(smt.stats   52   7114 125055 307349 12198/11899/294    8237/996    34  140   24.69)
(smt.stats   53   7327 132659 348672 12327/12022/296    8609/1060    35  141   24.90)
ramon: poll                 wall=12.000s usage=11.991s mem=26692KiB load=1.00 rootload=1.00
(smt.stats   54   7561 137826 372123 12458/12065/297    9073/1072    36  141   25.09)
(smt.stats   55   7662 141850 387381 12470/12161/297    9211/1138    37  141   25.09)
(smt.stats   56   7773 149771 405727 12503/12194/297    9344/1138    37  141   25.09)
(smt.stats   57   7895 161510 434242 12504/12195/297    9475/1138    37  141   25.20)
(smt.stats   58   8029 165874 448384 12516/12204/300    9717/1144    38  148   25.20)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   59   8176 172027 465604 12557/12215/300   10004/1145    38  148   25.30)
(smt.stats   60   8337 178137 489155 12687/12284/300   10382/1166    39  159   25.40)
ramon: poll                 wall=13.000s usage=12.991s mem=27064KiB load=1.00 rootload=1.00
(smt.stats   61   8514 181559 504204 12769/12459/301   10802/1316    40  161   25.50)
(smt.stats   62   8708 189893 532732 12776/12466/302   11084/1316    40  161   25.59)
(smt.stats   63   8921 199137 557313 12784/12474/302   11421/1336    41  166   25.50)
(smt.stats   64   9155 204703 582628 12813/12501/303   11878/1374    42  168   25.50)
(smt.stats   65   9412 213623 629533 12872/12524/303   12500/1377    42  168   25.72)
(smt.stats   66   9513 216434 640312 12893/12581/304   12697/1445    43  175   25.72)
(smt.stats   67   9624 221104 647669 12901/12584/304   12842/1445    43  175   25.72)
ramon: poll                 wall=14.000s usage=13.991s mem=27520KiB load=1.00 rootload=1.00
(smt.stats   68   9746 230201 678548 12917/12605/304   13043/1445    43  175   25.93)
(smt.stats   69   9880 242049 714041 12921/12609/305   13210/1488    44  177   25.93)
(smt.delete-inactive-clauses  :num-deleted-clauses 32)
(smt.stats   70  10027 246085 733952 12943/12631/306   13377/1508    45  187   25.93)
(smt.stats   71  10188 254950 766408 12951/12634/306   13552/1510    45  187   25.93)
(smt.stats   72  10365 260201 780087 13157/12647/306   13799/1513    45  187   25.93)
ramon: poll                 wall=15.000s usage=14.990s mem=27568KiB load=1.00 rootload=1.00
(smt.stats   73  10559 263277 805293 13204/12892/307   14177/1550    46  194   26.02)
(smt.stats   74  10772 265469 810568 13427/12896/307   14437/1556    46  194   26.21)
ramon: poll                 wall=16.000s usage=15.989s mem=27952KiB load=1.00 rootload=0.99
(smt.stats   75  11006 267058 815852 13820/13231/307   14742/1562    46  194   26.41)
(smt.stats   76  11263 269346 821885 14274/13529/307   15068/1575    46  194   26.60)
ramon: poll                 wall=17.000s usage=16.989s mem=28240KiB load=1.00 rootload=1.00
(smt.stats   77  11545 271132 832106 14995/14184/307   15420/1579    46  194   26.79)
ramon: poll                 wall=18.000s usage=17.989s mem=28456KiB load=1.00 rootload=1.00
(smt.stats   78  11646 271918 836341 15261/14857/307   15539/1580    46  194   26.88)
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   79  11757 272421 838375 15602/15147/307   15664/1582    46  194   26.90)
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 0 := 1&29000168939979170
band: (band[55] (if (= #120 54) 1 (if #571 2 #677)) (shl[55] (bv2int %0) (+ 55 #680))) 1 := 1&29000168939979170
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 1 := 1&28825209152208930
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 1 := 1&28825209152209040
band: (band[55] (if (or #692 #693 #694 #695 #696 #697 #698 #699 #700) 0 (if #701 1 #809)) (shl[64] (* 2 #114) (mod #847 64))) 1 := 1&28825209152209040
(smt.stats   80  11879 274754 853424 15890/15480/307   15870/1583    46  194   26.90)
(smt.stats   81  12013 276349 866228 15902/15590/317   16024/1792    47  196   27.01)
ramon: poll                 wall=19.000s usage=18.989s mem=28776KiB load=1.00 rootload=1.00
(smt.stats   82  12160 278660 873220 16038/15600/317   16251/1793    47  196   27.11)
(smt.stats   83  12321 280850 880396 16315/15839/317   16424/1799    47  196   27.11)
(smt.stats   84  12498 283462 890823 16548/16015/317   16671/1835    48  196   27.20)
ramon: poll                 wall=20.000s usage=19.988s mem=29032KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:13:09 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.996s
ramon: group.utime          19.976s
ramon: group.stime          0.020s
ramon: group.mempeak        29288KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
