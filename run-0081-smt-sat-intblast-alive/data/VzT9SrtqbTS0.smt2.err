ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 20:38:49 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28883 MiB
ramon: sys.mem.avail        62090 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/VzT9SrtqbTS0.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             444708
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   244/244     0/0  64       0    18.51   0.00)
(sat.stats    103    550    0   244/244   103/29  64       0    18.75   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 432 :time 0.00)
(sat.stats    103    550    0   244/244   103/29  64       0    18.75   0.01)
(sat.stats    103    550    0   244/244   103/29  64       0    18.75   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 419818.85 :time 0.00)
(sat.stats    103    550    0   246/246    69/28  64       0    18.85   0.01)
(sat.stats    118    752    1   246/246    84/39  64       0    18.85   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    121    814    2   246/246    87/41  64       0    18.85   0.01)
(sat.stats    124    877    3   246/246    90/43  64       0    18.85   0.01)
(sat.stats    133   1084    4   246/246    99/47  64       0    18.85   0.01)
(sat.stats    136   1142    5   246/246   102/47  64       0    18.85   0.01)
(sat.stats    139   1176    6   246/246   105/47  64       0    18.85   0.01)
(sat.stats    142   1215    7   246/246   108/48  64       0    18.85   0.01)
(sat.stats    145   1299    8   246/246   111/51  64       0    18.85   0.01)
(sat.stats    148   1388    9   246/246   114/54  64       0    18.85   0.01)
(sat.stats    151   1479   10   246/246   117/57  64       0    18.85   0.01)
(sat.stats    154   1517   11   246/246   120/60  64       0    18.85   0.01)
(sat.stats    157   1530   12   246/246   123/63  64       0    18.85   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1901 :time 0.00)
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 0&28
lshr: (lshr[64] (mod (div #63 2) 36028797018963968) (mod (+ 55 #732 #734) 64)) 868616 := 868616 >>l 55
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    379   7762   13   274/273   342/213  77       0    19.72   0.17)
(sat.stats    382   7975   14   274/273   345/213  77       0    19.72   0.17)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3348 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 5932 :time 0.00)
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #51))) 228 := 228 >>l 52
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 0&448
lshr: (lshr[64] (mod (div #63 2) 36028797018963968) (mod (+ 55 #732 #734) 64)) 72057594037910163 := 30 >>l 51
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 15 := 15&448
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 14 := 15&448
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 12 := 15&448
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 8 := 15&448
(sat.stats    554  12917   21   467/463   518/240  84       0    20.20   0.24)
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 15&448
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 10 := 448&15
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 15&448
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 1 := 448&15
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 15&448
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 8 := 448&15
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 15&448
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 4 := 448&15
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 9123 :time 0.00)
 (sat-cleaner :elim-literals 78 :elim-clauses 60 :cost 11250 :time 0.00)
(sat.stats    742  20643   47  1526/1496   644/274 154       0    21.09   0.38)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 10633 :time 0.00)
(sat.stats   1064  31617   75  8738/8708  1074/453 156       0    22.87   0.59)
ramon: poll                 wall=1.002s usage=0.904s mem=31064KiB load=0.90 rootload=0.88
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 24256 :time 0.00)
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #51))) 8314 := 4503599627370487 >>l 49
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 24681 :time 0.00)
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 7&3584
lshr: (lshr[64] (mod (div #63 2) 36028797018963968) (mod (+ 55 #732 #734) 64)) 0 := 2251799813685243 >>l 48
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 25193 :time 0.00)
ramon: poll                 wall=2.000s usage=1.899s mem=33868KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.000s usage=2.898s mem=33888KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 26333 :time 0.00)
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 31&3584
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 16 := 3584&31
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 63&3584
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 32 := 3584&63
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 87&3584
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 64 := 3584&87
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 16 := 31&3584
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 32 := 63&3584
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 64 := 87&3584
ramon: poll                 wall=4.000s usage=3.898s mem=34020KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.898s mem=34020KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 29807 :time 0.00)
ramon: poll                 wall=6.000s usage=5.898s mem=34276KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.898s mem=34276KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.898s mem=34276KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.898s mem=34276KiB load=1.00 rootload=1.00
(sat.stats   2106  55750  177 77956/77925  2464/1076 202       0    32.46   8.99)
ramon: poll                 wall=10.000s usage=9.898s mem=34128KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.898s mem=34384KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.898s mem=34384KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.898s mem=34896KiB load=1.00 rootload=1.00
lshr: (lshr[56] (bv2int %0) (+ 56 (* 72057594037927935 #51))) 2512 := 868 >>l 28
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 0&7516192768
lshr: (lshr[64] (mod (div #63 2) 36028797018963968) (mod (+ 55 #732 #734) 64)) 72057594037902588 := 434 >>l 27
ramon: poll                 wall=14.000s usage=13.897s mem=34984KiB load=1.00 rootload=1.00
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 128 := 128&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 256 := 256&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 512 := 512&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 1024 := 1024&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 2048 := 2048&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 4096 := 4096&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 8192 := 8192&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 16384 := 16384&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 32768 := 32768&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 65536 := 65536&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 131072 := 131072&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 262144 := 262144&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 524288 := 524288&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 1048576 := 1048576&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 2097152 := 2097152&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 4194304 := 4194304&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 8388608 := 8388608&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 16777216 := 16777216&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 33554432 := 33554432&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 67108864 := 67108864&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 134217728 := 134217728&7516192768
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 4047232 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 310528 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 6106112 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 512 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 39993344 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 2048 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 4096 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 8192 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 655360 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 32768 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 65536 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 48496640 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 106954752 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 1048576 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 524288 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 29360128 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 25165824 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 67108864 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 16777216 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 33554432 := 7516192768&268435455
band: (band[56] (lshr[56] (bv2int %0) (+ 56 #478)) (if (= #81 55) 1008806316530991104 (if #482 504403158265495552 #590))) 0 := 268435455&7516192768
band: (band[56] (if (= #601 63) 258254417031933722624 (if #603 129127208515966861312 #727)) (lshr[64] (mod #460 36028797018963968) (mod #735 64))) 134217728 := 7516192768&268435455
ramon: poll                 wall=15.000s usage=14.897s mem=36776KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.897s mem=37032KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 345 :elim-clauses 126 :cost 42664 :time 0.00)
(sat.stats :conflicts  :restarts        :learned/bin          :gc         :time )
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   2854 102998  198 82775/82740  3105/1282 475       0    35.82  16.57)
ramon: poll                 wall=17.000s usage=16.897s mem=38120KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.897s mem=38376KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.897s mem=58168KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.897s mem=66700KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 20:39:09 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.994s
ramon: group.utime          19.966s
ramon: group.stime          0.028s
ramon: group.mempeak        66956KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.095s
ramon: loadavg              0.99
