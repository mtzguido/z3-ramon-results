ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Nov  4 10:12:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         20340 MiB
ramon: sys.mem.avail        62360 MiB
ramon: sys.nprocs           1438
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/bench_2349.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.sls.enable=false
ramon: argv                 5 = sat.smt=true
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             1119326
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0  1270/616     0/0  99       0    18.08   0.00)
"checking model (on original set of clauses)"
(sat.stats     57    395    0  1270/616    57/1  99       0    18.08   0.00)
Failed to validate b355 69: (= T1_575 bv[0:8]) true
(sat
    33 none @0
    -169 none @0
    -327 none @0
    353 none @0
    -356 none @0
    -416 none @0
    -294 none @0
    -352 none @0
    -34 none @0
    -170 none @0
    -292 none @0
    -293 none @0
    -325 none @0
    -351 none @0
    -86 none @0
    326 none @0
    -350 none @0
    -91 none @0
    -349 none @0
    -96 none @0
    -348 none @0
    -101 none @0
    -347 none @0
    -106 none @0
    -346 none @0
    -111 none @0
    -345 none @0
    -116 none @0
    -344 none @0
    -121 none @0
    -343 none @0
    -342 none @0
    -341 none @0
    -340 none @0
    -339 none @0
    -338 none @0
    -337 none @0
    -336 none @0
    324 none @0
    -335 none @0
    322 none @0
    -334 none @0
    320 none @0
    -333 none @0
    318 none @0
    -332 none @0
    316 none @0
    -331 none @0
    314 none @0
    -330 none @0
    312 none @0
    -329 none @0
    310 none @0
    -328 none @0
    -309 none @0
    306 none @0
    308 none @0
    -311 none @0
    -35 none @0
    -313 none @0
    87 none @0
    -36 none @0
    -315 none @0
    -88 none @0
    -365 none @0
    -395 none @0
    92 none @0
    -37 none @0
    -317 none @0
    -93 none @0
    -364 none @0
    -398 none @0
    97 none @0
    -38 none @0
    -319 none @0
    -98 none @0
    -363 none @0
    -401 none @0
    102 none @0
    -39 none @0
    -321 none @0
    -103 none @0
    -362 none @0
    -404 none @0
    107 none @0
    -40 none @0
    -323 none @0
    -108 none @0
    -361 none @0
    -407 none @0
    112 none @0
    -41 none @0
    -113 none @0
    -360 none @0
    -410 none @0
    117 none @0
    -118 none @0
    -359 none @0
    -413 none @0
1: -213 none @1
    -197 binary 213@1
    -211 binary 213@1
    -212 binary 213@1
    -214 binary 213@1
    -215 binary 213@1
2: -0 none @2
3: 415 none @3
    -355 binary -415@3
    42 ext bv <- 33 v151 == v44
    -43 ext bv <- 33 v151 == v44
    -44 ext bv <- 33 v151 == v44
    -45 ext bv <- 33 v151 == v44
    -46 ext bv <- 33 v151 == v44
    -47 ext bv <- 33 v151 == v44
    -48 ext bv <- 33 v151 == v44
    -49 ext bv <- 33 v151 == v44
    -295 (-295@3 43@3 -42@3)
    -297 binary -42@3
    53 binary 43@3
    56 (56@3 44@3 43@3)
    -59 (-59@3 44@3 43@3)
    373 (373@3 44@3 43@3)
    374 (374@3 -56@3 43@3)
    298 (298@3 297@3 44@3)
    372 (372@3 -56@3 44@3)
    60 (60@3 59@3 45@3)
    -62 (-62@3 59@3 45@3)
    371 (371@3 -60@3 45@3)
    63 (63@3 62@3 46@3)
    -67 binary 46@3
    68 (68@3 67@3 47@3)
    -72 binary 47@3
    73 (73@3 72@3 48@3)
    -76 (-76@3 72@3 48@3)
    -305 (-305@3 48@3 -306@0)
    368 (368@3 -73@3 48@3)
    77 (77@3 76@3 49@3)
    -81 binary 49@3
    -307 (-307@3 49@3 -308@0)
    296 binary 295@3
    -299 binary 297@3
    375 binary -373@3
    377 (377@3 -375@3 -60@3)
    378 binary -371@3
    -64 binary -63@3
    -370 binary -63@3
    -380 binary -63@3
    -69 binary -68@3
    -369 binary -68@3
    -383 binary -68@3
    -303 (-303@3 305@3 47@3)
    387 binary -368@3
    -78 binary -77@3
    -367 binary -77@3
    -389 binary -77@3
    82 (82@3 81@3 34@0)
    300 (300@3 299@3 45@3)
    -301 binary 299@3
    376 (376@3 -375@3 45@3)
    379 (379@3 -378@3 46@3)
    304 (304@3 303@3 47@3)
    388 (388@3 -387@3 49@3)
    -83 binary -82@3
    -366 binary -82@3
    -392 binary -82@3
    302 (302@3 301@3 46@3)
    381 binary -379@3
    390 binary -388@3
    382 (382@3 -381@3 47@3)
    391 (391@3 -390@3 34@0)
    384 binary -382@3
    393 binary -391@3
    385 (385@3 -384@3 48@3)
    386 (386@3 -384@3 -73@3)
    394 (394@3 -393@3 35@0)
    396 binary -394@3
    397 (397@3 -396@3 36@0)
    399 binary -397@3
    400 (400@3 -399@3 37@0)
    402 binary -400@3
    403 (403@3 -402@3 38@0)
    405 binary -403@3
    406 (406@3 -405@3 39@0)
    408 binary -406@3
    409 (409@3 -408@3 40@0)
    411 binary -409@3
    412 (412@3 -411@3 41@0)
    414 binary -412@3
    358 binary -414@3
    -354 ext bv <- v44[0] != v127[0] 42 != -33
4: 357 none @4
5: -291 none @5
    -171 binary 291@5
    -289 binary 291@5
    -290 binary 291@5
6: -288 none @6
    -172 binary 288@6
    -286 binary 288@6
    -287 binary 288@6
7: -285 none @7
    -173 binary 285@7
    -283 binary 285@7
    -284 binary 285@7
8: -282 none @8
    -174 binary 282@8
    -280 binary 282@8
    -281 binary 282@8
9: -279 none @9
    -175 binary 279@9
    -277 binary 279@9
    -278 binary 279@9
10: -276 none @10
    -176 binary 276@10
    -274 binary 276@10
    -275 binary 276@10
11: -273 none @11
    -177 binary 273@11
    -271 binary 273@11
    -272 binary 273@11
12: -270 none @12
    -178 binary 270@12
    -268 binary 270@12
    -269 binary 270@12
    104 (104@12 269@12 268@12 83@3 78@3 -73@3)
    12 (12@12 -104@12 98@0)
    99 (99@12 -104@12 98@0)
    -100 (-100@12 -12@12 -99@12 98@0)
    -190 binary -12@12
    -232 binary -12@12
    11 (11@12 -99@12 93@0)
    94 (94@12 -99@12 93@0)
    -233 binary 100@12
    -234 (-234@12 232@12 233@12 190@12)
    -95 (-95@12 -11@12 -94@12 93@0)
    -191 binary -11@12
    -229 binary -11@12
    10 (10@12 -94@12 88@0)
    89 (89@12 -94@12 88@0)
    -235 binary 234@12
    -236 binary 234@12
    -230 binary 95@12
    -231 (-231@12 191@12 230@12 229@12)
    -90 (-90@12 -10@12 -89@12 88@0)
    -192 binary -10@12
    -226 binary -10@12
    9 (9@12 -89@12 83@3)
    84 (84@12 -89@12 83@3)
    -227 binary 90@12
    -228 (-228@12 192@12 227@12 226@12)
    -85 (-85@12 -9@12 -84@12 83@3)
    -193 binary -9@12
    -223 binary -9@12
    8 (8@12 -84@12 78@3)
    79 (79@12 -84@12 78@3)
    -224 binary 85@12
    -225 (-225@12 223@12 224@12 193@12)
    -80 (-80@12 -8@12 -79@12 78@3)
    -194 binary -8@12
    -220 binary -8@12
    -195 (-195@12 -79@12 -73@3)
    -221 binary 80@12
    -222 (-222@12 220@12 221@12 194@12)
    -252 (-252@12 269@12 268@12)
    -184 binary 252@12
    -250 binary 252@12
    -251 binary 252@12
    -253 binary 252@12
    -254 binary 252@12
    -256 (-256@12 269@12 268@12)
    124 (124@12 -104@12 251@12 250@12)
    17 (17@12 -124@12 121@0)
    122 (122@12 -124@12 121@0)
    -123 (-123@12 -17@12 -122@12 121@0)
    -185 binary -17@12
    -247 binary -17@12
    16 (16@12 -122@12 118@0)
    119 (119@12 -122@12 118@0)
    -248 binary 123@12
    -249 (-249@12 247@12 248@12 185@12)
    -120 (-120@12 -16@12 -119@12 118@0)
    -186 binary -16@12
    -244 binary -16@12
    15 (15@12 -119@12 113@0)
    114 (114@12 -119@12 113@0)
    -245 binary 120@12
    -246 (-246@12 186@12 245@12 244@12)
    -115 (-115@12 -15@12 -114@12 113@0)
    -187 binary -15@12
    -241 binary -15@12
    14 (14@12 -114@12 108@0)
    109 (109@12 -114@12 108@0)
    -242 binary 115@12
    -110 (-110@12 -14@12 -109@12 108@0)
    -188 binary -14@12
    -238 binary -14@12
    13 (13@12 -109@12 103@0)
    -243 (-243@12 242@12 241@12 187@12)
    -239 binary 110@12
    -240 (-240@12 238@12 239@12 188@12)
    -105 (-105@12 -13@12 -104@12 103@0)
    -189 binary -13@12
    -237 (-237@12 189@12 235@12 236@12)
    18 (18@12 184@12 -124@12)
    127 (127@12 -18@12 -124@12)
    125 (125@12 -18@12 -124@12)
    -126 binary -125@12
13: -258 none @13
    -182 binary 258@13
    -257 binary 258@13
    -259 binary 258@13
    -260 binary 258@13
    130 (130@13 257@13 -127@12 256@12)
    19 binary -130@13
    133 (133@13 -130@13 182@13)
    128 (128@13 -19@13 -127@12)
    -183 binary -19@13
    20 binary -133@13
    -129 binary -128@13
    -255 (-255@13 183@13 254@12 253@12)
    131 (131@13 -20@13 -130@13)
    -132 binary -131@13
14: 136 none @14
    21 binary -136@14
    134 (134@14 -21@14 -133@13)
    -181 binary -21@14
    -135 binary -134@14
    -261 (-261@14 181@14 260@13 259@13)
    -262 binary 261@14
    -263 binary 261@14
    139 (139@14 -136@14 268@12 269@12)
    22 binary -139@14
    137 (137@14 -22@14 -136@14)
    -180 binary -22@14
    -138 binary -137@14
    -264 (-264@14 180@14 263@14 262@14)
    -265 binary 264@14
    -266 binary 264@14
    -267 (-267@14 266@14 265@14 269@12 268@12)
    -179 binary 267@14
15: 142 none @15
    23 binary -142@15
    140 (140@15 -23@15 -139@14)
    -141 binary -140@15
16: 24 none @16
    143 (143@16 -24@16 -142@15)
    145 (145@16 -24@16 -142@15)
    -144 binary -143@16
    25 (25@16 -145@16 177@11)
    146 (146@16 -25@16 -145@16)
    148 (148@16 -25@16 -145@16)
    -147 binary -146@16
    26 (26@16 -148@16 176@10)
    149 (149@16 -26@16 -148@16)
    151 (151@16 -26@16 -148@16)
    -150 binary -149@16
    27 (27@16 -151@16 175@9)
    152 (152@16 -151@16 -27@16)
    154 (154@16 -151@16 -27@16)
    -153 binary -152@16
    28 (28@16 -154@16 174@8)
    157 (157@16 -28@16 -154@16)
    155 (155@16 -28@16 -154@16)
    -156 binary -155@16
    29 (29@16 -157@16 173@7)
    158 (158@16 -29@16 -157@16)
    160 (160@16 -29@16 -157@16)
    -159 binary -158@16
    163 (163@16 -160@16 172@6)
    30 binary -163@16
    161 (161@16 -30@16 -160@16)
    -162 binary -161@16
17: 164 none @17
    -165 binary -164@17
    31 (31@17 -164@17 -163@16)
    166 (166@17 -31@17 -163@16)
18: -58 none @18
    -3 (-3@18 58@18 -56@3)
    -55 (-55@18 58@18 -56@3)
    57 (57@18 55@18 -56@3 3@18)
    -2 (-2@18 55@18 -53@3)
    -52 (-52@18 55@18 -53@3)
    199 (199@18 -57@18 3@18)
    54 (54@18 52@18 -53@3 2@18)
    -1 (-1@18 52@18 -42@3)
    207 binary -199@18
    200 (200@18 -54@18 2@18)
    -50 (-50@18 1@18 -42@3)
    201 binary 1@18
    204 binary -200@18
    51 binary 50@18
    202 (202@18 -201@18 2@18)
    203 (203@18 -201@18 -54@18)
    205 (205@18 -204@18 3@18)
    206 (206@18 -204@18 -57@18)
19: 70 none @19
    5 (5@19 -70@19 64@3)
    65 (65@19 -70@19 64@3)
    -66 (-66@19 -5@19 -65@19 64@3)
    4 (4@19 -65@19 58@18)
    -61 (-61@19 -4@19 -60@3 58@18)
    -198 binary -4@19
    -208 binary -4@19
    -209 binary 61@19
    -210 (-210@19 198@19 209@19 208@19)
20: -75 none @20
    -218 binary 75@20
21: 7 none @21
    -217 binary -7@21
    -74 (-74@21 -7@21 75@20 -73@3)
    -219 (-219@21 217@21 218@20 195@12)
    -6 (-6@21 74@21 -70@19)
    71 (71@21 6@21 -70@19 69@3)
    196 (196@21 -71@21 6@21)
    216 binary -196@21
22: 167 none @22
    -168 binary -167@22
    32 (32@22 -167@22 -166@17)
(1 -52)
(1 201)
(-2 -200)
(-2 -202)
(-3 -199)
(-3 -205)
(-4 -198)
(-4 -208)
(-5 -197)
(-5 -211)
(-6 -196)
(-6 -214)
(-7 -195)
(-7 -217)
(-8 -194)
(-8 -220)
(-9 -193)
(-9 -223)
(-10 -192)
(-10 -226)
(-11 -191)
(-11 -229)
(-12 -190)
(-12 -232)
(-13 -189)
(-13 -235)
(-14 -188)
(-14 -238)
(-15 -187)
(-15 -241)
(-16 -186)
(-16 -244)
(-17 -185)
(-17 -247)
(-18 -184)
(-18 -250)
(18 -127)
(-19 -183)
(-19 -253)
(19 -130)
(-20 -182)
(-20 -256)
(20 -133)
(-21 -181)
(-21 -259)
(21 -136)
(-22 -180)
(-22 -262)
(22 -139)
(-23 -179)
(-23 -265)
(23 -142)
(-24 -178)
(-24 -268)
(24 -145)
(-25 -177)
(-25 -271)
(25 -148)
(-26 -176)
(-26 -274)
(26 -151)
(-27 -175)
(-27 -277)
(27 -154)
(-28 -174)
(-28 -280)
(28 -157)
(-29 -173)
(-29 -283)
(29 -160)
(-30 -172)
(-30 -286)
(30 -163)
(-31 -171)
(-31 -289)
(31 -166)
(-32 -170)
(-32 -292)
(-34 -311)
(-34 -366)
(-34 -391)
(-34 416)
(34 -86)
(34 -416)
(-35 -313)
(-35 -365)
(-35 -394)
(35 -91)
(-36 -315)
(-36 -364)
(-36 -397)
(36 -96)
(-37 -317)
(-37 -363)
(-37 -400)
(37 -101)
(-38 -319)
(-38 -362)
(-38 -403)
(38 -106)
(-39 -321)
(-39 -361)
(-39 -406)
(39 -111)
(-40 -323)
(-40 -360)
(-40 -409)
(40 -116)
(-41 -325)
(-41 -359)
(-41 -412)
(41 -121)
(-42 -297)
(42 -52)
(-43 -53)
(-43 59)
(-43 -297)
(-43 -373)
(-43 -374)
(43 53)
(-44 59)
(-44 -299)
(-44 -372)
(-44 -373)
(-45 62)
(-45 -301)
(-45 -371)
(-45 -376)
(-46 -303)
(-46 -370)
(-46 -379)
(46 -67)
(-47 -305)
(-47 -369)
(-47 -382)
(47 -72)
(-48 76)
(-48 -307)
(-48 -368)
(-48 -385)
(-49 -309)
(-49 -367)
(-49 -388)
(49 -81)
(-50 -51)
(50 51)
(50 201)
(54 -200)
(54 -203)
(56 -372)
(56 -374)
(57 -199)
(57 -206)
(-59 62)
(60 -371)
(60 -377)
(61 -198)
(61 -209)
(62 -67)
(-63 -64)
(-63 -370)
(-63 -380)
(63 64)
(66 -197)
(66 -212)
(67 -72)
(-68 -69)
(-68 -369)
(-68 -383)
(68 69)
(71 -196)
(71 -215)
(-72 76)
(73 -368)
(73 -386)
(75 -195)
(75 -218)
(76 -81)
(-77 -78)
(-77 -367)
(-77 -389)
(77 78)
(80 -194)
(80 -221)
(81 -86)
(-82 -83)
(-82 -366)
(-82 -392)
(82 83)
(85 -193)
(85 -224)
(86 -91)
(-87 -88)
(-87 -365)
(-87 -395)
(87 88)
(90 -192)
(90 -227)
(91 -96)
(-92 -93)
(-92 -364)
(-92 -398)
(92 93)
(95 -191)
(95 -230)
(96 -101)
(-97 -98)
(-97 -363)
(-97 -401)
(97 98)
(100 -190)
(100 -233)
(101 -106)
(-102 -103)
(-102 -362)
(-102 -404)
(102 103)
(105 -189)
(105 -236)
(106 -111)
(-107 -108)
(-107 -361)
(-107 -407)
(107 108)
(110 -188)
(110 -239)
(111 -116)
(-112 -113)
(-112 -360)
(-112 -410)
(112 113)
(115 -187)
(115 -242)
(116 -121)
(-117 -118)
(-117 -359)
(-117 -413)
(117 118)
(120 -186)
(120 -245)
(123 -185)
(123 -248)
(124 -127)
(-125 -126)
(-125 -184)
(-125 -251)
(125 126)
(-127 -252)*
(127 -130)
(-128 -129)
(-128 -183)
(-128 -254)
(128 129)
(130 -133)
(-131 -132)
(-131 -182)
(-131 -257)
(131 132)
(133 -136)
(-134 -135)
(-134 -181)
(-134 -260)
(134 135)
(136 -139)
(-137 -138)
(-137 -180)
(-137 -263)
(137 138)
(139 -142)
(-140 -141)
(-140 -179)
(-140 -266)
(140 141)
(142 -145)
(-143 -144)
(-143 -178)
(-143 -269)
(143 144)
(145 -148)
(-146 -147)
(-146 -177)
(-146 -272)
(146 147)
(148 -151)
(-149 -150)
(-149 -176)
(-149 -275)
(149 150)
(151 -154)
(-152 -153)
(-152 -175)
(-152 -278)
(152 153)
(154 -157)
(-155 -156)
(-155 -174)
(-155 -281)
(155 156)
(157 -160)
(-158 -159)
(-158 -173)
(-158 -284)
(158 159)
(160 -163)
(-161 -162)
(-161 -172)
(-161 -287)
(161 162)
(163 -166)
(-164 -165)
(-164 -171)
(-164 -290)
(164 165)
(-167 -168)
(-167 -170)
(-167 -293)
(167 168)
(-169 294)
(169 -294)
(-170 294)
(-171 291)
(-172 288)
(-173 285)
(-174 282)
(-175 279)
(-176 276)
(-177 273)
(-178 270)
(-179 267)
(-180 264)
(-181 261)
(-182 258)
(-183 255)
(-184 252)
(-185 249)
(-186 246)
(-187 243)
(-188 240)
(-189 237)
(-190 234)
(-191 231)
(-192 228)
(-193 225)
(-194 222)
(-195 219)
(-196 216)
(-197 213)
(-198 210)
(-199 207)
(-200 204)
(201 -202)
(201 -203)
(-202 204)
(-203 204)
(204 -205)
(204 -206)
(-205 207)
(-206 207)
(207 -208)
(207 -209)
(-208 210)
(-209 210)
(210 -211)
(210 -212)
(-211 213)
(-212 213)
(213 -214)
(213 -215)
(-214 216)
(-215 216)
(216 -217)
(216 -218)
(-217 219)
(-218 219)
(219 -220)
(219 -221)
(-220 222)
(-221 222)
(222 -223)
(222 -224)
(-223 225)
(-224 225)
(225 -226)
(225 -227)
(-226 228)
(-227 228)
(228 -229)
(228 -230)
(-229 231)
(-230 231)
(231 -232)
(231 -233)
(-232 234)
(-233 234)
(234 -235)
(234 -236)
(-235 237)
(-236 237)
(237 -238)
(237 -239)
(-238 240)
(-239 240)
(240 -241)
(240 -242)
(-241 243)
(-242 243)
(243 -244)
(243 -245)
(-244 246)
(-245 246)
(246 -247)
(246 -248)
(-247 249)
(-248 249)
(249 -250)
(249 -251)
(-250 252)
(-251 252)
(252 -253)
(252 -254)
(-253 255)
(-254 255)
(255 -256)
(255 -257)
(-256 258)
(-257 258)
(258 -259)
(258 -260)
(-259 261)
(-260 261)
(261 -262)
(261 -263)
(-262 264)
(-263 264)
(264 -265)
(264 -266)
(-265 267)
(-266 267)
(267 -268)
(267 -269)
(-268 270)
(-269 270)
(270 -271)
(270 -272)
(-271 273)
(-272 273)
(273 -274)
(273 -275)
(-274 276)
(-275 276)
(276 -277)
(276 -278)
(-277 279)
(-278 279)
(279 -280)
(279 -281)
(-280 282)
(-281 282)
(282 -283)
(282 -284)
(-283 285)
(-284 285)
(285 -286)
(285 -287)
(-286 288)
(-287 288)
(288 -289)
(288 -290)
(-289 291)
(-290 291)
(291 -292)
(291 -293)
(-292 294)
(-293 294)
(-295 -296)
(295 296)
(297 -299)
(299 -301)
(301 -303)
(303 -305)
(305 -307)
(306 328)
(307 -309)
(308 328)
(309 -311)
(310 329)
(311 -313)
(312 330)
(313 -315)
(314 331)
(315 -317)
(316 332)
(317 -319)
(318 333)
(319 -321)
(320 334)
(321 -323)
(322 335)
(323 -325)
(324 336)
(-325 -326)
(-325 337)
(-325 338)
(-325 339)
(-325 340)
(-325 341)
(-325 342)
(-325 343)
(-325 344)
(-325 345)
(-325 346)
(-325 347)
(-325 348)
(-325 349)
(-325 350)
(-325 351)
(-325 352)
(325 326)
(-327 352)
(327 -352)
(-328 329)
(-329 330)
(-330 331)
(-331 332)
(-332 333)
(-333 334)
(-334 335)
(-335 336)
(-336 337)
(-337 338)
(-338 339)
(-339 340)
(-340 341)
(-341 342)
(-342 343)
(-343 344)
(-344 345)
(-345 346)
(-346 347)
(-347 348)
(-348 349)
(-349 350)
(-350 351)
(-351 352)
(-354 -355)
(-355 -415)
(-357 358)
(-358 414)
(358 -414)
(-359 414)
(-360 411)
(-361 408)
(-362 405)
(-363 402)
(-364 399)
(-365 396)
(-366 393)
(-367 390)
(-368 387)
(-369 384)
(-370 381)
(-371 378)
(-372 375)
(-373 375)
(-374 375)
(375 -376)
(375 -377)
(-376 378)
(-377 378)
(378 -379)
(378 -380)
(-379 381)
(-380 381)
(381 -382)
(381 -383)
(-382 384)
(-383 384)
(384 -385)
(384 -386)
(-385 387)
(-386 387)
(387 -388)
(387 -389)
(-388 390)
(-389 390)
(390 -391)
(390 -392)
(-391 393)
(-392 393)
(393 -394)
(393 -395)
(-394 396)
(-395 396)
(396 -397)
(396 -398)
(-397 399)
(-398 399)
(399 -400)
(399 -401)
(-400 402)
(-401 402)
(402 -403)
(402 -404)
(-403 405)
(-404 405)
(405 -406)
(405 -407)
(-406 408)
(-407 408)
(408 -409)
(408 -410)
(-409 411)
(-410 411)
(411 -412)
(411 -413)
(-412 414)
(-413 414)
(-50 1 -42)+
(-1 42 -50)+
(1 42 50)+
(50 -1 -42)+
(-1 52 -42)+
(2 52 53 -54)+
(-2 -52 53 -54)+
(-2 52 -53 -54)+
(2 -54 -53 -52)+
(-2 52 53 54)+
(2 -52 53 54)+
(54 52 -53 2)+
(-2 54 -53 -52)+
(2 52 -55)+
(2 53 -55)+
(52 53 -55)+
(-2 55 -52)+
(-2 55 -53)+
(-52 55 -53)+
(43 -44 -56)+
(-43 44 -56)+
(56 44 43)+
(-43 -44 56)+
(3 55 56 -57)+
(-3 -55 56 -57)+
(-3 55 -56 -57)+
(3 -57 -56 -55)+
(-3 55 56 57)+
(3 -55 56 57)+
(57 55 -56 3)+
(-3 57 -56 -55)+
(3 55 -58)+
(3 56 -58)+
(55 56 -58)+
(-3 58 -55)+
(-3 58 -56)+
(-55 58 -56)+
(-59 44 43)+
(-45 59 -60)+
(45 -59 -60)+
(60 59 45)+
(-45 -59 60)+
(4 58 60 -61)+
(-4 -58 60 -61)+
(-61 -4 -60 58)+
(-61 4 -60 -58)+
(-4 58 60 61)+
(4 -58 60 61)+
(4 61 -60 58)+
(-58 -4 -60 61)+
(-62 59 45)+
(46 -62 -63)+
(-46 62 -63)+
(63 62 46)+
(-46 -62 63)+
(4 -65 58)+
(4 60 -65)+
(58 60 -65)+
(-4 65 -58)+
(65 -4 -60)+
(-58 65 -60)+
(5 -66 65 64)+
(-5 -64 65 -66)+
(5 -64 -65 -66)+
(-66 -5 -65 64)+
(5 -64 65 66)+
(-5 65 66 64)+
(5 -65 66 64)+
(-64 -5 -65 66)+
(-46 -62 67)+
(47 -67 -68)+
(-47 67 -68)+
(68 67 47)+
(-47 -67 68)+
(5 -70 64)+
(65 -70 64)+
(5 65 -70)+
(-5 -64 70)+
(-64 -65 70)+
(70 -5 -65)+
(6 -71 70 69)+
(-6 -69 70 -71)+
(-69 6 -70 -71)+
(-6 -71 -70 69)+
(-69 6 70 71)+
(-6 71 70 69)+
(71 6 -70 69)+
(-6 -69 -70 71)+
(-47 -67 72)+
(48 -72 -73)+
(-48 72 -73)+
(73 72 48)+
(-48 -72 73)+
(-74 6 69)+
(-74 70 69)+
(70 6 -74)+
(-6 -69 74)+
(-69 -70 74)+
(-6 74 -70)+
(73 7 74 -75)+
(-75 74 -7 -73)+
(-74 -75 7 -73)+
(73 -7 -74 -75)+
(74 7 75 -73)+
(73 -7 74 75)+
(7 73 -74 75)+
(-74 -7 75 -73)+
(-76 72 48)+
(49 -76 -77)+
(-49 76 -77)+
(77 76 49)+
(-49 -76 77)+
(7 73 -79)+
(73 74 -79)+
(7 74 -79)+
(-7 79 -73)+
(-74 79 -73)+
(-74 -7 79)+
(8 -80 79 78)+
(-78 -8 79 -80)+
(-80 -8 -79 78)+
(-78 8 -79 -80)+
(-8 80 79 78)+
(8 -78 79 80)+
(80 8 -79 78)+
(-78 -8 -79 80)+
(-49 -76 81)+
(-34 81 -82)+
(-81 -82 34)+
(82 81 34)+
(-34 -81 82)+
(8 -84 78)+
(8 79 -84)+
(79 -84 78)+
(-8 -78 84)+
(-8 -79 84)+
(-78 -79 84)+
(-85 9 84 83)+
(-83 -9 84 -85)+
(-85 -9 -84 83)+
(-83 9 -84 -85)+
(-9 85 84 83)+
(-83 9 84 85)+
(9 85 -84 83)+
(-83 -9 -84 85)+
(-34 -81 86)+
(-35 -87 86)+
(35 -86 -87)+
(87 35 86)+
(-35 -86 87)+
(9 -89 83)+
(84 9 -89)+
(84 -89 83)+
(-9 -83 89)+
(-9 -84 89)+
(-83 -84 89)+
(-90 10 89 88)+
(-88 -10 89 -90)+
(-90 -10 -89 88)+
(-88 10 -89 -90)+
(-10 90 89 88)+
(-88 10 89 90)+
(10 90 -89 88)+
(-88 -10 -89 90)+
(-35 -86 91)+
(-36 -92 91)+
(36 -91 -92)+
(92 36 91)+
(-36 -91 92)+
(10 -94 88)+
(89 10 -94)+
(89 -94 88)+
(-10 -88 94)+
(-10 94 -89)+
(-88 -89 94)+
(11 -95 94 93)+
(-93 -11 94 -95)+
(-93 11 -94 -95)+
(-95 -11 -94 93)+
(-93 11 94 95)+
(-11 95 94 93)+
(11 95 -94 93)+
(-93 -11 -94 95)+
(-36 -91 96)+
(-37 -97 96)+
(37 -96 -97)+
(97 37 96)+
(-37 -96 97)+
(11 -99 93)+
(94 -99 93)+
(94 11 -99)+
(-11 -93 99)+
(-93 -94 99)+
(99 -11 -94)+
(12 -100 99 98)+
(-98 -12 99 -100)+
(-98 12 -99 -100)+
(-100 -12 -99 98)+
(-98 12 99 100)+
(-12 100 99 98)+
(12 100 -99 98)+
(-98 -12 -99 100)+
(-37 -96 101)+
(-38 -102 101)+
(38 -101 -102)+
(102 38 101)+
(-38 -101 102)+
(12 -104 98)+
(99 -104 98)+
(99 12 -104)+
(-12 -98 104)+
(-98 -99 104)+
(-12 -99 104)+
(-105 13 104 103)+
(-103 -13 104 -105)+
(-103 13 -104 -105)+
(-105 -13 -104 103)+
(-103 13 104 105)+
(-13 105 104 103)+
(105 13 -104 103)+
(-103 -13 -104 105)+
(-38 -101 106)+
(-39 -107 106)+
(39 -106 -107)+
(107 39 106)+
(-39 -106 107)+
(13 -109 103)+
(-109 104 103)+
(104 13 -109)+
(-13 -103 109)+
(-103 -104 109)+
(-13 109 -104)+
(-110 14 109 108)+
(-108 -14 109 -110)+
(-108 14 -109 -110)+
(-110 -14 -109 108)+
(-108 14 109 110)+
(-14 110 109 108)+
(110 14 -109 108)+
(-108 -14 -109 110)+
(-39 -106 111)+
(-40 -112 111)+
(40 -111 -112)+
(112 40 111)+
(-40 -111 112)+
(14 -114 108)+
(109 -114 108)+
(109 14 -114)+
(-14 -108 114)+
(-108 -109 114)+
(-14 -109 114)+
(-115 15 114 113)+
(-113 -15 114 -115)+
(-113 15 -114 -115)+
(-115 -15 -114 113)+
(-113 15 114 115)+
(-15 115 114 113)+
(15 115 -114 113)+
(-113 -15 -114 115)+
(-40 -111 116)+
(41 -116 -117)+
(-41 -117 116)+
(117 41 116)+
(-41 -116 117)+
(15 -119 113)+
(114 -119 113)+
(114 15 -119)+
(-15 -113 119)+
(-113 -114 119)+
(-15 -114 119)+
(-120 16 119 118)+
(-118 -16 119 -120)+
(-118 16 -119 -120)+
(-120 -16 -119 118)+
(-118 16 119 120)+
(-16 120 119 118)+
(16 120 -119 118)+
(-118 -16 -119 120)+
(-41 -116 121)+
(16 -122 118)+
(119 -122 118)+
(119 16 -122)+
(-16 -118 122)+
(-118 -119 122)+
(-16 -119 122)+
(-123 17 122 121)+
(-121 -17 122 -123)+
(-121 17 -122 -123)+
(-123 -17 -122 121)+
(-121 17 122 123)+
(-17 123 122 121)+
(17 123 -122 121)+
(-121 -17 -122 123)+
(17 -124 121)+
(122 -124 121)+
(122 17 -124)+
(-17 -121 124)+
(-121 -122 124)+
(-17 -122 124)+
(-18 -125 124)+
(-125 18 -124)+
(125 18 124)+
(125 -18 -124)+
(127 -18 -124)+
(-19 -128 127)+
(-128 19 -127)+
(128 19 127)+
(128 -19 -127)+
(-19 130 -127)+
(-20 -131 130)+
(-131 20 -130)+
(131 20 130)+
(131 -20 -130)+
(-20 133 -130)+
(-21 -134 133)+
(21 -134 -133)+
(134 21 133)+
(134 -21 -133)+
(136 -21 -133)+
(-22 -137 136)+
(-137 22 -136)+
(137 22 136)+
(137 -22 -136)+
(139 -22 -136)+
(-23 -140 139)+
(23 -140 -139)+
(140 23 139)+
(140 -23 -139)+
(142 -23 -139)+
(-24 -143 142)+
(24 -143 -142)+
(143 24 142)+
(143 -24 -142)+
(145 -24 -142)+
(-25 -146 145)+
(-146 25 -145)+
(146 25 145)+
(146 -25 -145)+
(148 -25 -145)+
(-26 -149 148)+
(-149 26 -148)+
(149 26 148)+
(149 -26 -148)+
(151 -26 -148)+
(-152 151 -27)+
(-152 27 -151)+
(152 27 151)+
(152 -151 -27)+
(154 -151 -27)+
(-28 -155 154)+
(28 -155 -154)+
(155 28 154)+
(155 -28 -154)+
(157 -28 -154)+
(-29 -158 157)+
(-158 29 -157)+
(158 29 157)+
(158 -29 -157)+
(160 -29 -157)+
(-30 -161 160)+
(-161 30 -160)+
(161 30 160)+
(161 -30 -160)+
(163 -30 -160)+
(-31 -164 163)+
(31 -164 -163)+
(164 31 163)+
(164 -31 -163)+
(166 -31 -163)+
(-32 -167 166)+
(32 -167 -166)+
(167 32 166)+
(167 -32 -166)+
(32 167 170)+
(164 31 171)+
(30 161 172)+
(158 29 173)+
(155 28 174)+
(27 152 175)+
(149 26 176)+
(146 25 177)+
(24 143 178)+
(23 140 179)+
(137 22 180)+
(134 21 181)+
(131 20 182)+
(183 128 19)+
(125 18 184)+
(-123 17 185)+
(-120 16 186)+
(-115 15 187)+
(-110 14 188)+
(-105 13 189)+
(12 -100 190)+
(11 -95 191)+
(-90 10 192)+
(-85 9 193)+
(-80 8 194)+
(7 -75 195)+
(196 -71 6)+
(5 -66 197)+
(-61 4 198)+
(199 -57 3)+
(200 -54 2)+
(-50 -1 -201)+
(202 -201 2)+
(203 -201 -54)+
(-204 202 203 200)+
(205 -204 3)+
(206 -204 -57)+
(-207 205 206 199)+
(4 208 -207)+
(-61 209 -207)+
(-210 198 209 208)+
(5 -210 211)+
(-66 -210 212)+
(197 211 212 -213)+
(6 -213 214)+
(-71 -213 215)+
(-216 196 215 214)+
(217 -216 7)+
(218 -216 -75)+
(-219 217 218 195)+
(8 -219 220)+
(-80 -219 221)+
(-222 220 221 194)+
(9 -222 223)+
(-85 -222 224)+
(-225 223 224 193)+
(10 -225 226)+
(-90 -225 227)+
(-228 192 227 226)+
(11 -228 229)+
(-95 -228 230)+
(-231 191 230 229)+
(12 -231 232)+
(-100 -231 233)+
(-234 232 233 190)+
(13 235 -234)+
(-105 236 -234)+
(-237 189 235 236)+
(14 -237 238)+
(-110 -237 239)+
(-240 238 239 188)+
(-240 15 241)+
(-115 -240 242)+
(-243 242 241 187)+
(-243 16 244)+
(-120 -243 245)+
(-246 186 245 244)+
(17 -246 247)+
(-123 -246 248)+
(-249 247 248 185)+
(18 -249 250)+
(125 -249 251)+
(250 184 251 -252)+
(253 19 -252)+
(128 254 -252)+
(-255 183 254 253)+
(-255 20 256)+
(131 -255 257)+
(-258 182 257 256)+
(21 259 -258)+
(134 260 -258)+
(-261 181 260 259)+
(22 -261 262)+
(-261 137 263)+
(-264 180 263 262)+
(23 265 -264)+
(140 266 -264)+
(179 -267 266 265)+
(24 -267 268)+
(143 -267 269)+
(178 268 269 -270)+
(25 -270 271)+
(146 -270 272)+
(177 271 272 -273)+
(26 -273 274)+
(149 -273 275)+
(176 274 275 -276)+
(27 -276 277)+
(152 -276 278)+
(175 277 278 -279)+
(28 -279 280)+
(155 -279 281)+
(174 280 281 -282)+
(29 -282 283)+
(158 -282 284)+
(173 283 284 -285)+
(30 -285 286)+
(161 -285 287)+
(172 286 287 -288)+
(31 -288 289)+
(164 -288 290)+
(171 289 290 -291)+
(32 -291 292)+
(167 -291 293)+
(170 292 293 -294)+
(-295 43 -42)+
(42 -43 -295)+
(42 43 295)+
(-42 -43 295)+
(42 43 297)+
(44 -297 -298)+
(-44 297 -298)+
(298 297 44)+
(-44 -297 298)+
(44 -297 299)+
(-299 -300 45)+
(-45 299 -300)+
(300 299 45)+
(-45 -299 300)+
(-299 301 45)+
(-301 -302 46)+
(-46 301 -302)+
(302 301 46)+
(-46 -301 302)+
(-301 303 46)+
(-303 -304 47)+
(-47 303 -304)+
(304 303 47)+
(-47 -303 304)+
(-303 305 47)+
(-305 48 -306)+
(-48 305 -306)+
(48 305 306)+
(-48 -305 306)+
(48 -305 307)+
(-307 49 -308)+
(-49 307 -308)+
(49 307 308)+
(-49 -307 308)+
(49 -307 309)+
(-309 -310 34)+
(-34 309 -310)+
(310 309 34)+
(-34 -309 310)+
(-309 311 34)+
(35 -311 -312)+
(-35 311 -312)+
(311 35 312)+
(-35 -311 312)+
(35 -311 313)+
(36 -313 -314)+
(-36 313 -314)+
(313 36 314)+
(-36 -313 314)+
(36 -313 315)+
(37 -315 -316)+
(-37 315 -316)+
(315 37 316)+
(-37 -315 316)+
(37 -315 317)+
(38 -317 -318)+
(-38 317 -318)+
(317 38 318)+
(-38 -317 318)+
(38 -317 319)+
(39 -319 -320)+
(-39 319 -320)+
(319 39 320)+
(-39 -319 320)+
(39 -319 321)+
(40 -321 -322)+
(-40 321 -322)+
(321 40 322)+
(-40 -321 322)+
(40 -321 323)+
(41 -323 -324)+
(-41 323 -324)+
(323 41 324)+
(-41 -323 324)+
(41 -323 325)+
(-306 -308 -328)+
(-310 328 -329)+
(-312 329 -330)+
(-314 330 -331)+
(-316 331 -332)+
(-318 332 -333)+
(-320 333 -334)+
(-322 334 -335)+
(-324 335 -336)+
(-337 336 325)+
(-338 337 325)+
(-339 338 325)+
(-340 339 325)+
(-341 340 325)+
(-342 341 325)+
(-343 342 325)+
(-344 343 325)+
(-345 344 325)+
(-346 345 325)+
(-347 346 325)+
(-348 347 325)+
(-349 348 325)+
(-350 349 325)+
(325 350 -351)+
(325 351 -352)+
(41 117 359)+
(40 112 360)+
(39 107 361)+
(38 102 362)+
(37 97 363)+
(36 92 364)+
(35 87 365)+
(82 366 34)+
(49 77 367)+
(368 -73 48)+
(47 68 369)+
(46 63 370)+
(371 -60 45)+
(372 -56 44)+
(373 44 43)+
(374 -56 43)+
(372 373 374 -375)+
(376 -375 45)+
(377 -375 -60)+
(371 376 377 -378)+
(379 -378 46)+
(63 -378 380)+
(379 370 380 -381)+
(382 -381 47)+
(68 -381 383)+
(382 -384 383 369)+
(385 -384 48)+
(386 -384 -73)+
(368 385 386 -387)+
(388 -387 49)+
(77 -387 389)+
(388 367 389 -390)+
(391 -390 34)+
(82 -390 392)+
(391 -393 392 366)+
(394 -393 35)+
(87 -393 395)+
(394 -396 395 365)+
(397 -396 36)+
(92 -396 398)+
(397 -399 398 364)+
(400 -399 37)+
(97 -399 401)+
(400 -402 401 363)+
(403 -402 38)+
(102 -402 404)+
(403 -405 404 362)+
(406 -405 39)+
(107 -405 407)+
(406 -408 407 361)+
(409 -408 40)+
(112 -408 410)+
(409 -411 410 360)+
(412 -411 41)+
(117 -411 413)+
(412 -414 413 359)+
(79 195 -73)+*
(8 -79 194 78)+*
(-84 9 193 83)+*
(10 192 -89)+*
(11 191 -94)+*
(-99 190 104)+*
(-231 99 233 232)+*
(-225 89 228)+*
(-228 94 230 229)+*
(-84 193 83 89)+*
(79 221 78 220 -73)+*
(84 222 78 -73)+*
(89 228 78 -73 83)+*
(94 230 -73 83 78 229)+*
(104 234 83 78 -73)+*
(-195 -79 -73)+*
(237 104 -234)+*
(70 -65 66 64)+*
(65 198 -60)+*
(122 -246 248 247)+*
(-237 109 240)+*
(-261 136 263 262)+*
(255 127 -252)+*
(-264 267 139)+*
(142 -267 269 268)+*
(259 260 -258 133)+*
(-249 124 251 250)+*
(-243 119 245 244)+*
(-240 114 243)+*
(-255 130 257 256)+*
(104 269 268 83 78 -73)+*
(256 127 268 269 -252)+*
(-252 269 268)+*
(-256 269 268)+*
(-246 124 248 247)+*
(-122 185 124)+*
(-119 186 122)+*
(-114 187 119)+*
(13 189 -104)+*
(-109 188 114)+*
(124 -104 251 250)+*
(18 184 -124)+*
(21 181 -133)+*
(180 139 -136)+*
(136 181 -133)+*
(133 -130 182)+*
(130 257 -127 256)+*
(139 -136 268 269)+*
(-267 266 265 269 268)+*
(27 -151 175)+*
(28 -154 174)+*
(163 -160 172)+*
(160 -158 -157)+*
(25 -145 177)+*
(26 -148 176)+*
(29 -157 173)+*
updates 917
neweqs  108 qhead: 108
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 139 
(declare-fun extract ((_ BitVec 32)) (_ BitVec 16)): un 81 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 193 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 104 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 100 
(declare-fun = ((_ BitVec 16) (_ BitVec 16)) Bool): bc 86 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 174 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 79 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 191 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 96 
(declare-fun carry (Bool Bool Bool) Bool): nary 207 211 201 76 
(declare-fun bvule ((_ BitVec 32) (_ BitVec 32)) Bool): b 124 98 
(declare-fun bvmul ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32)): bc 95 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 176 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 105 
(declare-fun bit2bool ((_ BitVec 8)) Bool): un 154 180 
(declare-fun = ((_ BitVec 8) (_ BitVec 8)) Bool): bc 69 58 68 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 192 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 148 
(declare-fun extract ((_ BitVec 8)) (_ BitVec 7)): un 93 
(declare-fun bvule ((_ BitVec 16) (_ BitVec 16)) Bool): b 85 
(declare-fun bvule ((_ BitVec 9) (_ BitVec 9)) Bool): b 152 
(declare-fun bit2bool ((_ BitVec 8)) Bool): un 130 135 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 106 
(declare-fun bit2bool ((_ BitVec 8)) Bool): un 157 137 
(declare-fun concat ((_ BitVec 8) (_ BitVec 8)) (_ BitVec 16)): b 62 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 185 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 113 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 84 
(declare-fun bit2bool ((_ BitVec 8)) Bool): un 156 134 
(declare-fun concat ((_ BitVec 1) (_ BitVec 8)) (_ BitVec 9)): b 83 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 125 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 143 
(declare-fun bvadd ((_ BitVec 16) (_ BitVec 16)) (_ BitVec 16)): bc 175 
(declare-fun xor3 (Bool Bool Bool) Bool): nary 206 210 200 75 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 63 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 73 
(declare-fun bit2bool ((_ BitVec 8)) Bool): un 131 136 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 151 
(declare-fun concat ((_ BitVec 16) (_ BitVec 8) (_ BitVec 8)) (_ BitVec 32)): nary 92 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 103 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 147 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 129 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 108 
(declare-fun bit2bool ((_ BitVec 8)) Bool): un 72 133 
(declare-fun = ((_ BitVec 7) (_ BitVec 7)) Bool): bc 117 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 186 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 194 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 144 
(declare-fun extract ((_ BitVec 8)) (_ BitVec 1)): un 82 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 57 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 128 
(declare-fun bvadd ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32)): nary 132 
(declare-fun bvadd ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32)): bc 80 
(declare-fun bit2bool ((_ BitVec 8)) Bool): un 149 155 
(declare-fun bit2bool ((_ BitVec 8)) Bool): un 150 158 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 177 
(declare-fun bit2bool ((_ BitVec 32)) Bool): un 53 
#119 := k!0 [p 174 79 73 57 139 147 151 125 129 103 185 186 193 191 192 194 176 177 143 144 108 113 128 104 105 106 100 63 53 96 84 148 132 124] [t 8:0] 
#174 := (bit2bool[0] k!0) [r 2] [b1 := F] [t 8:1] [j 2 sat: -1] 
#79 := (bit2bool[1] k!0) [r 2] [p 67 74] [b2 := F merge-tf] [t 8:2] [j 2 sat: -2] 
#73 := (bit2bool[2] k!0) [r 2] [p 75 76] [b3 := F merge-tf] [t 8:3] [j 2 sat: -3] 
#57 := (bit2bool[3] k!0) [r 1] [p 77 195] [b4 := T merge-tf] [t 8:4] [j 1 sat: 4] 
#139 := (bit2bool[4] k!0) [r 1] [p 196 197] [b5 := T merge-tf] [t 8:5] [j 1 sat: 5] 
#147 := (bit2bool[5] k!0) [r 2] [p 198 199] [b6 := F merge-tf] [t 8:6] [j 2 sat: -6] 
#151 := (bit2bool[6] k!0) [r 1] [p 200 201] [b7 := T merge-tf] [t 8:7] [j 1 sat: 7] 
#125 := (bit2bool[7] k!0) [r 1] [p 202 203] [b8 := T merge-tf] [t 8:8] [j 1 sat: 8] 
#129 := (bit2bool[8] k!0) [r 1] [p 204 205] [b9 := T merge-tf] [t 8:9] [j 1 sat: 9] 
#103 := (bit2bool[9] k!0) [r 1] [p 206 207] [b10 := T merge-tf] [t 8:10] [j 1 sat: 10] 
#185 := (bit2bool[10] k!0) [r 1] [p 208 209] [b11 := T merge-tf] [t 8:11] [j 1 sat: 11] 
#186 := (bit2bool[11] k!0) [r 1] [p 210 211] [b12 := T merge-tf] [t 8:12] [j 1 sat: 12] 
#193 := (bit2bool[12] k!0) [r 1] [p 212 213] [b13 := T merge-tf] [t 8:13] [j 1 sat: 13] 
#191 := (bit2bool[13] k!0) [r 1] [p 214 215] [b14 := T merge-tf] [t 8:14] [j 1 sat: 14] 
#192 := (bit2bool[14] k!0) [r 1] [p 216 217] [b15 := T merge-tf] [t 8:15] [j 1 sat: 15] 
#194 := (bit2bool[15] k!0) [r 1] [p 218 219] [b16 := T merge-tf] [t 8:16] [j 1 sat: 16] 
#176 := (bit2bool[16] k!0) [r 1] [p 220 221] [b17 := T merge-tf] [t 8:17] [j 1 sat: 17] 
#177 := (bit2bool[17] k!0) [r 1] [b18 := T] [t 8:18] [j 1 sat: 18] 
#143 := (bit2bool[18] k!0) [r 1] [b19 := T] [t 8:19] [j 1 sat: 19] 
#144 := (bit2bool[19] k!0) [r 1] [b20 := T] [t 8:20] [j 1 sat: 20] 
#108 := (bit2bool[20] k!0) [r 1] [b21 := T] [t 8:21] [j 1 sat: 21] 
#113 := (bit2bool[21] k!0) [r 1] [b22 := T] [t 8:22] [j 1 sat: 22] 
#128 := (bit2bool[22] k!0) [r 1] [b23 := T] [t 8:23] [j 1 sat: 23] 
#104 := (bit2bool[23] k!0) [r 1] [b24 := T] [t 8:24] [j 1 sat: 24] 
#105 := (bit2bool[24] k!0) [r 1] [b25 := T] [t 8:25] [j 1 sat: 25] 
#106 := (bit2bool[25] k!0) [r 1] [b26 := T] [t 8:26] [j 1 sat: 26] 
#100 := (bit2bool[26] k!0) [r 1] [b27 := T] [t 8:27] [j 1 sat: 27] 
#63 := (bit2bool[27] k!0) [r 1] [b28 := T] [t 8:28] [j 1 sat: 28] 
#53 := (bit2bool[28] k!0) [r 1] [b29 := T] [t 8:29] [j 1 sat: 29] 
#96 := (bit2bool[29] k!0) [r 1] [b30 := T] [t 8:30] [j 1 sat: 30] 
#84 := (bit2bool[30] k!0) [r 1] [b31 := T] [t 8:31] [j 1 sat: 31] 
#148 := (bit2bool[31] k!0) [r 1] [b32 := T] [t 8:32] [j 1 sat: 32] 
#7 := bv[78:32] [p 132 80] [t 8:33] 
#1 := true [p 67 74 75 76 77 195 200 201 212 213 210 211 210 211 208 209 206 207 206 207 204 205 202 203 220 221 218 219 216 217 214 215 198 199 196 197 200 201] [b33 := T no-cgc] [t 8:54] 
#70 := bv[0:16] [p 92 86 86] [t 8:34] 
#9 := T1_575 [p 149 150 130 131 72 156 157 154 92 93 69 62 82] [t 8:35] 
#149 := (bit2bool[0] T1_575) [r 2] [b34 := F] [t 8:36] [j 2 sat: -34] 
#150 := (bit2bool[1] T1_575) [r 2] [b35 := F] [t 8:37] [j 2 sat: -35] 
#130 := (bit2bool[2] T1_575) [r 2] [b36 := F] [t 8:38] [j 2 sat: -36] 
#131 := (bit2bool[3] T1_575) [r 2] [b37 := F] [t 8:39] [j 2 sat: -37] 
#72 := (bit2bool[4] T1_575) [r 2] [b38 := F] [t 8:40] [j 2 sat: -38] 
#156 := (bit2bool[5] T1_575) [r 2] [b39 := F] [t 8:41] [j 2 sat: -39] 
#157 := (bit2bool[6] T1_575) [r 2] [b40 := F] [t 8:42] [j 2 sat: -40] 
#154 := (bit2bool[7] T1_575) [r 2] [b41 := F] [t 8:43] [j 2 sat: -41] 
#13 := T1_574 [r 59] [p 155 158 135 136 133 134 137 180 92 68 62 58 83] [t 8:44] [j 59 sat: 415] 
#155 := (bit2bool[0] T1_574) [r 1] [b42 := T] [t 8:45] [j 1 sat: 42] 
#158 := (bit2bool[1] T1_574) [r 2] [b43 := F] [t 8:46] [j 2 sat: -43] 
#135 := (bit2bool[2] T1_574) [r 2] [b44 := F] [t 8:47] [j 2 sat: -44] 
#136 := (bit2bool[3] T1_574) [r 2] [b45 := F] [t 8:48] [j 2 sat: -45] 
#133 := (bit2bool[4] T1_574) [r 2] [b46 := F] [t 8:49] [j 2 sat: -46] 
#134 := (bit2bool[5] T1_574) [r 2] [b47 := F] [t 8:50] [j 2 sat: -47] 
#137 := (bit2bool[6] T1_574) [r 2] [b48 := F] [t 8:51] [j 2 sat: -48] 
#180 := (bit2bool[7] T1_574) [r 2] [b49 := F] [t 8:52] [j 2 sat: -49] 
#92 := (concat bv[0:16] T1_575 T1_574) [p 132 95 80] [t 8:53] 
#132 := (bvadd bv[78:32] #92 k!0) [p 124] [t 8:55] 
#66 := (not #90) [b51 := T no-cgc] [t 8:56] 
#89 := (and #155 #174) [r 2] [p 67 74] [b52 := F merge-tf] [j 2 sat: -52] 
#181 := (not #158) [r 1] [p 67 74] [b53 := T merge-tf] [t 8:129] [j 1 sat: 53] 
#67 := (xor3 #79 #89 #181) [r 1] [b54 := T] [t 8:57] [j 75 congruence] 
#74 := (carry #79 #89 #181) [r 2] [p 75 76] [b55 := F merge-tf] [t 8:58] [j 2 sat: -55] 
#178 := (= #135 #158) [r 1] [p 75 76] [b56 := T merge-tf] [t 8:130] [j 1 sat: 56] 
#75 := (xor3 #73 #74 #178) [r 1] [b57 := T] [t 8:59] [j 198 congruence] 
#76 := (carry #73 #74 #178) [r 2] [p 77 195] [b58 := F merge-tf] [t 8:60] [j 2 sat: -58] 
#182 := (= #136 #179) [r 1] [p 77 195] [b60 := T merge-tf] [t 8:131] [j 1 sat: 60] 
#77 := (xor3 #57 #76 #182) [r 2] [b61 := F] [t 8:61] [j 206 congruence] 
#118 := (not #56) [r 2] [p 196 197] [b64 := F merge-tf] [t 8:132] [j 2 sat: -64] 
#195 := (carry #57 #76 #182) [r 1] [p 196 197] [b65 := T merge-tf] [t 8:62] [j 1 sat: 65] 
#196 := (xor3 #118 #139 #195) [r 2] [b66 := F] [t 8:63] [j 210 congruence] 
#126 := (not #65) [r 2] [p 198 199] [b69 := F merge-tf] [t 8:133] [j 2 sat: -69] 
#197 := (carry #118 #139 #195) [r 1] [p 198 199] [b70 := T merge-tf] [t 8:64] [j 1 sat: 70] 
#198 := (xor3 #126 #147 #197) [r 1] [b71 := T] [t 8:65] [j 1 sat: 71] 
#114 := (= #91 #137) [r 1] [p 200 201] [b73 := T merge-tf] [t 8:134] [j 1 sat: 73] 
#199 := (carry #126 #147 #197) [r 2] [p 200 201] [b74 := F merge-tf] [t 8:66] [j 2 sat: -74] 
#200 := (xor3 #114 #151 #199) [r 2] [b75 := F] [t 8:67] [j 2 sat: -75] 
#167 := (not #170) [r 2] [p 202 203] [b78 := F merge-tf] [t 8:135] [j 2 sat: -78] 
#201 := (carry #114 #151 #199) [r 1] [p 202 203] [b79 := T merge-tf] [t 8:68] [j 1 sat: 79] 
#202 := (xor3 #125 #167 #201) [r 2] [b80 := F] [t 8:69] [j 206 congruence] 
#140 := (not #138) [r 2] [p 204 205] [b83 := F merge-tf] [t 8:136] [j 2 sat: -83] 
#203 := (carry #125 #167 #201) [r 1] [p 204 205] [b84 := T merge-tf] [t 8:70] [j 1 sat: 84] 
#204 := (xor3 #129 #140 #203) [r 2] [b85 := F] [t 8:71] [j 206 congruence] 
#183 := (not #145) [r 2] [p 206 207] [b88 := F merge-tf] [t 8:137] [j 2 sat: -88] 
#205 := (carry #129 #140 #203) [r 1] [p 206 207] [b89 := T merge-tf] [t 8:72] [j 1 sat: 89] 
#206 := (xor3 #103 #183 #205) [r 2] [b90 := F] [t 8:73] [j 2 sat: -90] 
#163 := (not #187) [r 2] [p 208 209] [b93 := F merge-tf] [t 8:138] [j 2 sat: -93] 
#207 := (carry #103 #183 #205) [r 1] [p 208 209] [b94 := T merge-tf] [t 8:74] [j 1 sat: 94] 
#208 := (xor3 #163 #185 #207) [r 2] [b95 := F] [t 8:75] [j 210 congruence] 
#160 := (not #164) [r 2] [p 210 211] [b98 := F merge-tf] [t 8:139] [j 2 sat: -98] 
#209 := (carry #163 #185 #207) [r 1] [p 210 211] [b99 := T merge-tf] [t 8:76] [j 1 sat: 99] 
#210 := (xor3 #160 #186 #209) [r 2] [b100 := F] [t 8:77] [j 220 congruence] 
#165 := (not #161) [r 2] [p 212 213] [b103 := F merge-tf] [t 8:140] [j 2 sat: -103] 
#211 := (carry #160 #186 #209) [r 1] [p 212 213] [b104 := T merge-tf] [t 8:78] [j 1 sat: 104] 
#212 := (xor3 #165 #193 #211) [r 2] [b105 := F] [t 8:79] [j 210 congruence] 
#166 := (not #189) [r 2] [p 214 215] [b108 := F merge-tf] [t 8:141] [j 2 sat: -108] 
#213 := (carry #165 #193 #211) [r 1] [p 214 215] [b109 := T merge-tf] [t 8:80] [j 1 sat: 109] 
#214 := (xor3 #166 #191 #213) [r 2] [b110 := F] [t 8:81] [j 210 congruence] 
#110 := (not #109) [r 2] [p 216 217] [b113 := F merge-tf] [t 8:142] [j 2 sat: -113] 
#215 := (carry #166 #191 #213) [r 1] [p 216 217] [b114 := T merge-tf] [t 8:82] [j 1 sat: 114] 
#216 := (xor3 #110 #192 #215) [r 2] [b115 := F] [t 8:83] [j 210 congruence] 
#88 := (not #87) [r 2] [p 218 219] [b118 := F merge-tf] [t 8:143] [j 2 sat: -118] 
#217 := (carry #110 #192 #215) [r 1] [p 218 219] [b119 := T merge-tf] [t 8:84] [j 1 sat: 119] 
#218 := (xor3 #88 #194 #217) [r 2] [b120 := F] [t 8:85] [j 210 congruence] 
#111 := (and #127 #154) [r 2] [p 220 221] [b121 := F merge-tf] [t 8:144] [j 2 sat: -121] 
#219 := (carry #88 #194 #217) [r 1] [p 220 221] [b122 := T merge-tf] [t 8:86] [j 1 sat: 122] 
#220 := (xor3 #111 #176 #219) [r 2] [b123 := F] [t 8:87] [j 2 sat: -123] 
#221 := (carry #111 #176 #219) [r 1] [b124 := T] [t 8:88] [j 211 congruence] 
#224 := (not #223) [b126 := F no-cgc] [t 8:89] 
#227 := (not #226) [b129 := F no-cgc] [t 8:90] 
#230 := (not #229) [b132 := F no-cgc] [t 8:91] 
#233 := (not #232) [b135 := F no-cgc] [t 8:92] 
#236 := (not #235) [b138 := F no-cgc] [t 8:93] 
#239 := (not #238) [b141 := F no-cgc] [t 8:94] 
#242 := (not #241) [b144 := F no-cgc] [t 8:95] 
#245 := (not #244) [b147 := F no-cgc] [t 8:96] 
#248 := (not #247) [b150 := F no-cgc] [t 8:97] 
#251 := (not #250) [b153 := F no-cgc] [t 8:98] 
#254 := (not #253) [b156 := F no-cgc] [t 8:99] 
#257 := (not #256) [b159 := F no-cgc] [t 8:100] 
#260 := (not #259) [b162 := F no-cgc] [t 8:101] 
#263 := (not #262) [b165 := F no-cgc] [t 8:102] 
#266 := (not #265) [b168 := F no-cgc] [t 8:103] 
#124 := (bvule k!0 #132) [r 2] [b169 := F] [t 8:104] [j 2 sat: -169] 
#422 := (or #419 #420 #421) [b294 := F no-cgc] 
#107 := bv[4294967295:32] [p 95 98] [t 8:105] 
#95 := (bvmul bv[4294967295:32] #92) [r 107] [p 98] [t 8:106] [j 107 bv 42 296 298 300 302 304 306 308 310 312 314 316 318 320 322 324 326 326 326 326 326 326 326 326 326 326 326 326 326 326 326 326 == 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 -> v106 == v105] 
#425 := (not #424) [b296 := T no-cgc] [t 8:107] 
#429 := (= #426 #135) [b298 := T no-cgc] [t 8:108] 
#432 := (= #428 #136) [b300 := T no-cgc] [t 8:109] 
#435 := (= #431 #133) [b302 := T no-cgc] [t 8:110] 
#438 := (= #434 #134) [b304 := T no-cgc] [t 8:111] 
#441 := (= #437 #137) [b306 := T no-cgc] [t 8:112] 
#444 := (= #440 #180) [b308 := T no-cgc] [t 8:113] 
#447 := (= #443 #149) [b310 := T no-cgc] [t 8:114] 
#450 := (= #446 #150) [b312 := T no-cgc] [t 8:115] 
#453 := (= #449 #130) [b314 := T no-cgc] [t 8:116] 
#456 := (= #452 #131) [b316 := T no-cgc] [t 8:117] 
#459 := (= #455 #72) [b318 := T no-cgc] [t 8:118] 
#462 := (= #458 #156) [b320 := T no-cgc] [t 8:119] 
#465 := (= #461 #157) [b322 := T no-cgc] [t 8:120] 
#468 := (= #464 #154) [b324 := T no-cgc] [t 8:121] 
#469 := (not #467) [b326 := T no-cgc] [t 8:122] 
#112 := bv[4294967231:32] [p 98] [t 8:123] 
#98 := (bvule #95 bv[4294967231:32]) [r 2] [b327 := F] [t 8:124] [j 2 sat: -327] 
#504 := (or #467 #503) [b352 := F no-cgc] 
#93 := (extract[7:1] T1_575) [r 142] [p 117] [t 8:125] [j 142 sat: 353] 
#142 := bv[0:7] [p 117 117] [t 8:126] 
#117 := (= #93 bv[0:7]) [b353 := T] 
#71 := bv[0:8] [p 68 69] [t 8:127] 
#68 := (= T1_574 bv[0:8]) [b354 := F] 
#69 := (= T1_575 bv[0:8]) [b355 := F] 
#80 := (bvadd bv[78:32] #92) [p 81] [t 8:128] 
#2 := false [p 220 221 206 207 208 209 210 211 212 213 214 215 216 217 218 219 196 197 198 199 202 203 204 205 77 195 75 76 75 76 67 74 200 201] [b356 := F no-cgc] [t 8:145] 
#81 := (extract[31:16] #80) [r 70] [p 86] [t 8:146] [j 70 sat: 357] 
#86 := (= #81 bv[0:16]) [b357 := T] 
#62 := (concat T1_575 T1_574) [p 175 85] [t 8:147] 
#190 := bv[78:16] [p 175] [t 8:148] 
#175 := (bvadd bv[78:16] #62) [p 85] [t 8:149] 
#85 := (bvule #62 #175) [r 1] [b358 := T] [t 8:150] [j 1 sat: 358] 
#560 := (or #557 #558 #559) [b414 := T no-cgc] 
#59 := bv[1:8] [p 58 155 158 135 136 133 134 137 180 92 68 62 58 83] [t 8:151] 
#58 := (= T1_574 bv[1:8]) [b415 := T] 
#146 := bv[256:9] [p 152] [t 8:152] 
#82 := (extract[0:0] T1_575) [p 83] [t 8:153] 
#83 := (concat #82 T1_574) [p 152] [t 8:154] 
#152 := (bvule bv[256:9] #83) [r 2] [b416 := F] [t 8:155] [j 2 sat: -416] 
bool-vars
1: 174 l_false (bit2bool[0] k!0) bv
2: 79 l_false (bit2bool[1] k!0) bv
3: 73 l_false (bit2bool[2] k!0) bv
4: 57 l_true (bit2bool[3] k!0) bv
5: 139 l_true (bit2bool[4] k!0) bv
6: 147 l_false (bit2bool[5] k!0) bv
7: 151 l_true (bit2bool[6] k!0) bv
8: 125 l_true (bit2bool[7] k!0) bv
9: 129 l_true (bit2bool[8] k!0) bv
10: 103 l_true (bit2bool[9] k!0) bv
11: 185 l_true (bit2bool[10] k!0) bv
12: 186 l_true (bit2bool[11] k!0) bv
13: 193 l_true (bit2bool[12] k!0) bv
14: 191 l_true (bit2bool[13] k!0) bv
15: 192 l_true (bit2bool[14] k!0) bv
16: 194 l_true (bit2bool[15] k!0) bv
17: 176 l_true (bit2bool[16] k!0) bv
18: 177 l_true (bit2bool[17] k!0) bv
19: 143 l_true (bit2bool[18] k!0) bv
20: 144 l_true (bit2bool[19] k!0) bv
21: 108 l_true (bit2bool[20] k!0) bv
22: 113 l_true (bit2bool[21] k!0) bv
23: 128 l_true (bit2bool[22] k!0) bv
24: 104 l_true (bit2bool[23] k!0) bv
25: 105 l_true (bit2bool[24] k!0) bv
26: 106 l_true (bit2bool[25] k!0) bv
27: 100 l_true (bit2bool[26] k!0) bv
28: 63 l_true (bit2bool[27] k!0) bv
29: 53 l_true (bit2bool[28] k!0) bv
30: 96 l_true (bit2bool[29] k!0) bv
31: 84 l_true (bit2bool[30] k!0) bv
32: 148 l_true (bit2bool[31] k!0) bv
33: 1 l_true true bv
34: 149 l_false (bit2bool[0] T1_575) bv
35: 150 l_false (bit2bool[1] T1_575) bv
36: 130 l_false (bit2bool[2] T1_575) bv
37: 131 l_false (bit2bool[3] T1_575) bv
38: 72 l_false (bit2bool[4] T1_575) bv
39: 156 l_false (bit2bool[5] T1_575) bv
40: 157 l_false (bit2bool[6] T1_575) bv
41: 154 l_false (bit2bool[7] T1_575) bv
42: 155 l_true (bit2bool[0] T1_574) bv
43: 158 l_false (bit2bool[1] T1_574) bv
44: 135 l_false (bit2bool[2] T1_574) bv
45: 136 l_false (bit2bool[3] T1_574) bv
46: 133 l_false (bit2bool[4] T1_574) bv
47: 134 l_false (bit2bool[5] T1_574) bv
48: 137 l_false (bit2bool[6] T1_574) bv
49: 180 l_false (bit2bool[7] T1_574) bv
51: 66 l_true (not #90) bv
52: 89 l_false (and #155 #174)
53: 181 l_true (not #158) bv
54: 67 l_true (xor3 #79 #89 #181) bv
55: 74 l_false (carry #79 #89 #181) bv
56: 178 l_true (= #135 #158) bv
57: 75 l_true (xor3 #73 #74 #178) bv
58: 76 l_false (carry #73 #74 #178) bv
60: 182 l_true (= #136 #179) bv
61: 77 l_false (xor3 #57 #76 #182) bv
64: 118 l_false (not #56) bv
65: 195 l_true (carry #57 #76 #182) bv
66: 196 l_false (xor3 #118 #139 #195) bv
69: 126 l_false (not #65) bv
70: 197 l_true (carry #118 #139 #195) bv
71: 198 l_true (xor3 #126 #147 #197) bv
73: 114 l_true (= #91 #137) bv
74: 199 l_false (carry #126 #147 #197) bv
75: 200 l_false (xor3 #114 #151 #199) bv
78: 167 l_false (not #170) bv
79: 201 l_true (carry #114 #151 #199) bv
80: 202 l_false (xor3 #125 #167 #201) bv
83: 140 l_false (not #138) bv
84: 203 l_true (carry #125 #167 #201) bv
85: 204 l_false (xor3 #129 #140 #203) bv
88: 183 l_false (not #145) bv
89: 205 l_true (carry #129 #140 #203) bv
90: 206 l_false (xor3 #103 #183 #205) bv
93: 163 l_false (not #187) bv
94: 207 l_true (carry #103 #183 #205) bv
95: 208 l_false (xor3 #163 #185 #207) bv
98: 160 l_false (not #164) bv
99: 209 l_true (carry #163 #185 #207) bv
100: 210 l_false (xor3 #160 #186 #209) bv
103: 165 l_false (not #161) bv
104: 211 l_true (carry #160 #186 #209) bv
105: 212 l_false (xor3 #165 #193 #211) bv
108: 166 l_false (not #189) bv
109: 213 l_true (carry #165 #193 #211) bv
110: 214 l_false (xor3 #166 #191 #213) bv
113: 110 l_false (not #109) bv
114: 215 l_true (carry #166 #191 #213) bv
115: 216 l_false (xor3 #110 #192 #215) bv
118: 88 l_false (not #87) bv
119: 217 l_true (carry #110 #192 #215) bv
120: 218 l_false (xor3 #88 #194 #217) bv
121: 111 l_false (and #127 #154) bv
122: 219 l_true (carry #88 #194 #217) bv
123: 220 l_false (xor3 #111 #176 #219) bv
124: 221 l_true (carry #111 #176 #219) bv
126: 224 l_false (not #223) bv
129: 227 l_false (not #226) bv
132: 230 l_false (not #229) bv
135: 233 l_false (not #232) bv
138: 236 l_false (not #235) bv
141: 239 l_false (not #238) bv
144: 242 l_false (not #241) bv
147: 245 l_false (not #244) bv
150: 248 l_false (not #247) bv
153: 251 l_false (not #250) bv
156: 254 l_false (not #253) bv
159: 257 l_false (not #256) bv
162: 260 l_false (not #259) bv
165: 263 l_false (not #262) bv
168: 266 l_false (not #265) bv
169: 124 l_false (bvule k!0 #132) bv
294: 422 l_false (or #419 #420 #421)
296: 425 l_true (not #424) bv
298: 429 l_true (= #426 #135) bv
300: 432 l_true (= #428 #136) bv
302: 435 l_true (= #431 #133) bv
304: 438 l_true (= #434 #134) bv
306: 441 l_true (= #437 #137) bv
308: 444 l_true (= #440 #180) bv
310: 447 l_true (= #443 #149) bv
312: 450 l_true (= #446 #150) bv
314: 453 l_true (= #449 #130) bv
316: 456 l_true (= #452 #131) bv
318: 459 l_true (= #455 #72) bv
320: 462 l_true (= #458 #156) bv
322: 465 l_true (= #461 #157) bv
324: 468 l_true (= #464 #154) bv
326: 469 l_true (not #467) bv
327: 98 l_false (bvule #95 bv[4294967231:32]) bv
352: 504 l_false (or #467 #503)
353: 117 l_true (= #93 bv[0:7])
354: 68 l_false (= T1_574 bv[0:8])
355: 69 l_false (= T1_575 bv[0:8])
356: 2 l_false false bv
357: 86 l_true (= #81 bv[0:16])
358: 85 l_true (bvule #62 #175) bv
414: 560 l_true (or #557 #558 #559)
415: 58 l_true (= T1_574 bv[1:8])
416: 152 l_false (bvule bv[256:9] #83) bv
bv-solver:
v0    119  -> 119  (= 4294967256) 1:(bit2bool[0] k!0) 2:(bit2bool[1] k!0) 3:(bit2bool[2] k!0) 4:(bit2bool[3] k!0) 5:(bit2bool[4] k!0) 6:(bit2bool[5] k!0) 7:(bit2bool[6] k!0) 8:(bit2bool[7] k!0) 9:(bit2bool[8] k!0) 10:(bit2bool[9] k!0) 11:(bit2bool[10] k!0) 12:(bit2bool[11] k!0) 13:(bit2bool[12] k!0) 14:(bit2bool[13] k!0) 15:(bit2bool[14] k!0) 16:(bit2bool[15] k!0) 17:(bit2bool[16] k!0) 18:(bit2bool[17] k!0) 19:(bit2bool[18] k!0) 20:(bit2bool[19] k!0) 21:(bit2bool[20] k!0) 22:(bit2bool[21] k!0) 23:(bit2bool[22] k!0) 24:(bit2bool[23] k!0) 25:(bit2bool[24] k!0) 26:(bit2bool[25] k!0) 27:(bit2bool[26] k!0) 28:(bit2bool[27] k!0) 29:(bit2bool[28] k!0) 30:(bit2bool[29] k!0) 31:(bit2bool[30] k!0) 32:(bit2bool[31] k!0)
v1    174  -> 174  119[0]
v2    79   -> 79   119[1]
v3    73   -> 73   119[2]
v4    57   -> 57   119[3]
v5    139  -> 139  119[4]
v6    147  -> 147  119[5]
v7    151  -> 151  119[6]
v8    125  -> 125  119[7]
v9    129  -> 129  119[8]
v10   103  -> 103  119[9]
v11   185  -> 185  119[10]
v12   186  -> 186  119[11]
v13   193  -> 193  119[12]
v14   191  -> 191  119[13]
v15   192  -> 192  119[14]
v16   194  -> 194  119[15]
v17   176  -> 176  119[16]
v18   177  -> 177  119[17]
v19   143  -> 143  119[18]
v20   144  -> 144  119[19]
v21   108  -> 108  119[20]
v22   113  -> 113  119[21]
v23   128  -> 128  119[22]
v24   104  -> 104  119[23]
v25   105  -> 105  119[24]
v26   106  -> 106  119[25]
v27   100  -> 100  119[26]
v28   63   -> 63   119[27]
v29   53   -> 53   119[28]
v30   96   -> 96   119[29]
v31   84   -> 84   119[30]
v32   148  -> 148  119[31]
v33   7    -> 7    (= 78) -33:false 33:true 33:true 33:true -33:false -33:false 33:true -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false
v34   70   -> 81   (= 0) -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false
v35   9    -> 9    (= 0) 34:(bit2bool[0] T1_575) 35:(bit2bool[1] T1_575) 36:(bit2bool[2] T1_575) 37:(bit2bool[3] T1_575) 38:(bit2bool[4] T1_575) 39:(bit2bool[5] T1_575) 40:(bit2bool[6] T1_575) 41:(bit2bool[7] T1_575)
v36   149  -> 149  83[8] 82[0] 62[8] 92[8] 9[0]
v37   150  -> 150  62[9] 93[0] 92[9] 9[1]
v38   130  -> 130  62[10] 93[1] 92[10] 9[2]
v39   131  -> 131  62[11] 93[2] 92[11] 9[3]
v40   72   -> 72   62[12] 93[3] 92[12] 9[4]
v41   156  -> 156  62[13] 93[4] 92[13] 9[5]
v42   157  -> 157  62[14] 93[5] 92[14] 9[6]
v43   154  -> 154  62[15] 93[6] 92[15] 9[7]
v44   13   -> 13   (= 1) 42:(bit2bool[0] T1_574) 43:(bit2bool[1] T1_574) 44:(bit2bool[2] T1_574) 45:(bit2bool[3] T1_574) 46:(bit2bool[4] T1_574) 47:(bit2bool[5] T1_574) 48:(bit2bool[6] T1_574) 49:(bit2bool[7] T1_574)
v45   155  -> 155  83[0] 175[0] 62[0] 80[0] 95[0] 92[0] 13[0]
v46   158  -> 158  83[1] 62[1] 92[1] 13[1]
v47   135  -> 135  83[2] 62[2] 92[2] 13[2]
v48   136  -> 136  83[3] 62[3] 92[3] 13[3]
v49   133  -> 133  83[4] 62[4] 92[4] 13[4]
v50   134  -> 134  83[5] 62[5] 92[5] 13[5]
v51   137  -> 137  83[6] 62[6] 92[6] 13[6]
v52   180  -> 180  83[7] 62[7] 92[7] 13[7]
v53   92   -> 92   (= 1) 42:(bit2bool[0] T1_574) 43:(bit2bool[1] T1_574) 44:(bit2bool[2] T1_574) 45:(bit2bool[3] T1_574) 46:(bit2bool[4] T1_574) 47:(bit2bool[5] T1_574) 48:(bit2bool[6] T1_574) 49:(bit2bool[7] T1_574) 34:(bit2bool[0] T1_575) 35:(bit2bool[1] T1_575) 36:(bit2bool[2] T1_575) 37:(bit2bool[3] T1_575) 38:(bit2bool[4] T1_575) 39:(bit2bool[5] T1_575) 40:(bit2bool[6] T1_575) 41:(bit2bool[7] T1_575) -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false
v54   1    -> 1   
v55   132  -> 132  (= 39) 51:(not #90) 54:(xor3 #79 #89 #181) 57:(xor3 #73 #74 #178) 61:(xor3 #57 #76 #182) 66:(xor3 #118 #139 #195) 71:(xor3 #126 #147 #197) 75:(xor3 #114 #151 #199) 80:(xor3 #125 #167 #201) 85:(xor3 #129 #140 #203) 90:(xor3 #103 #183 #205) 95:(xor3 #163 #185 #207) 100:(xor3 #160 #186 #209) 105:(xor3 #165 #193 #211) 110:(xor3 #166 #191 #213) 115:(xor3 #110 #192 #215) 120:(xor3 #88 #194 #217) 123:(xor3 #111 #176 #219) 126:(not #223) 129:(not #226) 132:(not #229) 135:(not #232) 138:(not #235) 141:(not #238) 144:(not #241) 147:(not #244) 150:(not #247) 153:(not #250) 156:(not #253) 159:(not #256) 162:(not #259) 165:(not #262) 168:(not #265)
v56   66   -> 66   132[0]
v57   67   -> 67   132[1]
v58   74   -> 74   (carry #79 #89 #181)
v59   75   -> 75   132[2]
v60   76   -> 76   (carry #73 #74 #178)
v61   77   -> 77   132[3]
v62   195  -> 195  (carry #57 #76 #182)
v63   196  -> 196  132[4]
v64   197  -> 197  (carry #118 #139 #195)
v65   198  -> 198  132[5]
v66   199  -> 199  (carry #126 #147 #197)
v67   200  -> 200  132[6]
v68   201  -> 201  (carry #114 #151 #199)
v69   202  -> 202  132[7]
v70   203  -> 203  (carry #125 #167 #201)
v71   204  -> 204  132[8]
v72   205  -> 205  (carry #129 #140 #203)
v73   206  -> 206  132[9]
v74   207  -> 207  (carry #103 #183 #205)
v75   208  -> 208  132[10]
v76   209  -> 209  (carry #163 #185 #207)
v77   210  -> 210  132[11]
v78   211  -> 211  (carry #160 #186 #209)
v79   212  -> 212  132[12]
v80   213  -> 213  (carry #165 #193 #211)
v81   214  -> 214  132[13]
v82   215  -> 215  (carry #166 #191 #213)
v83   216  -> 216  132[14]
v84   217  -> 217  (carry #110 #192 #215)
v85   218  -> 218  132[15]
v86   219  -> 219  (carry #88 #194 #217)
v87   220  -> 220  132[16]
v88   221  -> 221  (carry #111 #176 #219)
v89   224  -> 224  132[17]
v90   227  -> 227  132[18]
v91   230  -> 230  132[19]
v92   233  -> 233  132[20]
v93   236  -> 236  132[21]
v94   239  -> 239  132[22]
v95   242  -> 242  132[23]
v96   245  -> 245  132[24]
v97   248  -> 248  132[25]
v98   251  -> 251  132[26]
v99   254  -> 254  132[27]
v100  257  -> 257  132[28]
v101  260  -> 260  132[29]
v102  263  -> 263  132[30]
v103  266  -> 266  132[31]
v104  124  -> 124 
v105  107  -> 107  (= 4294967295) 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true
v106  95   -> 95   (= 4294967295) 42:(bit2bool[0] T1_574) 296:(not #424) 298:(= #426 #135) 300:(= #428 #136) 302:(= #431 #133) 304:(= #434 #134) 306:(= #437 #137) 308:(= #440 #180) 310:(= #443 #149) 312:(= #446 #150) 314:(= #449 #130) 316:(= #452 #131) 318:(= #455 #72) 320:(= #458 #156) 322:(= #461 #157) 324:(= #464 #154) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467) 326:(not #467)
v107  425  -> 425  95[1]
v108  429  -> 429  95[2]
v109  432  -> 432  95[3]
v110  435  -> 435  95[4]
v111  438  -> 438  95[5]
v112  441  -> 441  95[6]
v113  444  -> 444  95[7]
v114  447  -> 447  95[8]
v115  450  -> 450  95[9]
v116  453  -> 453  95[10]
v117  456  -> 456  95[11]
v118  459  -> 459  95[12]
v119  462  -> 462  95[13]
v120  465  -> 465  95[14]
v121  468  -> 468  95[15]
v122  469  -> 469  95[31] 95[30] 95[29] 95[28] 95[27] 95[26] 95[25] 95[24] 95[23] 95[22] 95[21] 95[20] 95[19] 95[18] 95[17] 95[16]
v123  112  -> 112  (= 4294967231) 33:true 33:true 33:true 33:true 33:true 33:true -33:false 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true 33:true
v124  98   -> 98  
v125  93   -> 93   (= 0) 35:(bit2bool[1] T1_575) 36:(bit2bool[2] T1_575) 37:(bit2bool[3] T1_575) 38:(bit2bool[4] T1_575) 39:(bit2bool[5] T1_575) 40:(bit2bool[6] T1_575) 41:(bit2bool[7] T1_575)
v126  142  -> 93   (= 0) -33:false -33:false -33:false -33:false -33:false -33:false -33:false
v127  71   -> 71   (= 0) -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false
v128  80   -> 80   (= 79) 42:(bit2bool[0] T1_574) 53:(not #158) 56:(= #135 #158) 60:(= #136 #179) 64:(not #56) 69:(not #65) 73:(= #91 #137) 78:(not #170) 83:(not #138) 88:(not #145) 93:(not #187) 98:(not #164) 103:(not #161) 108:(not #189) 113:(not #109) 118:(not #87) 121:(and #127 #154) 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false
v129  181  -> 181  175[1] 80[1]
v130  178  -> 178  175[2] 80[2]
v131  182  -> 182  175[3] 80[3]
v132  118  -> 118  175[4] 80[4]
v133  126  -> 126  175[5] 80[5]
v134  114  -> 114  175[6] 80[6]
v135  167  -> 167  175[7] 80[7]
v136  140  -> 140  175[8] 80[8]
v137  183  -> 183  175[9] 80[9]
v138  163  -> 163  175[10] 80[10]
v139  160  -> 160  175[11] 80[11]
v140  165  -> 165  175[12] 80[12]
v141  166  -> 166  175[13] 80[13]
v142  110  -> 110  175[14] 80[14]
v143  88   -> 88   175[15] 80[15]
v144  111  -> 111  81[0] 80[16]
v145  2    -> 2    81[15] 81[14] 81[13] 81[12] 81[11] 81[10] 81[9] 81[8] 81[7] 81[6] 81[5] 81[4] 81[3] 81[2] 81[1] 80[31] 80[30] 80[29] 80[28] 80[27] 80[26] 80[25] 80[24] 80[23] 80[22] 80[21] 80[20] 80[19] 80[18] 80[17]
v146  81   -> 81   (= 0) 121:(and #127 #154) 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false 356:false
v147  62   -> 62   (= 1) 42:(bit2bool[0] T1_574) 43:(bit2bool[1] T1_574) 44:(bit2bool[2] T1_574) 45:(bit2bool[3] T1_574) 46:(bit2bool[4] T1_574) 47:(bit2bool[5] T1_574) 48:(bit2bool[6] T1_574) 49:(bit2bool[7] T1_574) 34:(bit2bool[0] T1_575) 35:(bit2bool[1] T1_575) 36:(bit2bool[2] T1_575) 37:(bit2bool[3] T1_575) 38:(bit2bool[4] T1_575) 39:(bit2bool[5] T1_575) 40:(bit2bool[6] T1_575) 41:(bit2bool[7] T1_575)
v148  190  -> 190  (= 78) -33:false 33:true 33:true 33:true -33:false -33:false 33:true -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false
v149  175  -> 175  (= 79) 42:(bit2bool[0] T1_574) 53:(not #158) 56:(= #135 #158) 60:(= #136 #179) 64:(not #56) 69:(not #65) 73:(= #91 #137) 78:(not #170) 83:(not #138) 88:(not #145) 93:(not #187) 98:(not #164) 103:(not #161) 108:(not #189) 113:(not #109) 118:(not #87)
v150  85   -> 85  
v151  59   -> 13   (= 1) 33:true -33:false -33:false -33:false -33:false -33:false -33:false -33:false
v152  146  -> 146  (= 256) -33:false -33:false -33:false -33:false -33:false -33:false -33:false -33:false 33:true
v153  82   -> 82   (= 0) 34:(bit2bool[0] T1_575)
v154  83   -> 83   (= 1) 42:(bit2bool[0] T1_574) 43:(bit2bool[1] T1_574) 44:(bit2bool[2] T1_574) 45:(bit2bool[3] T1_574) 46:(bit2bool[4] T1_574) 47:(bit2bool[5] T1_574) 48:(bit2bool[6] T1_574) 49:(bit2bool[7] T1_574) 34:(bit2bool[0] T1_575)
v155  152  -> 152 
)
69: (= T1_575 bv[0:8]) :=
value according to model:  true
value of Boolean literal:  l_false
(define-fun k!0 () (_ BitVec 32)
  #xffffffd8)
(define-fun T1_575 () (_ BitVec 8)
  #x00)
(define-fun T1_574 () (_ BitVec 8)
  #x01)

ramon: end                  Mon Nov  4 10:12:58 2024
ramon: root.execname        z3
ramon: root.utime           0.000s
ramon: root.stime           0.020s
ramon: group.total          0.034s
ramon: group.utime          0.004s
ramon: group.stime          0.030s
ramon: group.mempeak        19600KiB
ramon: group.pidpeak        2
ramon: status               exited
[31mramon: exitcode             1[0m
ramon: walltime             0.175s
ramon: loadavg              0.19
