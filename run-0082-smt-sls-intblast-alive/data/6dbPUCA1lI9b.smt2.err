ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:42:48 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29267 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/6dbPUCA1lI9b.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             641320
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   61.3497     10000        49          0            1        2)
(smt.stats    0    101    705    395  1304/1170/111      98/12     6   18   51.86)
(sat.ddfw       1      1   31.8503     20001        98          1            1        3)
(sat.ddfw       1      1    37.037     40001       196          2            1        5)
(smt.stats    1    202   1175   1008  1446/1208/113     203/22     7   19   52.15)
(sat.ddfw       1      1   34.4828     70001       343          3            1        8)
(smt.stats    2    313   2082   2519  1611/1366/117     335/27     8   24   52.15)
ramon: poll                 wall=1.000s usage=0.888s mem=54196KiB load=0.89 rootload=0.88
(smt.stats    3    414   2653   3089  1640/1488/117     455/43     9   29   52.25)
(sat.ddfw       1      1   30.5577    110001       539          4            1       12)
(smt.stats    4    525   4041   4575  1844/1680/124     587/61    11   40   52.25)
(smt.stats    5    647   5301   6190  1965/1729/124     740/87    12   42   52.35)
(sat.ddfw       1      1   26.8812    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.888s mem=54420KiB load=1.00 rootload=1.00
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   6537   8538  2051/1831/124     922/95    12   42   52.35)
(smt.stats    7    859   7899  12634  2066/1918/124    1056/95    12   42   52.44)
(smt.stats    8    981   8685  14936  2126/1938/124    1213/99    12   42   52.44)
(sat.ddfw       1      1   23.8099    220001      1078          6            1       23)
(smt.stats    9   1115   9603  17670  2191/2037/125    1357/203    13   46   52.44)
(smt.stats   10   1216  10324  21068  2236/2065/125    1459/205    13   46   52.54)
(smt.stats   11   1327  11069  25724  2280/2105/125    1597/212    13   46   52.54)
ramon: poll                 wall=3.000s usage=2.922s mem=54828KiB load=1.03 rootload=1.03
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  11820  29317  2294/2148/125    1722/212    13   46   52.54)
(smt.stats   13   1583  12725  34971  2349/2164/126    1858/249    14   50   52.63)
(sat.ddfw       1      1   22.2293    290001      1421          7            1       30)
(smt.stats   14   1730  13560  40550  2384/2216/127    2001/253    15   52   52.63)
(smt.stats   15   1831  14834  43077  2404/2246/127    2107/254    15   52   52.73)
(smt.stats   16   1942  16188  44815  2418/2269/127    2226/254    15   52   52.73)
(smt.stats   17   2064  17268  46514  2432/2272/127    2366/256    15   52   52.82)
(smt.stats   18   2198  18073  53873  2443/2292/127    2503/256    15   52   52.82)
(smt.stats   19   2345  18729  60061  2446/2299/127    2654/256    15   52   52.82)
(smt.stats   20   2506  19634  63335  2462/2303/127    2816/257    15   52   52.82)
ramon: poll                 wall=4.000s usage=3.911s mem=55196KiB load=0.99 rootload=0.99
(smt.stats   21   2607  20586  66661  2463/2316/127    2916/257    15   52   53.08)
(smt.stats   22   2718  21748  69417  2465/2318/127    3025/257    15   52   53.08)
(smt.stats   23   2840  23188  73297  2466/2319/127    3146/257    15   52   53.08)
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 9223372036854775809 := 2112 << 59
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 9223372036854775809 := 2112 << 59
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 9223372036854775809 := 2112 << 59
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 9223372036854775809 := 2112 << 59
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&4611686018427387903
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 18446744073709551615 := 2112 << 59
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 9223372036854775809 := 2112 << 59
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&0
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 3 := 1056 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&0
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 3 := 1056 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&0
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 3 := 1056 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&0
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 1797 := 1056 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&0
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 1797 := 1056 << 60
(smt.stats   24   2974  24462  76833  2502/2321/128    3375/292    16   53   53.08)
(sat.ddfw       1      1   19.3424    370001      1813          8            1       38)
(smt.stats   25   3121  25088  82097  2525/2362/138    3521/293    16   53   53.08)
(smt.stats   26   3282  26346  90925  2558/2373/138    3682/390    17   55   53.18)
(smt.stats   27   3459  29310  94853  2583/2430/139    3875/397    18   55   53.18)
(smt.stats   28   3560  30592  96646  2596/2433/152    3993/397    18   55   53.27)
(smt.stats   29   3671  32691  99515  2601/2448/152    4102/397    18   55   53.27)
ramon: poll                 wall=5.008s usage=4.907s mem=55680KiB load=0.99 rootload=0.99
(smt.stats   30   3793  35313 103278  2600/2450/152    4200/439    19   80   53.37)
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 1 := 1&2
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 9223372036854775810 := 9796 << 61
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 1&2305843009213693953
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 1&2305843009213693953
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 1&2305843009213693954
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 2305843009213693954 := 9796 << 61
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 1&2305843009213693954
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 2305843009213693954 := 9796 << 61
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 11529215046068469760 := 9840 << 39
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&4611686018427387902
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 13835058055282163710 := 9840 << 39
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&4611686018427387902
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 9223372036854775806 := 9840 << 39
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&5409597208657920
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 5409597208657921 := 4920 << 40
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&5409597208657920
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 5409597208657921 := 4920 << 40
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&5409597208657920
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 5409597208657921 := 4920 << 40
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&5409597208657920
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 5409597208657921 := 4920 << 40
(smt.stats   31   3927  36858 106558  2676/2489/174    4356/443    20   85   53.56)
(sat.ddfw       1      1   17.5131    460001      2254          9            1       47)
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857664 := 9832 << 43
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9832 << 43
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9832 << 43
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693954
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857666 := 9828 << 45
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693954
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857666 := 9828 << 45
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693954
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857666 := 9828 << 45
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857664 := 9824 << 47
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693954
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857666 := 9820 << 49
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9824 << 47
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9824 << 47
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9820 << 49
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9820 << 49
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2306405959167115265
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16141464014449278977 := 9836 << 41
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9836 << 41
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9816 << 51
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  38548 109367  2793/2532/185    4499/451    20   85   53.65)
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9804 << 57
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9808 << 55
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9812 << 53
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9810 << 54
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9806 << 56
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9814 << 52
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9798 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693953
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857665 := 9802 << 58
(smt.stats   33   4235  39625 111836  2854/2654/215    4698/477    21   95   54.00)
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&4611686018427387902
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 18446744073709551614 := 9798 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&4611686018427387902
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 18446744073709551614 := 9798 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&4611686018427387902
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 18446744073709551614 := 9798 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&4611686018427387902
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 18446744073709551614 := 9798 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&4611686018427387902
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 18446744073709551614 := 9798 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&4611686018427387902
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 18446744073709551614 := 9798 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693952
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 16140901064495857664 := 9798 << 60
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 5386507464474625 := 4899 << 61
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 5386507464474624 := 4899 << 61
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #107))) 5386507464474624 := 4899 << 61
band: (band[62] (if (or #443 #446 #449 #452 #455 #458 #461 #464 #467 #470 #473 #476 #479 #482 #485 #488 ...) 0 (if #440 1 #954)) (shl[64] (* 2 #105) (mod #1208 64))) 0 := 0&9916
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1200 #1204) 64)) 9916 := 9916 << 1
(smt.stats   34   4412  41634 116829  2996/2771/255    4879/479    21   95   54.10)
ramon: poll                 wall=6.000s usage=5.890s mem=56424KiB load=0.99 rootload=0.99
(smt.stats   35   4606  44576 119423  3031/2826/265    5073/505    22  105   54.29)
(sat.ddfw       1      1   16.0077    560001      2745         10            1       57)
(smt.stats   36   4707  46267 121777  3052/2864/266    5181/509    23  107   54.48)
ramon: poll                 wall=7.000s usage=6.887s mem=56628KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.7354    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.885s mem=56708KiB load=1.00 rootload=1.00
(smt.stats   37   4818  47870 125475  3195/2995/268    5290/521    23  107   54.58)
(sat.ddfw       1      1   13.6581    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.882s mem=56784KiB load=1.00 rootload=0.99
(smt.stats   38   4940  49599 128793  3272/3057/268    5414/526    23  107   54.58)
(smt.delete-inactive-clauses  :num-deleted-clauses 13)
(smt.stats   39   5074  52734 132628  3334/3125/268    5537/550    24  111   54.67)
ramon: poll                 wall=10.000s usage=9.926s mem=56848KiB load=1.04 rootload=1.05
(sat.ddfw       1      1   12.8395    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.925s mem=56940KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    12.012   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=11.928s mem=56964KiB load=1.00 rootload=1.00
(smt.stats   40   5221  54123 135179  3592/3172/268    5689/565    24  111   54.86)
ramon: poll                 wall=13.000s usage=12.984s mem=57332KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   11.2731   1210001      5931         15            1      123)
ramon: poll                 wall=14.000s usage=13.988s mem=57332KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.989s mem=57332KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.6129   1370001      6715         16            1      139)
(smt.stats   41   5382  55515 138545  4012/3572/268    5851/578    24  111   55.05)
ramon: poll                 wall=16.000s usage=16.028s mem=57292KiB load=1.04 rootload=1.04
ramon: poll                 wall=17.000s usage=17.035s mem=57312KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   10.0319   1540001      7549         17            1      156)
ramon: poll                 wall=18.000s usage=18.039s mem=57600KiB load=1.00 rootload=1.00
(smt.stats   42   5559  58347 142655  4166/3905/268    6036/590    24  111   55.25)
(sat.ddfw       1      1   9.51475   1720001      8431         18            1      174)
ramon: poll                 wall=19.000s usage=19.038s mem=57608KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=20.038s mem=57700KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:43:08 2024
ramon: root.execname        z3
ramon: root.utime           20.100s
ramon: root.stime           0.000s
ramon: group.total          20.108s
ramon: group.utime          20.108s
ramon: group.stime          0.000s
ramon: group.mempeak        57956KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
