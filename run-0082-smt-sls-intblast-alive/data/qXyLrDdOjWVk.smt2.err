ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:09:16 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27330 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/qXyLrDdOjWVk.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             935434
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   86.9565     10000        49          0            1        2)
(smt.stats    0    101   1012    343  1156/1025/103      67/11     7   33   51.85)
(sat.ddfw       1      1   43.6725     20001        98          1            1        3)
(smt.stats    1    202   1573   1684  1318/1183/107     164/13    11   39   51.85)
(smt.stats    2    313   2961   2439  1350/1207/107     277/14    11   39   51.95)
(smt.stats    3    414   5069   3807  1363/1218/114     372/17    13   43   52.04)
(smt.stats    4    525   6694   4822  1379/1235/126     457/26    14   66   52.04)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018963967 := 18014398509481960 << 4
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018963967 := 18014398509481960 << 4
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 288230376151711743 := 18014398509481960 << 4
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481600&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481576 := 18014398509481960 << 4
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 270215977642229759 := 18014398509481961 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 270215977642229759 := 18014398509481961 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481963&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018963947 := 18014398509481962 << 6
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481963&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018963947 := 18014398509481962 << 6
(sat.ddfw       1      1    45.045     40001       196          2            1        5)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481963&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 270215977642229739 := 18014398509481962 << 6
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018963967 := 18014398509481963 << 7
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 270215977642229759 := 18014398509481963 << 7
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 270215977642229759 := 18014398509481963 << 7
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509479296&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509479297 := 18014398509481963 << 7
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509479296&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481647 := 18014398509481963 << 7
(smt.stats    5    647   8032   5868  1432/1237/127     583/38    15   68   52.23)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481965&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 1152921504606846957 := 18014398509481964 << 8
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481965&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 1152921504606846957 := 18014398509481964 << 8
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509479423&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 2305843009213691391 := 18014398509481964 << 8
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509476864&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509479424 := 18014398509481964 << 8
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509476864&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509479424 := 18014398509481964 << 8
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   8837   6681  1541/1384/172     675/40    17   80   52.34)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 2305843009213693951 := 18014398509481959 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481960&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 2305843009213693928 := 18014398509481959 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481960&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 2305843009213693928 := 18014398509481959 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481784&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 18014398509481959 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481784&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 0 := 18014398509481959 << 3
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509475071&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 144115188075848959 := 18014398509481957 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509475071&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 144115188075848959 := 18014398509481957 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 54043195528445953 := 18014398509481957 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 54043195528445953 := 18014398509481957 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481930&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481956 := 18014398509481957 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481930&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481931 := 18014398509481957 << 1
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18014398509481985 := 18014398509481958 << 2
(smt.stats    7    859  10492   8347  1609/1400/173     796/40    18   86   52.63)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509475327&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018957311 := 18014398509481958 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 0 := 18014398509481958 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 0&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 0 := 18014398509481958 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481880&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481933 := 18014398509481958 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481880&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509478657 := 18014398509481958 << 2
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481962&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 2305843009213693930 := 18014398509481961 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481248&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 1 := 18014398509481961 << 5
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481248&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509476095 := 18014398509481961 << 5
(sat.ddfw       1      1   39.5257     70001       343          3            1        8)
(smt.stats    8    981  11977  10393  1706/1535/216     901/78    21  117   52.85)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509480576&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481941 := 18014398509481962 << 6
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509480576&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481941 := 18014398509481962 << 6
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481966&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018963950 := 18014398509481965 << 9
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18014398509481983 := 18014398509481965 << 9
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481966&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18014398509481966 := 18014398509481965 << 9
(smt.stats    9   1115  13752  12632  1768/1569/221    1056/79    21  117   52.85)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509472256&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509477119 := 18014398509481965 << 9
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509472256&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509472255 := 18014398509481965 << 9
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481967&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 9223372036854775791 := 18014398509481966 << 10
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481967&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 9223372036854775791 := 18014398509481966 << 10
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481967&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 9223372036854775791 := 18014398509481966 << 10
ramon: poll                 wall=1.000s usage=0.969s mem=55172KiB load=0.97 rootload=0.95
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18392700878181105663 := 18014398509481977 << 21
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587647 := 18014398509481977 << 21
(smt.stats   10   1216  14686  14315  1842/1640/243    1166/93    22  125   53.05)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398494801920&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509478399 := 18014398509481977 << 21
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398494801920&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398494801919 := 18014398509481977 << 21
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398494801920&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509478401 := 18014398509481977 << 21
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398494801920&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509480191 := 18014398509481977 << 21
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481980&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18446744073709551612 := 18014398509481979 << 23
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481980&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18446744073709551612 := 18014398509481979 << 23
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18446744073709551615 := 18014398509481982 << 26
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18446744073709551614 := 18014398509481981 << 25
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18446744073709551615 := 18014398509481980 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18446744073709551615 := 18014398509481978 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18392700878181105663 := 18014398509481982 << 26
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 9241386435364257791 := 18014398509481982 << 26
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18392700878181105663 := 18014398509481981 << 25
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 9241386435364257791 := 18014398509481981 << 25
(smt.stats   11   1327  16805  17453  1928/1696/256    1267/97    23  133   53.25)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481981&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587645 := 18014398509481980 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481981&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587645 := 18014398509481980 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587646 := 18014398509481978 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481979&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587643 := 18014398509481978 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481980&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587644 := 18014398509481979 << 23
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481977&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587641 := 18014398509481976 << 20
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587646 := 18014398509481975 << 19
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587646 := 18014398509481974 << 18
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587646 := 18014398509481973 << 17
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587646 := 18014398509481972 << 16
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587646 := 18014398509481972 << 16
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587646 := 18014398509481972 << 16
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587646 := 18014398509481970 << 14
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18410715276690587646 := 18014398509481969 << 13
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   12   1450  18585  19576  2014/1773/281    1397/99    24  146   53.69)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018963967 := 18014398509481966 << 10
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018963967 := 18014398509481967 << 11
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 36028797018963967 := 18014398509481967 << 11
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481968&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 270215977642229744 := 18014398509481967 << 11
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 270215977642229759 := 18014398509481967 << 11
(sat.ddfw       1      1   33.6417    110001       539          4            1       12)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481982&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 54043195528445950 := 18014398509481980 << 24
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481981&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 576460752303423485 := 18014398509481983 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481981&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 576460752303423485 := 18014398509481983 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481981&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 4611686018427387901 := 18014398509481983 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481981&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 4611686018427387901 := 18014398509481983 << 27
(smt.stats   13   1584  21330  24178  2134/1913/326    1519/103    26  164   53.78)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398375264256&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481982 := 18014398509481983 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398375264256&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481981 := 18014398509481983 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398375264256&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481981 := 18014398509481983 << 27
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18428729675200069631 := 18014398509481976 << 20
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18428729675200069631 := 18014398509481978 << 22
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18392700878181105663 := 18014398509481971 << 15
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18392700878181105663 := 18014398509481971 << 15
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481975&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18392700878181105655 := 18014398509481975 << 19
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481975&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18392700878181105655 := 18014398509481975 << 19
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18428729675200069631 := 18014398509481974 << 18
(smt.stats   14   1731  23910  28340  2199/1942/331    1658/112    27  168   53.78)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18428729675200069631 := 18014398509481973 << 17
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 270215977642229759 := 18014398509481970 << 14
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 270215977642229759 := 18014398509481970 << 14
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 540431955284459519 := 18014398509481968 << 12
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481969&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 558446353793941489 := 18014398509481968 << 12
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481968&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18392700878181105648 := 18014398509481969 << 13
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481968&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18392700878181105648 := 18014398509481969 << 13
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509481983&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 18428729675200069631 := 18014398509481972 << 16
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509447168&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509447169 := 18014398509481967 << 11
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509447168&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509447167 := 18014398509481967 << 11
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509447168&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398473830401 := 18014398509481967 << 11
(smt.stats   15   1832  25871  30831  2256/1994/341    1764/117    28  170   53.97)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509463552&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509479679 := 18014398509481966 << 10
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 18014398509463552&0
shl: (shl[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509477377 := 18014398509481966 << 10
(smt.stats   16   1943  30041  34451  2305/2081/395    1773/122    30  241   54.16)
(sat.ddfw       1      1   29.0861    160000       784          5            1       17)
ramon: poll                 wall=2.000s usage=1.970s mem=57092KiB load=1.00 rootload=0.99
(smt.stats   17   2065  36086  38431  2378/2152/402    1866/134    32  275   54.45)
(sat.ddfw       1      1   25.4457    220001      1078          6            1       23)
(smt.stats   18   2199  42464  44039  2411/2166/402    1996/142    32  275   54.68)
ramon: poll                 wall=3.000s usage=2.970s mem=57132KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   22.5225    290001      1421          7            1       30)
band: (band[54] (shl[64] (bv2int %0) (mod #382 64)) (if (or #896 #897 #898 #899 #900 #901 #902 #903 #904 #905 #906 #907 #908 #909 #910 #911 ...) 0 (if #950 1 #968))) 0 := 6093494068805857&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #381) 64)) 15210245836071600353 := 11639842447726606 << 4
(sat.ddfw       1      1   20.2071    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.969s mem=57152KiB load=1.00 rootload=1.00
(smt.stats   19   2346  49130  52276  2565/2197/402    2159/149    32  275   54.78)
(smt.stats   20   2507  54464  57322  2638/2373/402    2311/163    32  275   54.78)
(sat.ddfw       1      1   18.3001    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=4.968s mem=57264KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.968s mem=57372KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   16.6973    560001      2745         10            1       57)
(smt.stats   21   2608  57007  60811  2700/2431/402    2413/163    32  275   54.97)
ramon: poll                 wall=7.000s usage=6.967s mem=57488KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.3524    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.967s mem=57604KiB load=1.00 rootload=1.00
(smt.stats   22   2719  58280  62455  3031/2625/402    2544/171    32  275   55.16)
(sat.ddfw       1      1    14.218    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.968s mem=57604KiB load=1.00 rootload=1.01
(sat.ddfw       1      1    13.529    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=10.083s mem=57768KiB load=1.11 rootload=1.11
(smt.stats   23   2841  61198  64910  3213/2850/402    2659/174    32  275   55.26)
ramon: poll                 wall=11.003s usage=11.060s mem=58024KiB load=0.97 rootload=0.97
(sat.ddfw       1      1    12.528   1060001      5196         14            1      108)
ramon: poll                 wall=12.000s usage=12.052s mem=58024KiB load=1.00 rootload=1.00
(smt.stats   24   2975  63258  69020  3549/3097/402    2790/177    32  275   55.55)
(sat.ddfw       1      1   11.7343   1210001      5931         15            1      123)
(smt.stats   25   3122  73931  77450  3611/3347/406    2943/202    33  277   55.65)
ramon: poll                 wall=13.000s usage=13.158s mem=58212KiB load=1.11 rootload=1.10
ramon: poll                 wall=14.000s usage=14.215s mem=58212KiB load=1.06 rootload=1.06
(smt.stats   26   3283  79976  83109  3757/3406/406    3106/220    34  293   55.74)
(sat.ddfw       1      1    11.033   1370001      6715         16            1      139)
ramon: poll                 wall=15.000s usage=15.215s mem=58400KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=16.216s mem=58256KiB load=1.00 rootload=1.00
(smt.stats   27   3460  86967  89984  3923/3554/406    3285/232    34  293   55.93)
(sat.ddfw       1      1    10.409   1540001      7549         17            1      156)
(smt.stats   28   3561  92747  98114  4036/3788/407    3418/247    35  305   56.08)
ramon: poll                 wall=17.000s usage=17.212s mem=58512KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=18.215s mem=58512KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.85599   1720001      8431         18            1      174)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   29   3672  96664 101544  4112/3856/410    3588/265    36  307   56.18)
ramon: poll                 wall=19.003s usage=19.226s mem=58524KiB load=1.01 rootload=1.02
ramon: poll                 wall=20.000s usage=20.247s mem=58880KiB load=1.02 rootload=1.02
ramon: end                  Fri Nov  1 23:09:36 2024
ramon: root.execname        z3
ramon: root.utime           20.210s
ramon: root.stime           0.030s
ramon: group.total          20.257s
ramon: group.utime          20.221s
ramon: group.stime          0.036s
ramon: group.mempeak        59136KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.01
