ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:06:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28095 MiB
ramon: sys.mem.avail        61763 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/JfFTUZ3A0tEd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4172255
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4370    500  1428/1180/105     113/28     1   16   19.27)
(smt.stats    1    202   6096    792  1812/1638/106     219/37     2   18   19.56)
(smt.stats    2    313   7696   1171  2339/2093/106     338/40     2   18   19.77)
ramon: poll                 wall=1.004s usage=0.942s mem=20872KiB load=0.94 rootload=0.93
(smt.stats    3    414   8379   1473  2640/2385/106     447/41     2   18   19.77)
(smt.stats    4    525  12524   2991  2935/2743/113     591/114     6   26   20.06)
(smt.stats    5    647  17647   4742  3573/3320/114     710/115     7   26   20.16)
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 1 := 1&35184372088831
shl: (shl[64] (bv2int %0) (mod (+ #117 #843) 64)) 1 := 2305843009213693951 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 1 := 1&35184372088831
shl: (shl[64] (bv2int %0) (mod (+ #117 #843) 64)) 1 := 2305843009213693951 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 1 := 1&35184372088831
shl: (shl[64] (bv2int %0) (mod (+ #117 #843) 64)) 1 := 2305843009213693951 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 35184372088832&35184372088831
shl: (shl[61] (bv2int %0) (mod (bv2int %1) 61)) 2305843009213169664 := 2305843009213169665 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 1&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 1&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 2&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 1&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 2&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 4&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 4&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 4&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 8&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 2&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 4&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 8&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 16&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 8&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 16&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 2&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2 := 2&35184372088831
shl: (shl[64] (bv2int %0) (mod (+ #117 #843) 64)) 2 := 2305843009213693951 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2 := 4&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 4&35184372088831
shl: (shl[64] (bv2int %0) (mod (+ #117 #843) 64)) 4 := 2305843009213693951 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 4&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 4&35184372088831
shl: (shl[64] (bv2int %0) (mod (+ #117 #843) 64)) 4 := 2305843009213169665 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 35184372088832&35184372088831
shl: (shl[61] (bv2int %0) (mod (bv2int %1) 61)) 35184372088833 := 2305843009213169665 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 35184372088832&35184372088831
shl: (shl[61] (bv2int %0) (mod (bv2int %1) 61)) 35184372088833 := 2305843009212645377 << 45
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 1 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 35184372088832&35184372088831
band: (band[61] (shl[61] (bv2int %0) (mod #117 61)) (if (= #659 60) 1 (if #661 3 #833))) 35184372088831 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 8 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 16 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 16 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 32 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 64 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 128 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 256 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 512 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 1024 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2048 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4096 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 8192 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 16384 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 32768 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 65536 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 131072 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 262144 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 524288 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 1048576 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 2097152 := 35184372088832&35184372088831
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4194304 := 35184372088832&35184372088831
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  19772   8277  3701/3447/264     834/130    10   60   20.97)
(smt.stats    7    859  20552  10489  3792/3458/265     957/155    11   64   21.07)
(smt.stats    8    981  20923  11002  4067/3787/265    1094/172    12   64   21.26)
(smt.stats    9   1115  24675  19439  4349/4077/271    1269/203    13   69   21.26)
ramon: poll                 wall=2.000s usage=1.936s mem=22484KiB load=1.00 rootload=0.99
(smt.stats   10   1216  27233  25191  4516/4125/271    1392/218    14   70   21.43)
(smt.stats   11   1327  33748  34636  4557/4294/272    1535/232    15   72   21.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  36851  41244  4659/4396/276    1660/249    16   74   21.43)
(smt.stats   13   1583  41996  50079  4672/4409/286    1856/310    19  100   21.75)
(smt.stats   14   1730  48768  61530  4724/4428/286    2032/312    19  100   21.75)
(smt.stats   15   1831  52241  68028  4763/4483/286    2187/313    19  100   21.75)
(smt.stats   16   1942  57987  77813  4791/4521/287    2297/414    20  102   21.84)
(smt.stats   17   2064  59975  83995  4863/4575/287    2377/417    20  102   21.84)
(smt.stats   18   2198  62646  92699  4961/4639/288    2493/428    21  103   21.94)
(smt.stats   19   2345  66722 102543  5024/4738/288    2626/430    21  103   21.94)
ramon: poll                 wall=3.000s usage=2.934s mem=23208KiB load=1.00 rootload=1.00
(smt.stats   20   2506  71599 114869  5074/4802/296    2857/454    22  106   22.20)
(smt.stats   21   2607  76356 126259  5098/4818/296    2955/528    23  115   22.20)
(smt.stats   22   2718  79726 135903  5139/4839/296    3075/528    23  115   22.31)
(smt.stats   23   2840  84263 150058  5193/4882/296    3194/531    23  115   22.31)
(smt.stats   24   2974  87895 157521  5215/4941/301    3396/582    24  117   22.41)
(smt.stats   25   3121  93256 170044  5227/4947/301    3554/583    24  117   22.41)
(smt.stats   26   3282 100873 193376  5261/4968/301    3725/584    25  125   22.96)
(smt.stats   27   3459 104742 206667  5333/5011/301    3912/588    25  125   23.26)
(smt.stats   28   3560 107396 216785  5354/5080/301    4015/588    25  125   23.26)
(smt.stats   29   3671 109566 223127  5377/5092/301    4124/589    25  125   23.36)
ramon: poll                 wall=4.000s usage=3.932s mem=24836KiB load=1.00 rootload=1.00
(smt.stats   30   3793 111236 229895  5546/5127/301    4249/595    25  125   23.45)
(smt.stats   31   3927 114721 244925  5658/5305/301    4383/598    25  125   23.45)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 118788 255415  5671/5397/301    4531/598    25  125   23.55)
(smt.stats   33   4235 124333 273077  5704/5409/301    4687/599    25  125   23.64)
(smt.stats   34   4412 129518 285838  5786/5466/301    4871/604    25  125   23.64)
(smt.stats   35   4606 134322 303002  5809/5535/302    5069/695    26  128   23.75)
(smt.stats   36   4707 136826 317793  5811/5536/302    5170/696    26  128   23.84)
(smt.stats   37   4818 139222 328488  5827/5543/302    5298/697    26  128   23.84)
(smt.stats   38   4940 141584 338508  5868/5574/302    5416/698    26  128   23.94)
(smt.delete-inactive-clauses  :num-deleted-clauses 97)
(smt.stats   39   5074 143852 348109  5871/5597/302    5459/698    26  128   23.94)
ramon: poll                 wall=5.000s usage=4.930s mem=25432KiB load=1.00 rootload=0.99
(smt.stats   40   5221 146258 357634  6021/5597/302    5627/709    26  128   24.03)
(smt.stats   41   5382 149833 376918  6092/5816/302    5785/710    26  128   24.84)
(smt.stats   42   5559 155142 394872  6106/5832/302    5979/710    26  128   24.84)
(smt.stats   43   5753 163646 426376  6111/5833/302    6180/710    26  128   24.93)
(smt.stats   44   5966 176718 451126  6113/5839/302    6392/710    26  128   25.12)
(smt.stats   45   6067 179518 462512  6119/5841/302    6494/710    26  128   25.12)
(smt.stats   46   6178 183063 483412  6120/5846/302    6607/710    26  128   25.12)
(smt.stats   47   6300 185582 496632  6130/5846/302    6730/711    26  128   25.22)
ramon: poll                 wall=6.000s usage=5.928s mem=26816KiB load=1.00 rootload=1.00
(smt.stats   48   6434 188054 509003  6172/5868/302    6866/713    26  128   25.22)
(smt.stats   49   6581 191162 520812  6261/5987/302    7008/713    26  128   25.22)
(smt.stats   50   6742 196225 532630  6262/5988/303    7171/772    27  129   25.32)
(smt.stats   51   6919 201764 556381  6276/5999/304    7360/785    28  130   25.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 204669 561371  6300/6021/304    7566/785    28  130   25.43)
(smt.stats   53   7326 207794 579555  6349/6022/305    7788/801    29  131   25.52)
(smt.stats   54   7560 211887 596695  6369/6080/305    8029/801    29  131   25.52)
(smt.stats   55   7661 215486 613087  6370/6091/306    8130/814    30  132   25.63)
(smt.stats   56   7772 220017 636885  6370/6091/306    8241/814    30  132   25.63)
(smt.stats   57   7894 223532 652777  6374/6091/306    8365/814    30  132   25.63)
(smt.stats   58   8028 227074 667871  6377/6098/308    8507/821    31  133   25.72)
ramon: poll                 wall=7.000s usage=6.926s mem=27404KiB load=1.00 rootload=1.00
(smt.stats   59   8175 228411 673112  6548/6100/308    8657/821    31  133   25.92)
(smt.stats   60   8336 231038 685642  6798/6467/308    8835/825    32  134   25.92)
(smt.stats   61   8513 234292 702146  6808/6529/308    9016/825    32  134   26.01)
(smt.stats   62   8707 239637 720086  6841/6531/308    9231/825    32  134   26.01)
ramon: poll                 wall=8.000s usage=7.926s mem=27732KiB load=1.00 rootload=1.00
(smt.stats   63   8920 243581 736635  6863/6576/308    9462/825    32  134   26.01)
(smt.stats   64   9154 248128 753700  6897/6588/308    9702/825    32  134   26.12)
(smt.stats   65   9411 254620 776731  7013/6620/308    9971/825    32  134   26.31)
(smt.stats   66   9512 257195 786538  7016/6734/308   10072/825    32  134   26.31)
(smt.stats   67   9623 259976 811260  7033/6741/308   10182/826    32  134   26.31)
(smt.stats   68   9745 264015 846527  7035/6754/308   10304/826    32  134   26.31)
(smt.stats   69   9879 267539 866919  7043/6760/308   10469/826    32  134   26.31)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10026 270512 876731  7044/6765/308   10629/826    32  134   26.41)
(smt.stats   71  10187 275295 907197  7064/6765/308   10796/826    32  134   28.00)
ramon: poll                 wall=9.000s usage=8.925s mem=29836KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10364 280470 923815  7091/6788/308   10977/827    32  134   28.00)
(smt.stats   73  10558 285880 936982  7271/6832/308   11182/830    32  134   28.09)
(smt.stats   74  10771 292118 952963  7388/7109/309   11422/964    33  134   28.19)
(smt.stats   75  11005 298794 981724  7389/7110/309   11674/964    33  134   28.28)
(smt.stats   76  11262 307367 1007801  7408/7110/310   11951/973    34  136   28.28)
ramon: poll                 wall=10.000s usage=9.925s mem=30136KiB load=1.00 rootload=1.00
(smt.stats   77  11544 312580 1026871  7587/7135/310   12248/975    34  136   28.38)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas          :deletions     )
(smt.stats   78  11645 315683 1043377  7606/7311/310   12347/977    34  136   28.38)
(smt.stats   79  11756 318707 1056181  7620/7335/310   12458/977    34  136   28.48)
(smt.stats   80  11878 322122 1066787  7711/7349/310   12604/978    34  136   28.48)
(smt.stats   81  12012 324010 1074238  7756/7468/310   12741/978    34  136   28.48)
(smt.stats   82  12159 327158 1088712  7768/7476/310   12895/978    34  136   28.48)
(smt.stats   83  12320 329475 1111043  7774/7494/310   13067/978    34  136   28.57)
(smt.stats   84  12497 332200 1137084  7774/7494/310   13252/978    34  136   28.57)
ramon: poll                 wall=11.004s usage=10.928s mem=30468KiB load=1.00 rootload=1.00
(smt.stats   85  12691 338143 1183493  7779/7499/310   13441/978    34  136   28.57)
(smt.stats   86  12904 342068 1211649  7797/7514/311   13655/1051    35  142   28.68)
(smt.stats   87  13138 346407 1223114  7809/7521/311   13892/1052    35  142   28.68)
(smt.stats   88  13395 351616 1255243  7864/7536/311   14155/1052    35  142   28.68)
(smt.stats   89  13677 355672 1276840  8031/7596/311   14445/1052    35  142   28.77)
(smt.stats   90  13987 364927 1306076  8068/7768/311   14777/1053    35  142   28.87)
(smt.stats   91  14088 367815 1315049  8103/7798/311   14883/1053    35  142   28.87)
ramon: poll                 wall=12.000s usage=11.923s mem=30840KiB load=1.00 rootload=0.99
(smt.stats   92  14199 370026 1322713  8181/7830/311   14994/1055    35  142   28.97)
(smt.stats   93  14321 372652 1336628  8244/7946/311   15117/1055    35  142   28.97)
(smt.stats   94  14455 375125 1346708  8248/7968/311   15251/1055    35  142   29.06)
(smt.stats   95  14602 376549 1360552  8256/7968/311   15432/1055    35  142   29.06)
(smt.stats   96  14763 380278 1388351  8260/7976/311   15622/1055    35  142   29.06)
(smt.stats   97  14940 384442 1405437  8381/7993/311   15799/1058    35  142   29.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 392)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   98  15134 389650 1419204  8416/8132/312   15602/1154    36  144   29.16)
(smt.stats   99  15347 398762 1444624  8416/8136/312   15815/1154    36  144   29.25)
ramon: poll                 wall=13.000s usage=12.923s mem=31228KiB load=1.00 rootload=1.00
(smt.stats  100  15581 405964 1467940  8420/8140/312   16047/1154    36  144   29.25)
(smt.stats  101  15838 415255 1503430  8420/8140/312   16360/1154    36  144   29.36)
(smt.stats  102  16120 424871 1537433  8421/8141/312   16643/1154    36  144   29.36)
(smt.stats  103  16430 434264 1575348  8423/8143/312   16951/1154    36  144   29.47)
(smt.stats  104  16770 441716 1611767  8441/8143/312   17298/1155    36  144   29.56)
(smt.stats  105  16871 445447 1632697  8445/8161/312   17399/1155    36  144   29.66)
(smt.stats  106  16982 446968 1639527  8450/8166/312   17515/1155    36  144   29.66)
(smt.stats  107  17104 451426 1658959  8451/8171/312   17636/1155    36  144   29.76)
ramon: poll                 wall=14.000s usage=13.922s mem=31872KiB load=1.00 rootload=1.00
(smt.stats  108  17238 454261 1670523  8564/8171/312   17774/1160    36  144   29.86)
(smt.stats  109  17385 455238 1674570  9020/8336/312   17936/1163    36  144   29.95)
(smt.stats  110  17546 459276 1696485  9024/8740/312   18098/1163    36  144   30.05)
(smt.stats  111  17723 465670 1728485  9042/8744/312   18326/1164    36  144   30.24)
ramon: poll                 wall=15.000s usage=14.922s mem=32348KiB load=1.00 rootload=1.00
(smt.stats  112  17917 469730 1754677  9160/8778/312   18558/1164    36  144   30.24)
(smt.stats  113  18130 475351 1769220  9222/8883/312   18801/1165    36  144   30.34)
(smt.stats  114  18364 482693 1788478  9401/8964/312   19040/1165    36  144   30.43)
ramon: poll                 wall=16.000s usage=15.922s mem=32576KiB load=1.00 rootload=1.00
(smt.stats  115  18621 488233 1816857  9650/9216/312   19301/1165    36  144   30.53)
(smt.stats  116  18903 495922 1857585  9690/9380/312   19620/1165    36  144   30.62)
(smt.stats  117  19213 503569 1881591  9704/9415/312   20036/1165    36  144   30.81)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  118  19553 515367 1927816  9708/9428/312   20388/1165    36  144   31.00)
(smt.stats  119  19926 523837 1999102  9745/9428/312   20794/1165    36  144   31.19)
(smt.delete-inactive-clauses  :num-deleted-clauses 362)
(smt.stats  120  20027 526174 2012355  9752/9468/312   20538/1165    36  144   31.19)
ramon: poll                 wall=17.000s usage=16.921s mem=33492KiB load=1.00 rootload=1.00
(smt.stats  121  20138 531108 2036511  9761/9476/312   20661/1165    36  144   31.29)
(smt.stats  122  20260 536895 2052257  9829/9484/313   20783/1385    37  151   31.29)
(smt.stats  123  20394 542495 2064411  9833/9553/313   20923/1385    37  151   31.39)
(smt.stats  124  20541 545809 2078053  9844/9554/313   21182/1386    37  151   31.48)
(smt.stats  125  20702 551674 2093874  9858/9568/313   21482/1386    37  151   31.48)
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 0 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 1 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028097171461&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 387028097171461&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028097171461&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 7 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028095074309&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 387028101365765&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028101365765&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 4 := 387028097171461&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028097171461&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 7 := 387028097171461&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028097171461&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028109754373&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028109754373&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028109754373&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028160086021&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028160086021&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028160086021&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028160086021&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308813&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308821&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308837&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308829&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308821&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308821&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 7 := 387028143308821&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308821&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308837&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308869&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308837&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308933&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308933&281474976710655
(smt.stats  126  20879 558114 2116631 10045/9631/354   21710/1403    38  160   31.84)
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308813&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308813&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308813&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 7 := 387028143308805&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028143308805&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 7 := 387028143308805&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028134920197&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028134920197&281474976710655
band: (band[61] (shl[64] (bv2int %0) (mod #844 64)) (if (= #858 63) 0 (if #860 1 #985))) 5 := 387028134920197&281474976710655
(smt.stats  127  21073 561665 2130940 10084/9790/425   22171/1407    38  160   35.03)
(smt.stats  128  21286 576825 2165090 10085/9795/426   22520/1502    39  175   35.03)
(smt.stats  129  21520 583823 2187606 10116/9829/436   22777/1582    40  186   35.22)
ramon: poll                 wall=18.000s usage=17.921s mem=37660KiB load=1.00 rootload=1.00
(smt.stats  130  21777 590919 2225490 10215/9917/436   23024/1582    40  186   35.32)
(smt.stats  131  22059 600049 2259784 10230/9934/437   23358/1613    41  225   35.41)
(smt.stats  132  22369 618075 2320261 10232/9936/437   23692/1613    41  225   35.70)
(smt.stats  133  22709 625757 2357064 10232/9936/437   24033/1632    42  230   35.81)
ramon: poll                 wall=19.000s usage=18.920s mem=38376KiB load=1.00 rootload=1.00
(smt.stats  134  23082 635519 2413442 10358/9944/438   24471/1635    42  230   35.90)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  135  23492 646039 2479924 10541/10072/439   24903/1682    43  243   36.09)
(smt.stats  136  23593 650449 2508017 10543/10247/439   25041/1682    43  243   36.09)
(smt.stats  137  23704 654797 2548256 10547/10247/439   25162/1682    43  243   36.19)
(smt.stats  138  23826 658561 2577331 10563/10252/439   25295/1684    43  243   36.29)
(smt.stats  139  23960 661193 2592595 10576/10273/439   25448/1684    43  243   36.29)
ramon: poll                 wall=20.000s usage=19.920s mem=38932KiB load=1.00 rootload=0.99
(smt.stats  140  24107 663147 2618642 10584/10286/439   25597/1684    43  243   36.38)
ramon: end                  Fri Nov  1 18:07:10 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.989s
ramon: group.utime          19.969s
ramon: group.stime          0.020s
ramon: group.mempeak        40684KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.070s
ramon: loadavg              1.00
