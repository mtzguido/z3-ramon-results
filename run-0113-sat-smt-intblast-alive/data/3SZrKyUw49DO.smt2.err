ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:54:14 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41949 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1319
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/3SZrKyUw49DO.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3662806
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   251/250     0/0  61       0    18.57   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1660 :time 0.00)
(sat.stats    265   6182    0   249/248   208/72  67       0    19.15   0.03)
(sat.stats    265   6182    0   249/248   208/72  67       0    19.15   0.03)
(sat.stats    265   6182    0   249/248   208/72  67       0    19.15   0.03)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 3 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 23 :cost 1779 :time 0.00)
 (sat-probing :cost 614619.15 :time 0.00)
(sat.stats    265   6182    0   252/251   184/75  67       0    19.15   0.03)
(sat.stats    400   8016    1   252/251   319/173  67       0    19.24   0.04)
 (sat-cleaner :elim-literals 2 :elim-clauses 1 :cost 3142 :time 0.00)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    559   9763    2   349/348   476/216  75       0    19.81   0.42)
(sat.stats    562   9864    3   354/352   479/216  75       0    19.95   0.42)
(sat.stats    566  10104    4   364/361   483/217  75       0    19.95   0.43)
(sat.stats    569  10194    5   371/368   486/217  75       0    19.95   0.43)
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 39 := 39 << 39
(sat.stats    572  10326    6   372/369   489/218  75       0    19.95   0.43)
(sat.stats    575  10433    7   372/369   492/218  75       0    19.95   0.43)
(sat.stats    578  10452    8   372/369   495/218  75       0    19.95   0.43)
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 5813 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 35594 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 57864 := 274877906943&21440476741632
(sat.stats    581  10585    9   399/396   498/218  75       0    20.05   0.44)
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
shl: (shl[64] (bv2int %0) (mod (+ #58 #372) 64)) 21440476741632 := 39 << 39
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 18402 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 101921 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 274877847628 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 7344 := 21440476741632&274877906943
(sat.stats    584  10623   10   434/431   501/218  75       0    20.15   0.44)
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 8 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 283392 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 32 := 21440476741632&274877906943
(sat.stats    587  10643   11   459/456   504/218  75       0    20.25   0.45)
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 128 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 64 := 21440476741632&274877906943
(sat.stats    590  10685   12   493/490   507/218  75       0    20.25   0.45)
(sat.stats    593  10710   13   503/500   510/218  75       0    20.25   0.45)
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 15252992 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 22301696 := 21440476741632&274877906943
(sat.stats    596  10752   14   525/522   513/218  75       0    20.34   0.45)
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 52731904 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 2048 := 21440476741632&274877906943
(sat.stats    599  10797   15   555/552   516/218  75       0    20.34   0.45)
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 4096 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 252051456 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 98304 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 16384 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 65536 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 2112356352 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 262144 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 18720227328 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 41905291264 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 2097152 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 182997483520 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 179566542848 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 132741332992 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 33554432 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 191394480128 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 258771779584 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 536870912 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 2147483648 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 68719476736 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 4294967296 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 146028888064 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 188978561024 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 171798691840 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 137438953472 := 21440476741632&274877906943
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 0 := 274877906943&21440476741632
band: (band[59] (shl[64] (bv2int %0) (mod #373 64)) (if (or #784 #785) 0 (if #786 1 #911))) 67108864 := 21440476741632&274877906943
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats    709  13849   50  1789/1786   654/248  75       0    21.89   0.57)
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 315936 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 16 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 681088 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 64 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 821760 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 256 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 15129600 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 37263360 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 93306880 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 12288 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 8192 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 186253312 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 32768 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 65536 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 2838757376 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 2402287616 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 524288 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 50411339776 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 2097152 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 266204086272 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 8388608 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 19293798400 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 259979739136 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 67108864 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 4831838208 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 268435456 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 208305913856 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 1073741824 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 240518168576 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 17179869184 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 4294967296 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 8589934592 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 137438953472 := 274877906943&21440476741632
band: (band[59] (if (= #596 58) 0 (if #598 1 #763)) (shl[59] (bv2int %0) (mod #58 59))) 68719476736 := 274877906943&21440476741632
ramon: poll                 wall=1.000s usage=0.997s mem=25352KiB load=1.00 rootload=0.97
(sat.stats   1152  30525   54  4970/4966  1116/316  75       0    24.88   1.88)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 29730 :time 0.00)
ramon: poll                 wall=2.000s usage=1.996s mem=29220KiB load=1.00 rootload=0.99
ramon: poll                 wall=3.002s usage=2.996s mem=39024KiB load=1.00 rootload=0.99
ramon: poll                 wall=4.000s usage=3.994s mem=41552KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 35249 :time 0.00)
ramon: poll                 wall=5.000s usage=4.993s mem=47264KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.993s mem=47232KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.993s mem=53444KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.992s mem=59472KiB load=1.00 rootload=0.99
ramon: poll                 wall=9.002s usage=8.993s mem=75448KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.989s mem=77156KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.989s mem=80100KiB load=1.00 rootload=1.00
(sat.stats   1646  54497  147 368481/368477  7654/6405 665       0    87.29  11.98)
ramon: poll                 wall=12.000s usage=11.989s mem=89676KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.989s mem=93260KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.989s mem=93976KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.988s mem=96464KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.988s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.988s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.988s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.988s mem=108MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.987s mem=110MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:54:34 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.080s
ramon: group.total          20.007s
ramon: group.utime          19.919s
ramon: group.stime          0.088s
ramon: group.mempeak        110MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.018s
ramon: loadavg              1.00
