ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:57:58 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24779 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/n0KyNuhIJs6K.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             147068
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710655
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710655
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421310 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 1407374883553282 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 1688849860263934 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421310 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421310 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 1 := 1&2
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421310 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 1 := 1&2
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 384 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 288 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 192 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 480 << 47
(smt.stats    0    101   1199    492  1172/1051/117      88/18     7   20   19.07)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710670 := 32 << 31
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710672 := 32 << 31
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421326 := 32 << 31
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 32 << 31
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
(smt.stats    1    202   2320   1272  1418/1250/118     193/20     8   21   19.17)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421318 := 8 << 43
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421318 := 8 << 43
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 844424930131974 := 8 << 43
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710663 := 2 << 46
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710663 := 4 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710663 := 6 << 44
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710662 := 4 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710660 := 4 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710660 := 4 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710656 := 2 << 46
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710656 := 2 << 46
(smt.stats    2    313   3832   2787  1513/1312/128     313/24     9   23   19.36)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 4503599627370502 := 6 << 44
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 4503599627370502 := 6 << 44
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&105553116266496
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 3 := 3 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&105553116266496
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 3 := 3 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&105553116266496
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 2 := 3 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&105553116266496
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 1 := 3 << 45
(smt.stats    3    414   5147   4397  1592/1412/159     418/30    11   29   19.55)
(smt.stats    4    525   6342   6090  1721/1483/173     513/54    12   52   19.84)
ramon: poll                 wall=1.000s usage=0.924s mem=21336KiB load=0.92 rootload=0.91
(smt.stats    5    647   8262   7892  1886/1600/175     621/57    14   78   20.03)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   8871   8720  2211/1771/180     726/66    15   82   20.22)
ramon: poll                 wall=2.004s usage=1.929s mem=21624KiB load=1.00 rootload=1.00
(smt.stats    7    859   9994  10511  2299/2040/180     856/68    15   82   20.22)
(smt.stats    8    981  12039  13919  2449/2164/181     984/87    16   86   20.22)
ramon: poll                 wall=3.000s usage=2.918s mem=21732KiB load=0.99 rootload=0.99
(smt.stats    9   1115  13381  16429  2619/2278/190    1136/100    17   86   20.41)
ramon: poll                 wall=4.000s usage=3.916s mem=21884KiB load=1.00 rootload=1.00
(smt.stats   10   1216  14498  18295  2776/2442/190    1227/114    18  100   20.51)
(smt.stats   11   1327  15869  19787  2918/2619/190    1367/119    18  100   20.51)
ramon: poll                 wall=5.000s usage=4.913s mem=21980KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  18052  22668  3085/2787/190    1513/127    18  100   20.60)
(smt.stats   13   1583  19238  25512  3203/3015/190    1665/127    18  100   20.60)
ramon: poll                 wall=6.000s usage=5.911s mem=22164KiB load=1.00 rootload=1.00
(smt.stats   14   1730  22145  29857  3292/3032/190    1841/128    18  100   20.70)
(smt.stats   15   1831  23007  31673  3554/3112/190    1943/131    18  100   20.70)
ramon: poll                 wall=7.000s usage=6.907s mem=22032KiB load=1.00 rootload=1.00
(smt.stats   16   1942  24399  37647  3595/3411/191    2063/186    19  100   20.70)
(smt.stats   17   2064  26101  42140  3630/3426/191    2251/189    19  100   20.79)
(smt.stats   18   2198  28360  46111  3716/3469/191    2507/203    19  100   20.89)
ramon: poll                 wall=8.000s usage=7.906s mem=22352KiB load=1.00 rootload=1.00
(smt.stats   19   2345  31449  52332  3771/3567/191    2694/206    19  100   20.89)
(smt.stats   20   2506  35020  57501  3883/3637/192    2890/289    20  101   20.98)
(smt.stats   21   2607  37083  59782  3920/3727/192    3023/291    20  101   20.98)
ramon: poll                 wall=9.000s usage=8.904s mem=22472KiB load=1.00 rootload=0.99
(smt.stats   22   2718  39059  62707  4117/3756/192    3186/302    20  101   21.12)
(smt.stats   23   2840  41003  65575  4271/4032/192    3372/309    20  101   21.12)
(smt.stats   24   2974  43186  71846  4410/4222/193    3582/399    21  104   21.12)
ramon: poll                 wall=10.000s usage=9.900s mem=22724KiB load=1.00 rootload=1.00
(smt.stats   25   3121  45457  75533  4490/4253/193    3746/402    21  104   21.21)
(smt.stats   26   3282  48517  83530  4569/4328/193    3933/406    21  104   21.31)
(smt.stats   27   3459  52655  89874  4623/4389/193    4122/407    21  104   21.52)
(smt.stats   28   3561  53877  94495  4663/4472/194    4266/461    22  106   21.42)
ramon: poll                 wall=11.000s usage=10.897s mem=22812KiB load=1.00 rootload=0.99
(smt.stats   29   3672  55544  96389  4716/4481/194    4391/461    22  106   21.55)
(smt.stats   30   3794  58700 108557  4749/4549/194    4517/462    22  106   21.55)
(smt.stats   31   3928  61609 117287  4849/4574/194    4684/469    22  106   21.64)
ramon: poll                 wall=12.000s usage=11.893s mem=23212KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  64306 123322  4964/4677/194    4848/472    22  106   21.64)
(smt.stats   33   4236  69070 134330  5104/4800/194    5049/475    22  106   21.74)
ramon: poll                 wall=13.000s usage=12.890s mem=23300KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.888s mem=23340KiB load=1.00 rootload=0.99
(smt.stats   34   4413  72556 141590  5378/4950/194    5255/477    22  106   21.83)
ramon: poll                 wall=15.000s usage=14.885s mem=23484KiB load=1.00 rootload=1.00
(smt.stats   35   4607  74646 146166  5525/5226/194    5477/477    22  106   21.93)
(smt.stats   36   4708  76048 151402  5747/5453/194    5594/477    22  106   21.93)
ramon: poll                 wall=16.000s usage=15.878s mem=23504KiB load=0.99 rootload=0.99
(smt.stats   37   4819  78796 160476  5866/5600/194    5720/479    22  106   22.02)
(smt.stats   38   4941  80895 167008  5971/5722/194    5880/482    22  106   22.02)
ramon: poll                 wall=17.000s usage=16.874s mem=23600KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 1975)
(smt.stats   39   5075  83722 173181  6041/5838/195    4059/650    23  106   22.02)
(smt.stats   40   5222  86997 178393  6097/5864/195    4244/651    23  106   22.02)
(smt.stats   41   5383  89909 185317  6190/5946/195    4474/658    23  106   22.02)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&4282121914
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562954235543226 := 42955964416 << 15
(smt.stats   42   5560  93729 193102  6254/6055/195    4668/658    23  106   22.02)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&4282121914
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562954235543226 := 42955964416 << 15
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&206158430208
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 64427786302 := 21477982208 << 16
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&206158430208
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 64427786302 := 21477982208 << 16
ramon: poll                 wall=18.000s usage=17.871s mem=23692KiB load=1.00 rootload=0.99
(smt.stats   43   5754  97895 206121  6317/6075/200    4878/731    24  107   22.12)
(smt.stats   44   5967 102381 214777  6366/6146/205    5104/735    25  108   22.12)
(smt.stats   45   6068 104080 218300  6408/6191/205    5214/749    26  108   22.12)
(smt.stats   46   6179 107614 224420  6473/6258/205    5333/752    26  108   22.21)
(smt.stats   47   6301 110493 229693  6573/6312/205    5506/756    26  108   22.21)
ramon: poll                 wall=19.000s usage=18.868s mem=23808KiB load=1.00 rootload=1.00
(smt.stats   48   6435 113696 234939  6645/6413/205    5681/756    26  108   22.21)
(smt.stats   49   6582 115945 241227  6696/6467/206    5858/835    27  111   22.21)
(smt.stats   50   6743 118519 247078  6776/6519/206    6045/836    27  111   22.41)
ramon: poll                 wall=20.000s usage=19.864s mem=24228KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:58:18 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.020s
ramon: group.total          19.939s
ramon: group.utime          19.919s
ramon: group.stime          0.020s
ramon: group.mempeak        26252KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              0.99
