ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:42:31 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27913 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YsgESoGXXBmW.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             847981
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   81.3008     10000        49          0            1        2)
(sat.ddfw       1      1   41.3264     20001        98          1            1        3)
(smt.stats    0    101   5876    495  1345/1192/100     102/14     7   18   52.15)
(sat.ddfw       1      1    41.841     40001       196          2            1        5)
(smt.stats    1    202   7861   1425  2151/1919/102     206/18     8   21   52.34)
(smt.stats    2    313  10211   2433  2289/2031/102     327/19     8   21   52.34)
(sat.ddfw       1      1   34.6821     70001       343          3            1        8)
ramon: poll                 wall=1.001s usage=0.903s mem=54660KiB load=0.90 rootload=0.89
(smt.stats    3    414  12856   3573  2435/2213/108     431/40    10   24   52.45)
(smt.stats    4    525  14702   4736  2947/2264/113     509/86    12   47   52.67)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 69444 := 69920&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 69443 := 69920&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69920&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139552 := 18446744073709547520 >>l 34
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69921&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139553 := 18446744073709547520 >>l 34
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69920&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139552 := 18446744073709547520 >>l 34
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69920&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139552 := 18446744073709547520 >>l 34
(smt.stats    5    647  18725   7802  2985/2740/125     623/92    14   53   52.86)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 69920&2147483648
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18428729675200139552 := 18446744073709547520 >>l 34
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731458 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731460 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731458 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1073741344 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731464 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731472 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731472 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1073741344 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731520 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072731648 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072732160 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072734208 := 1073741823&2147483648
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 1072742400 := 1073741823&2147483648
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  19524   8933  3112/2778/133     764/93    15   57   53.26)
(sat.ddfw       1      1   29.7841    110001       539          4            1       12)
(smt.stats    7    859  20688  10102  3428/2972/184    1100/95    15   57   53.35)
(smt.stats    8    981  22615  16092  3505/3253/188    1486/196    17   69   53.35)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450271&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519903 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450271&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519903 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450271&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519903 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450256&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519888 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450256&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519888 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450256&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519888 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450241&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 16 := 18014398509450256&16
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18446744073709519888 := 18446744073709519872 >>l 61
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 6 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481982 := 18014398509481953 >>l 51
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481952 := 18014398509481953 >>l 51
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 8 := 18014398509481953 >>l 51
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 8 := 18014398509481953 >>l 51
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 7 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 6 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 4 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2 := 7&16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 7&16
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 4 := 7&16
(smt.stats    9   1116  24550  20890  3592/3341/246    1689/356    21   98   53.66)
(smt.stats   10   1217  26370  22559  3661/3358/246    1809/361    21   98   53.66)
ramon: poll                 wall=2.000s usage=1.879s mem=55788KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   25.4837    160000       784          5            1       17)
(smt.stats   11   1328  28026  25524  3806/3451/246    1931/423    22  102   53.77)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  30051  27501  3956/3702/247    2074/436    23  103   53.77)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 10 := 10&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 10 := 10&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 8 := 8&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 8 := 8&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 0&549755813888
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18320643284143177728 := 18446744073709539328 >>l 26
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 0&549755813888
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 2287828610704211968 := 18446744073709539328 >>l 26
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 0&549755813888
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 2287828610704211968 := 18446744073709539328 >>l 26
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481983 := 18014398509481972 >>l 16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481973 := 18014398509481972 >>l 16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
lshr: (lshr[54] (bv2int %0) (mod (bv2int %0) 54)) 18014398509481973 := 18014398509481972 >>l 16
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 8 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 16 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 32 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 64 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 128 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 256 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 512 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1024 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2048 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 4096 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 8192 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 16384 := 274877906943&549755813888
(smt.stats   13   1584  33339  32874  4126/3737/255    2269/487    24  113   54.08)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2048 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 2048 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 64 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 128 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 256 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 512 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1024 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1048 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1296 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1296 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1296 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1536 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1536 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1536 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1088 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 1024 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 128 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 8 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 16 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 274877906943&549755813888
band: (band[54] (lshr[54] (bv2int %0) (mod #98 54)) (if (= #494 53) 18014398509481984 (if #496 9007199254740992 #600))) 16 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906736 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906736 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906721 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906720 := 274877906943&549755813888
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 274877906720 := 274877906943&549755813888
(smt.stats   14   1731  36075  43650  4207/3870/365    2584/565    26  145   54.19)
(sat.ddfw       1      1   21.7159    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.805s mem=56672KiB load=0.93 rootload=0.92
(smt.stats   15   1832  38103  49283  4393/3976/380    2820/648    27  148   54.39)
(sat.ddfw       1      1   19.4121    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.740s mem=57100KiB load=0.93 rootload=0.93
(smt.stats   16   1943  41815  58632  4601/4154/381    3236/661    28  151   54.68)
(smt.stats   17   2065  46414  69363  4671/4401/386    3564/817    30  159   54.81)
(sat.ddfw       1      1   17.3989    370001      1813          8            1       38)
(smt.stats   18   2199  51863  80655  4911/4630/387    3863/839    32  165   54.81)
ramon: poll                 wall=5.000s usage=4.762s mem=57356KiB load=1.02 rootload=1.02
(smt.stats   19   2346  57271  95207  5073/4743/388    4240/882    33  165   55.03)
(smt.stats   20   2507  62316 106855  5188/4845/388    4806/886    33  165   55.30)
(sat.ddfw       1      1   15.6603    460001      2254          9            1       47)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   21   2608  66178 114357  5296/4951/389    4961/1224    34  165   55.30)
ramon: poll                 wall=6.001s usage=5.753s mem=57696KiB load=0.99 rootload=1.00
(smt.stats   22   2719  69750 124179  5434/5062/390    5093/1277    35  165   55.40)
(smt.stats   23   2841  72988 129905  5627/5214/390    5233/1281    35  165   55.50)
ramon: poll                 wall=7.000s usage=6.726s mem=57664KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   14.4092    560001      2745         10            1       57)
(smt.stats   24   2975  74995 137149  5804/5528/397    5514/1313    36  167   55.59)
(smt.stats   25   3122  82266 158036  5873/5579/402    5732/1406    38  193   55.79)
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
band: (band[54] (lshr[64] (* 1024 #98) (mod #326 64)) (if (= #623 63) 36893488147419103232 (if #625 18446744073709551616 #749))) 0 := 2401&0
lshr: (lshr[64] (* 1024 (bv2int %0)) (mod (+ 10 #98 #325) 64)) 18014398509484385 := 388096 >>l 11
(smt.stats   26   3283  86417 168791  5918/5626/408    6063/1416    39  200   55.89)
(smt.stats   27   3460  93806 190995  5961/5667/410    6464/1543    42  203   56.16)
ramon: poll                 wall=8.000s usage=7.706s mem=58436KiB load=0.98 rootload=0.98
(smt.stats   28   3561  97177 196639  5979/5675/410    6617/1545    42  203   56.16)
(smt.stats   29   3672 102893 207247  6038/5700/410    6759/1546    42  203   56.16)
(sat.ddfw       1      1   13.2979    670001      3284         11            1       68)
(smt.stats   30   3794 109679 218856  6136/5821/411    6902/1586    43  204   56.26)
ramon: poll                 wall=9.000s usage=8.828s mem=58436KiB load=1.12 rootload=1.12
(smt.stats   31   3928 114090 235404  6211/5910/411    7256/1586    43  204   56.26)
(smt.stats   32   4075 118368 245266  6241/5935/411    7512/1587    43  204   56.40)
(smt.stats   33   4236 124766 271337  6256/5960/411    7715/1588    43  204   56.40)
(sat.ddfw       1      1   12.7011    790001      3872         12            1       80)
(smt.stats   34   4413 131123 284017  6353/6003/412    7984/1676    44  204   56.50)
ramon: poll                 wall=10.001s usage=9.832s mem=59060KiB load=1.00 rootload=1.01
(smt.stats   35   4607 138224 308120  6442/6074/415    8461/1703    45  223   56.59)
(smt.stats   36   4708 142301 321051  6533/6162/415    8670/1703    45  223   56.88)
ramon: poll                 wall=11.000s usage=10.879s mem=59012KiB load=1.05 rootload=1.04
(sat.ddfw       1      1   11.7967    920001      4509         13            1       93)
(smt.stats   37   4819 145648 331038  6650/6247/415    8819/1705    45  223   57.07)
(smt.stats   38   4941 148683 344311  6863/6426/415    9124/1705    45  223   57.16)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 152575 352786  6922/6584/415    9418/1707    45  223   57.26)
ramon: poll                 wall=12.001s usage=11.882s mem=59404KiB load=1.00 rootload=1.01
(smt.stats   40   5222 156336 366662  7045/6647/415    9654/1708    45  223   57.26)
(sat.ddfw       1      1   11.0245   1060001      5196         14            1      108)
ramon: poll                 wall=13.000s usage=12.876s mem=59712KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   41   5383 158219 376319  7735/6776/415    9908/1709    45  223   57.66)
(smt.stats   42   5560 160860 383418  7885/7455/415   10129/1710    45  223   57.66)
ramon: poll                 wall=14.001s usage=13.880s mem=59936KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.3448   1210001      5931         15            1      123)
(smt.stats   43   5754 165079 422440  8117/7596/415   10395/1713    45  223   57.76)
ramon: poll                 wall=15.000s usage=14.874s mem=60048KiB load=0.99 rootload=1.00
(smt.stats   44   5967 170859 446417  8350/7837/415   10736/1714    45  223   57.76)
(smt.stats   45   6068 173176 454066  8396/8087/415   11001/1718    45  223   57.88)
(smt.stats   46   6179 177983 468099  8425/8109/415   11246/1724    45  223   57.98)
ramon: poll                 wall=16.000s usage=15.867s mem=60196KiB load=0.99 rootload=0.99
(smt.stats   47   6301 181641 476042  8504/8153/415   11436/1732    45  223   57.98)
(sat.ddfw       1      1   9.76265   1370001      6715         16            1      139)
(smt.stats   48   6435 185063 484660  8716/8254/415   11655/1734    45  223   57.98)
ramon: poll                 wall=17.001s usage=16.830s mem=60540KiB load=0.96 rootload=0.96
(smt.stats   49   6582 190025 498566  8784/8437/415   11992/1736    45  223   58.08)
(smt.stats   50   6743 197595 529133  8836/8510/416   12623/2363    46  226   58.33)
ramon: poll                 wall=18.000s usage=17.827s mem=60996KiB load=1.00 rootload=1.00
(smt.stats   51   6920 205026 561748  9050/8553/416   13006/2364    46  226   58.43)
(sat.ddfw       1      1   9.24064   1540001      7549         17            1      156)
(smt.stats   52   7114 209675 578789  9151/8762/416   13663/2365    46  226   59.07)
ramon: poll                 wall=19.000s usage=18.813s mem=61480KiB load=0.99 rootload=0.99
(smt.stats   53   7327 214660 616110  9289/8884/416   14210/2365    46  226   59.17)
ramon: poll                 wall=20.000s usage=19.803s mem=61500KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 22:42:52 2024
ramon: root.execname        z3
ramon: root.utime           19.870s
ramon: root.stime           0.010s
ramon: group.total          19.889s
ramon: group.utime          19.877s
ramon: group.stime          0.012s
ramon: group.mempeak        61508KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.097s
ramon: loadavg              0.99
