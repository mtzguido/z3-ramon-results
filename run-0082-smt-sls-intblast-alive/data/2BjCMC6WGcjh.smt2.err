ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:31:26 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29474 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2BjCMC6WGcjh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             601437
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&85
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&85
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&85
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&85
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&86
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&85
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&4398046511100
(smt.stats    0    101   4077    913  1114/1003/122      92/8     4   23   52.09)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&80
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&64
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   96.1538     10000        49          0            1        2)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&80
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&8
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 7 := 2199023255551&8
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 6 := 2199023255551&8
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&8
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&32
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&8
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 2199023255551&8
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 16 := 2199023255551&32
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 39 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 32 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 22 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 20 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 16 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 16 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 32 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 34 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 36 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 34 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 36 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 34 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 32 := 2199023255551&64
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 64 := 2199023255551&128
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 128 := 2199023255551&256
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 256 := 2199023255551&288
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 256 := 2199023255551&288
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 256 := 2199023255551&288
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 128 := 2199023255551&256
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 128 := 2199023255551&256
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 64 := 2199023255551&256
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 64 := 2199023255551&256
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 64 := 2199023255551&320
(sat.ddfw       1      1   63.7006     20001        98          1            1        3)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 101 := 2199023255551&192
(smt.stats    1    202   4678   1497  2161/1934/215     252/23     6   42   52.57)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 44 := 2199023255551&192
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 44 := 2199023255551&324
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 44 := 2199023255551&332
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 44 := 2199023255551&364
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 108 := 2199023255551&364
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 108 := 2199023255551&364
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 108 := 2199023255551&364
(smt.stats    2    314   5768   4072  2353/2154/221     544/102     7   44   52.67)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 108 := 2199023255551&236
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 108 := 2199023255551&236
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 108 := 2199023255551&110
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 108 := 2199023255551&109
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 108 := 2199023255551&124
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 84 := 2199023255551&92
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 28 := 2199023255551&284
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 28 := 2199023255551&284
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 28 := 2199023255551&540
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 28 := 2199023255551&540
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 28 := 2199023255551&540
(sat.ddfw       1      1   79.6813     40001       196          2            1        5)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 28 := 2199023255551&540
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 28 := 2199023255551&540
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&604
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&604
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&604
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&604
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&1116
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&1116
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&1116
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&1116
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&1116
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 92 := 2199023255551&1116
(smt.stats    3    415   7197   7288  2525/2330/267     890/202     9   54   52.96)
(smt.stats    4    526   9920  11942  2541/2345/277    1018/215    12   85   53.06)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 17592186044416 := 50 << 16
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 17592186044416 := 50 << 16
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 17592186044416 := 50 << 16
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 17592186044416 := 50 << 16
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 17592186044416 := 50 << 16
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 17592186044416 := 50 << 16
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 2048 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 4096 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 8192 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 16384 := 65535&3276800
(smt.stats    5    648  12063  17509  2620/2377/283    1244/244    13   86   53.16)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 4096 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 2048 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 24 := 25 << 17
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 24 := 25 << 17
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 24 := 25 << 17
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 24 := 25 << 17
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 65535 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 65534 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 65532 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 8 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 16 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 32 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 64 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 128 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 256 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 512 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 1024 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 2048 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 4096 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 8192 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 16384 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 32768 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 4096 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 4096 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 32768 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 32768 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 16392 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 16386 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 16386 := 65535&3276800
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 65535&3276800
band: (band[42] (if (= #120 41) 0 (if #546 1 #660)) (shl[42] (bv2int %0) (+ 42 #663))) 16389 := 65535&3276800
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    749  13165  19478  2867/2646/450    1508/284    14  121   53.88)
(smt.stats    7    860  20930  31812  2983/2736/461    1639/318    15  125   54.11)
(sat.ddfw       1      1   58.3658     70001       343          3            1        8)
(smt.stats    8    982  24696  41160  3069/2823/481    1966/515    17  179   54.33)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 31&320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 320 := 72 << 5
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 31&320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 17592186044736 := 72 << 5
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 31&320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 17592186044736 := 72 << 5
(smt.stats    9   1116  28628  48432  3168/2861/481    2353/525    18  189   55.15)
(smt.stats   10   1217  32381  57011  3252/2957/496    2712/684    20  201   55.25)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 0 := 127&2048
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #869 #871) 64)) 2048 := 68 << 7
(smt.stats   11   1328  36161  65377  3317/3052/497    2950/725    21  202   55.34)
(sat.ddfw       1      1   44.0529    110001       539          4            1       12)
ramon: poll                 wall=1.003s usage=1.175s mem=57644KiB load=1.17 rootload=1.15
(smt.stats   12   1450  39009  70667  3423/3075/502    3316/736    22  203   55.44)
(smt.stats   13   1584  46834  86292  3447/3191/510    3623/811    24  213   55.69)
(smt.stats   14   1731  53055 103322  3547/3275/513    3906/861    26  220   55.89)
(smt.stats   15   1832  57007 117357  3648/3370/515    4114/878    27  223   55.89)
(smt.stats   16   1943  59840 127988  3690/3409/522    4491/901    29  233   56.02)
(sat.ddfw       1      1   35.7136    160000       784          5            1       17)
(smt.stats   17   2065  66107 139215  3720/3430/525    4798/904    29  233   56.30)
ramon: poll                 wall=2.000s usage=2.236s mem=58748KiB load=1.06 rootload=1.07
(sat.ddfw       1      1   30.1816    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2199  72360 153393  3912/3473/526    5130/1019    30  249   56.40)
(smt.stats   19   2346  77378 166693  4033/3740/529    5742/1052    32  258   56.59)
(sat.ddfw       1      1   26.1584    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=3.238s mem=58904KiB load=1.00 rootload=1.00
(smt.stats   20   2507  84029 181084  4161/3798/529    6563/1056    32  258   56.69)
(smt.stats   21   2608  89701 204051  4177/3873/533    6897/1125    33  261   56.82)
(smt.stats   22   2719  94434 219146  4304/3930/534    7347/1194    34  273   57.12)
(sat.ddfw       1      1    23.108    370001      1813          8            1       38)
(smt.stats   23   2841 100713 230403  4425/4108/536    7683/1327    36  289   57.12)
(smt.stats   24   2975 105235 244107  4513/4134/536    8268/1329    36  289   57.33)
ramon: poll                 wall=4.000s usage=4.234s mem=59544KiB load=1.00 rootload=0.99
(smt.stats   25   3122 110049 256615  4606/4223/541    9021/1409    37  290   57.43)
(sat.ddfw       1      1   20.6706    460001      2254          9            1       47)
(smt.stats   26   3283 115560 272453  4741/4317/541    9654/1410    37  290   57.53)
(smt.stats   27   3460 120267 288140  4959/4443/541   10541/1602    38  308   57.76)
ramon: poll                 wall=5.000s usage=5.233s mem=60332KiB load=1.00 rootload=1.00
(smt.stats   28   3561 123440 301650  4993/4669/541   11173/1604    38  308   57.76)
(smt.stats   29   3672 128661 314816  5092/4692/542   11461/1850    39  316   58.09)
(sat.ddfw       1      1   18.7477    560001      2745         10            1       57)
(smt.stats   30   3794 133172 328707  5146/4833/542   11889/1852    39  316   58.09)
(smt.stats   31   3928 139802 348735  5175/4865/542   12260/1853    39  316   58.43)
(smt.stats   32   4075 144949 366377  5186/4881/544   12751/2041    40  325   58.56)
ramon: poll                 wall=6.000s usage=6.246s mem=61068KiB load=1.01 rootload=1.01
(sat.ddfw       1      1   17.4382    670001      3284         11            1       68)
(smt.stats   33   4236 152479 394557  5342/4882/544   13476/2056    40  325   58.68)
(smt.stats   34   4413 158692 410868  5451/5102/544   14171/2198    41  332   58.81)
ramon: poll                 wall=7.000s usage=7.284s mem=61344KiB load=1.04 rootload=1.04
(smt.stats   35   4607 168249 432809  5474/5161/545   14834/2202    41  332   58.94)
(smt.stats   36   4708 170834 448262  5495/5186/546   15447/2446    42  333   58.94)
(sat.ddfw       1      1   16.0192    790001      3872         12            1       80)
(smt.stats   37   4819 174639 459660  5546/5196/546   15727/2450    42  333   59.03)
ramon: poll                 wall=8.000s usage=8.290s mem=61328KiB load=1.01 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4941 178247 471201  5643/5279/546   16212/2455    42  333   59.13)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 182304 481405  5731/5371/546   16684/2519    43  343   59.13)
(sat.ddfw       1      1   15.2314    920001      4509         13            1       93)
(smt.stats   40   5222 187578 497742  5909/5483/546   17148/2521    43  343   59.24)
ramon: poll                 wall=9.003s usage=9.393s mem=62248KiB load=1.10 rootload=1.10
(smt.stats   41   5383 192626 524639  6006/5638/548   17986/2528    43  343   59.43)
(smt.stats   42   5560 197040 535680  6139/5734/548   18836/2732    44  356   59.73)
(sat.ddfw       1      1   14.1614   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=10.387s mem=62532KiB load=1.00 rootload=1.00
(smt.stats   43   5754 201375 547650  6413/5890/548   19425/2740    44  356   59.73)
(smt.stats   44   5967 209491 582190  6481/6171/548   20125/2740    44  356   60.21)
(smt.stats   45   6068 213023 591791  6496/6183/549   20745/2922    45  362   60.31)
ramon: poll                 wall=11.000s usage=11.387s mem=62684KiB load=1.00 rootload=0.99
(smt.stats   46   6179 217726 605721  6542/6194/549   21406/2924    45  362   60.42)
(sat.ddfw       1      1   13.2322   1210001      5931         15            1      123)
(smt.stats   47   6302 222172 620751  6645/6282/551   22141/2928    45  362   60.76)
ramon: poll                 wall=12.000s usage=12.387s mem=63240KiB load=1.00 rootload=1.00
(smt.stats   48   6436 226955 640064  6751/6390/552   23010/3077    46  376   60.76)
(smt.stats   49   6583 233186 670382  6762/6454/552   24186/3077    46  376   60.86)
(smt.stats   50   6744 240504 710150  6776/6464/552   25218/3271    47  386   60.96)
(smt.stats   51   6921 246356 744280  6828/6480/552   26110/3272    47  386   61.07)
(sat.ddfw       1      1   12.3791   1370001      6715         16            1      139)
ramon: poll                 wall=13.000s usage=13.365s mem=63652KiB load=0.98 rootload=0.98
(smt.stats   52   7115 253432 782667  6844/6534/558   26911/3581    48  405   61.18)
(smt.stats   53   7328 274259 915667  6844/6534/559   27134/3581    48  405   61.30)
ramon: poll                 wall=14.000s usage=14.365s mem=63844KiB load=1.00 rootload=1.00
(smt.stats   54   7562 283791 960353  6859/6549/560   28244/3705    49  451   61.49)
(smt.stats   55   7663 290033 997393  6887/6549/560   28548/3705    49  451   61.49)
(sat.ddfw       1      1   11.6638   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=15.339s mem=64180KiB load=0.97 rootload=0.98
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   56   7774 296591 1032662  6991/6595/560   29293/3808    50  453   61.59)
(smt.stats   57   7896 302306 1064302  7051/6695/560   30306/3809    50  453   61.70)
ramon: poll                 wall=16.000s usage=16.303s mem=64448KiB load=0.96 rootload=0.96
(smt.stats   58   8030 306362 1081136  7094/6765/561   31121/3947    51  473   61.82)
(sat.ddfw       1      1   10.9843   1720001      8431         18            1      174)
(smt.stats   59   8177 314077 1103975  7192/6793/561   31591/3947    51  473   62.50)
ramon: poll                 wall=17.000s usage=17.344s mem=64608KiB load=1.04 rootload=1.04
(smt.stats   60   8338 324170 1184263  7218/6894/561   32459/3947    51  473   62.60)
(smt.stats   61   8515 331153 1210082  7246/6911/561   33452/3948    51  473   62.69)
ramon: poll                 wall=18.000s usage=18.470s mem=65048KiB load=1.13 rootload=1.13
(smt.stats   62   8709 349082 1332366  7267/6952/561   33827/3948    51  473   62.69)
(sat.ddfw       1      1   10.3996   1910001      9362         19            1      193)
(smt.stats   63   8922 359403 1395959  7365/7041/562   34636/4587    52  481   62.81)
ramon: poll                 wall=19.000s usage=19.442s mem=65120KiB load=0.97 rootload=0.97
(smt.stats   64   9156 367212 1431257  7514/7087/562   35699/4594    52  481   63.01)
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 513 := 262143&641
band: (band[42] (if (or #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 ...) 0 (if #698 1 #778)) (shl[64] (* 2 #114) (mod #872 64))) 513 := 262143&641
(smt.stats   65   9413 375988 1479584  7634/7289/563   36894/4600    52  481   63.20)
(smt.stats   66   9514 378895 1490447  7651/7327/563   37304/4720    53  481   63.20)
ramon: poll                 wall=20.000s usage=20.385s mem=65640KiB load=0.94 rootload=0.94
ramon: end                  Fri Nov  1 21:31:46 2024
ramon: root.execname        z3
ramon: root.utime           20.410s
ramon: root.stime           0.030s
ramon: group.total          20.450s
ramon: group.utime          20.418s
ramon: group.stime          0.032s
ramon: group.mempeak        65684KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.066s
ramon: loadavg              1.02
