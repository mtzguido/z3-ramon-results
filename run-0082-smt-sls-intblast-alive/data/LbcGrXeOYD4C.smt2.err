ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:17:15 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28479 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LbcGrXeOYD4C.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             761874
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   119.048     10000        49          0            1        2)
(sat.ddfw       1      1   69.9371     20001        98          1            1        3)
(smt.stats    0    101   2408    450   684/616/106     118/25     7   52   51.56)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108863
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&1
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&2
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108863
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108862
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108860
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108863
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108862
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108844
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108848
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108800
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&67108800
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&33554432
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&2
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&4
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 67108868 := 0 << 25
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&33554430
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&33554428
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 67108880 := 0 << 25
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 67108843&16
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 67108880 := 0 << 25
(smt.stats    1    202   3693   2065  1330/1182/144     304/38     8   60   51.94)
(sat.ddfw       1      1   66.6667     40001       196          2            1        5)
(smt.stats    2    313   5027   3344  1435/1240/150     481/44     9   62   52.14)
(sat.ddfw       1      1   62.1118     70001       343          3            1        8)
(smt.stats    3    414   5891   4788  1573/1431/153     758/63    11   70   52.23)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 66 := 8191&66
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 66 := 130 << 12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 66 := 8191&66
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 66 := 130 << 12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8188 := 8191&8188
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 8188 := 130 << 12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8188 := 8191&8188
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 8188 := 130 << 12
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8190 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8188 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8188 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8184 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8176 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
(smt.stats    4    525   6658   6391  1676/1450/175     800/109    13  262   52.43)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 532481 := 65 << 13
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 532481 := 65 << 13
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
shl: (shl[26] (bv2int %0) (+ 26 (* 67108863 #108))) 532481 := 65 << 13
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8191 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8190 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8188 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8184 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8176 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2048 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4096 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 1024 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 512 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 256 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 1 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 4 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 128 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 0 := 8191&532480
band: (band[26] (if (= #112 25) 1 (if #374 3 #442)) (shl[26] (bv2int %0) (+ 26 #445))) 8 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 4 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 12 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8 := 8191&532480
(smt.stats    5    647   8384   8934  1829/1651/402     981/139    15  309   53.11)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 2 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 64 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1 := 8191&532480
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 1024 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 65536 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 16384 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 8192 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 73728 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 73728 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 73728 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 335872 := 2097151&466944
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 466944 := 2097151&466944
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 466944 := 114 << 20
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 204800 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 212992 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 212992 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 245760 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
(sat.ddfw       1      1   54.9451    110001       539          4            1       12)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 212992 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 229376 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 245760 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 196608 := 1048575&475136
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  11869  12882  1974/1814/518    1210/208    16  344   53.62)
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 475136 := 1048575&475136
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 475136 := 116 << 19
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 458752 := 4194302&458752
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 458752 := 112 << 21
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 409600 := 8388605&450560
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 417792 := 8388605&450560
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 417792 := 8388605&450560
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 417792 := 8388605&450560
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 450560 := 8388605&450560
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 450560 := 110 << 22
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 442368 := 16777210&442368
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 442368 := 108 << 23
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 434176 := 33554421&434176
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 25 #494 #498) 32)) 434176 := 106 << 24
(smt.stats    7    859  17578  19421  2081/1849/518    1366/219    16  344   54.04)
ramon: poll                 wall=1.000s usage=0.861s mem=56264KiB load=0.86 rootload=0.85
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 511&565248
band: (band[26] (if (= #253 31) 1 (if #353 3 #487)) (shl[32] (* 2 #106) (mod #502 32))) 32 := 511&565248
(sat.ddfw       1      1   48.6372    160000       784          5            1       17)
(smt.stats    8    981  21271  23927  2174/2003/567    1835/374    19  392   54.52)
(sat.ddfw       1      1   43.1352    220001      1078          6            1       23)
(sat.ddfw       1      1   38.4615    290001      1421          7            1       30)
(smt.stats    9   1115  27887  31044  2262/2095/583    2284/449    20  422   55.00)
ramon: poll                 wall=2.000s usage=1.861s mem=57596KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   34.7826    370001      1813          8            1       38)
(smt.stats   10   1216  31760  35652  2355/2150/588    2674/471    21  443   55.20)
(sat.ddfw       1      1   31.7125    460001      2254          9            1       47)
ramon: poll                 wall=3.000s usage=2.861s mem=57612KiB load=1.00 rootload=1.00
(smt.stats   11   1327  35367  42792  2626/2438/592    2997/531    23  460   55.30)
(sat.ddfw       1      1   29.0782    560001      2745         10            1       57)
(smt.stats   12   1449  37498  47729  2727/2540/597    3479/594    24  508   55.68)
(sat.ddfw       1      1    28.564    670001      3284         11            1       68)
ramon: poll                 wall=4.000s usage=4.030s mem=58368KiB load=1.17 rootload=1.17
(smt.stats   13   1583  43416  57842  2896/2627/599    3936/723    25  513   56.06)
(sat.ddfw       1      1   27.0392    790001      3872         12            1       80)
(smt.stats   14   1730  49226  67902  2991/2693/600    4441/760    26  513   56.35)
ramon: poll                 wall=5.003s usage=5.254s mem=58808KiB load=1.22 rootload=1.22
(sat.ddfw       1      1   25.5202    920001      4509         13            1       93)
(smt.stats   15   1831  53415  74326  3103/2858/603    4769/813    27  524   56.35)
(smt.stats   16   1942  57693  83626  3171/2960/605    5440/837    28  526   56.35)
ramon: poll                 wall=6.000s usage=6.250s mem=59292KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.4781   1060001      5196         14            1      108)
(smt.stats   17   2064  61236  94179  3212/2979/613    6143/839    28  526   56.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2198  65277 103731  3307/3046/618    6525/1066    29  572   56.70)
(sat.ddfw       1      1   21.7675   1210001      5931         15            1      123)
ramon: poll                 wall=7.000s usage=7.250s mem=59072KiB load=1.00 rootload=1.00
(smt.stats   19   2345  69579 113415  3559/3141/619    7042/1161    30  589   56.79)
(sat.ddfw       1      1   20.3046   1370001      6715         16            1      139)
ramon: poll                 wall=8.000s usage=8.249s mem=59160KiB load=1.00 rootload=1.00
(smt.stats   20   2506  75763 123018  3678/3386/621    7734/1173    30  589   57.00)
ramon: poll                 wall=9.000s usage=9.249s mem=59332KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.0412   1540001      7549         17            1      156)
(smt.stats   21   2607  79159 131144  3879/3632/624    8084/1360    31  612   57.10)
ramon: poll                 wall=10.000s usage=10.249s mem=59700KiB load=1.00 rootload=1.00
(sat.ddfw       1      1    17.939   1720001      8431         18            1      174)
(smt.stats   22   2718  82956 139727  4067/3727/624    8549/1366    31  612   57.19)
ramon: poll                 wall=11.000s usage=11.249s mem=59816KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.9492   1910001      9362         19            1      193)
(smt.stats   23   2840  86229 148365  4324/3874/624    8901/1465    32  623   57.48)
ramon: poll                 wall=12.000s usage=12.249s mem=59932KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.0759   2110001     10343         20            1      214)
(smt.stats   24   2974  89115 156615  4696/4484/625    9931/1649    33  644   57.57)
ramon: poll                 wall=13.000s usage=13.248s mem=60088KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.2794   2320001     11372         21            1      235)
ramon: poll                 wall=14.003s usage=14.248s mem=60104KiB load=1.00 rootload=1.00
(smt.stats   25   3121  94226 170232  4825/4550/626   10788/1664    33  644   57.92)
ramon: poll                 wall=15.000s usage=15.248s mem=60480KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   14.5705   2540001     12451         22            1      257)
(smt.stats   26   3282  99584 185701  5016/4769/627   11433/2044    34  651   58.24)
ramon: poll                 wall=16.000s usage=16.248s mem=61028KiB load=1.00 rootload=1.00
(smt.stats   27   3459 103760 200825  5278/5047/632   13264/2379    35  686   58.63)
(smt.stats   28   3560 107083 216126  5314/5057/634   14041/2382    35  686   58.82)
(sat.ddfw       1      1   13.9208   2770001     13578         23            1      280)
ramon: poll                 wall=17.000s usage=17.247s mem=61400KiB load=1.00 rootload=1.00
(smt.stats   29   3671 112544 238939  5421/5130/636   15137/2389    35  686   58.92)
(smt.stats   30   3793 117477 257221  5584/5215/636   16070/2692    36  696   59.16)
ramon: poll                 wall=18.000s usage=18.247s mem=61700KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.3385   3010001     14754         24            1      305)
(smt.stats   31   3927 122386 278415  5746/5386/636   16795/2697    36  696   59.26)
ramon: poll                 wall=19.000s usage=19.247s mem=62056KiB load=1.00 rootload=1.00
(smt.stats   32   4074 127352 305105  5887/5567/645   18875/2984    37  703   59.55)
(sat.ddfw       1      1   12.8008   3260001     15980         25            1      330)
ramon: poll                 wall=20.003s usage=20.246s mem=62140KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:17:35 2024
ramon: root.execname        z3
ramon: root.utime           20.290s
ramon: root.stime           0.010s
ramon: group.total          20.312s
ramon: group.utime          20.296s
ramon: group.stime          0.016s
ramon: group.mempeak        62396KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.01
