ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:58:23 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40596 MiB
ramon: sys.mem.avail        61707 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/qyqjcohatSNi.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3091024
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 1&1
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 2 := 0 << 48
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 2 := 0 << 48
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 1 := 1&2
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 1 := 1&2
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 2 := 0 << 48
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 1&1
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 1&1
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 1&1
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 1&1
(smt.stats    0    101    399    290  1099/978/115      83/6     5   25   18.97)
(smt.stats    1    202    654    382  1234/1109/115     184/6     5   25   19.16)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 20829148276588545 := 983040 << 47
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 20829148276588545 := 65564 << 47
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 20829148276588545 := 262152 << 47
(smt.stats    2    315   1738   1252  1610/1484/123     292/10     7   27   19.26)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 2097115 := 2097152 << 48
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 2097115 := 2097152 << 48
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 2097115 := 2097152 << 48
(smt.stats    3    416   2201   1620  1657/1509/123     395/10     7   27   19.93)
(smt.stats    4    527   3341   3619  1882/1747/140     553/88    10   55   19.74)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 0 := 4 << 46
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 0 := 4 << 46
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474976710656
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 281474976710657 := 2 << 47
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474976710656
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 281474976710657 := 2 << 47
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474976710656
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 281474976710657 := 2 << 47
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474976710656
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 281474976710657 := 2 << 47
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474976710656
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 281474976710657 := 2 << 47
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 21392098230009856 := 6 << 45
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 21392098230009857 := 6 << 45
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 21392098230009857 := 6 << 45
(smt.stats    5    649   4959   6854  1935/1781/151     830/94    11   57   19.84)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&211106232532992
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 4 := 3 << 46
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&211106232532992
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 4 := 3 << 46
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&211106232532992
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 4 := 3 << 46
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&211106232532992
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 2 := 3 << 46
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&211106232532992
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 1 := 3 << 46
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    750   6142   9944  1995/1824/158     961/98    11   57   19.94)
(smt.stats    7    861   8144  15244  2020/1855/163    1064/112    12   62   20.13)
ramon: poll                 wall=1.000s usage=0.901s mem=21304KiB load=0.90 rootload=0.89
(smt.stats    8    983   8798  16151  2208/1935/163    1185/122    13   62   20.22)
(smt.stats    9   1117  11056  19036  2325/2120/163    1326/125    13   62   20.32)
(smt.stats   10   1218  12479  20541  2387/2200/163    1425/126    13   62   20.32)
(smt.stats   11   1329  14041  23666  2476/2274/163    1544/127    13   62   20.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1451  15130  25863  2563/2341/163    1665/131    13   62   20.32)
ramon: poll                 wall=2.000s usage=1.900s mem=21536KiB load=1.00 rootload=1.00
(smt.stats   13   1585  16604  28457  2703/2431/163    1803/143    13   62   20.41)
(smt.stats   14   1732  17849  31316  2795/2583/163    1949/151    13   62   20.41)
(smt.stats   15   1833  18609  33423  2889/2677/163    2050/151    13   62   20.41)
(smt.stats   16   1944  19419  35627  2958/2749/163    2160/157    13   62   20.51)
(smt.stats   17   2066  20400  38540  3108/2843/164    2283/170    14   64   20.51)
ramon: poll                 wall=3.000s usage=2.900s mem=21764KiB load=1.00 rootload=1.00
(smt.stats   18   2200  21583  41663  3263/2961/164    2424/173    14   64   20.60)
(smt.stats   19   2347  22783  45002  3701/3264/164    2587/176    14   64   20.80)
(smt.stats   20   2508  25783  50934  3714/3567/179    2749/190    16   86   20.80)
(smt.stats   21   2609  28189  58901  3766/3568/179    2850/251    17   93   20.80)
(smt.stats   22   2720  29844  62083  3922/3674/179    2970/252    17   93   20.89)
ramon: poll                 wall=4.000s usage=3.900s mem=22084KiB load=1.00 rootload=1.00
(smt.stats   23   2842  30825  65313  4094/3784/179    3106/254    17   93   20.99)
(smt.stats   24   2976  32319  71041  4163/3978/179    3256/254    17   93   20.99)
(smt.stats   25   3123  37513  82686  4188/4024/179    3450/255    17   93   20.99)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 21392098230009867 := 15269892 << 37
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 21392098230009867 := 15269892 << 37
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 21392098230009867 := 15269892 << 37
(smt.stats   26   3284  40714  87865  4365/4085/179    3620/266    17   93   21.09)
(smt.stats   27   3461  42860  92865  4501/4284/185    3936/332    18   96   21.18)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 9231253336202674176 := 262366 << 38
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 9231253336202674176 := 262366 << 38
(smt.stats   28   3562  45050  96560  4526/4360/186    4037/442    19   96   21.31)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 9231253336202674176 := 262354 << 44
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 9231816286156095488 := 262356 << 43
(smt.stats   29   3673  47527  99399  4559/4388/191    4357/451    20   97   21.51)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 9231253336202674177 := 262356 << 43
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 9231253336202674177 := 262356 << 43
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&175921860444160
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 0 := 131178 << 44
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&175921860444160
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 0 := 131178 << 44
(smt.stats   30   3795  50265 106500  4623/4435/201    4527/455    20   97   21.51)
ramon: poll                 wall=5.000s usage=4.899s mem=22788KiB load=1.00 rootload=1.00
(smt.stats   31   3929  52681 111938  4635/4472/206    4679/689    21  100   21.79)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 1&87960930222078
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 51879356644982782 := 262346 << 48
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&30786325577728
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 30786325577729 := 131184 << 38
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&30786325577728
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 30786325577729 := 131184 << 38
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076  55315 117727  4668/4487/206    4843/692    22  100   21.79)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&29961691856897
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 56887906987409409 := 262362 << 40
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&228698418577407
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 64404993108606975 := 262362 << 40
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&228698418577407
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 64404993108606975 := 262362 << 40
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&239693534855168
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 29961691856896 := 131181 << 41
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&239693534855168
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 29961691856897 := 131181 << 41
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&239693534855168
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 29961691856897 := 131181 << 41
(smt.stats   33   4237  58921 126303  4735/4517/211    5019/707    23  101   21.88)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 3 := 262358 << 42
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 2 := 262358 << 42
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&262352
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 262352 := 262358 << 42
(smt.stats   34   4414  63343 135854  4764/4585/221    5203/713    24  103   22.41)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&0
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 98376 := 131174 << 48
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 287667426198290433 := 262354 << 44
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 4612248968380809217 := 262354 << 44
(smt.stats   35   4608  67152 144417  4788/4601/226    5461/716    25  104   22.60)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&158329674399742
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 9232537565783916542 := 262354 << 44
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&316659348799488
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 158329674399744 := 131177 << 45
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&316659348799488
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 158329674399744 := 131177 << 45
(smt.stats   36   4709  69112 149012  4841/4625/226    5567/720    26  104   22.60)
(smt.stats   37   4820  70918 153601  4853/4673/231    5687/720    26  104   22.69)
(smt.stats   38   4942  75209 159542  4908/4694/231    5816/721    27  105   22.79)
(smt.delete-inactive-clauses  :num-deleted-clauses 48)
(smt.stats   39   5076  77476 163121  5044/4737/231    5921/726    27  105   22.88)
ramon: poll                 wall=6.000s usage=5.899s mem=24168KiB load=1.00 rootload=0.99
(smt.stats   40   5223  79720 167693  5454/4994/231    6081/731    27  105   22.88)
ramon: poll                 wall=7.000s usage=6.899s mem=24428KiB load=1.00 rootload=1.00
(smt.stats   41   5384  81921 171818  5755/5318/231    6260/734    27  105   22.98)
(smt.stats   42   5561  86142 180175  5840/5589/231    6489/735    27  105   23.07)
ramon: poll                 wall=8.000s usage=7.899s mem=24628KiB load=1.00 rootload=1.00
(smt.stats   43   5755  90905 188234  6206/5683/231    6791/743    27  105   23.26)
ramon: poll                 wall=9.000s usage=8.898s mem=24672KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.885s mem=24772KiB load=0.99 rootload=0.99
(smt.stats   44   5968  93318 194286  6715/6164/231    7014/763    27  105   23.46)
(smt.stats   45   6069  95211 197543  6781/6546/231    7134/765    27  105   23.46)
(smt.stats   46   6180 100403 208382  6814/6618/231    7275/766    27  105   23.46)
(smt.stats   47   6302 103142 215656  6854/6640/231    7502/766    27  105   23.46)
ramon: poll                 wall=11.000s usage=10.885s mem=25016KiB load=1.00 rootload=1.00
(smt.stats   48   6436 104989 218924  7096/6743/232    7638/853    28  106   23.66)
(smt.stats   49   6583 110350 224391  7105/6930/232    7789/853    28  106   23.66)
ramon: poll                 wall=12.000s usage=11.884s mem=25192KiB load=1.00 rootload=1.00
(smt.stats   50   6744 115312 236312  7213/6934/232    8052/856    28  106   23.75)
ramon: poll                 wall=13.000s usage=12.884s mem=25340KiB load=1.00 rootload=1.00
(smt.stats   51   6921 117198 240614  7617/7084/232    8239/868    28  106   23.94)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7115 121812 251567  7687/7474/244    8500/960    29  119   23.85)
ramon: poll                 wall=14.000s usage=13.883s mem=25512KiB load=1.00 rootload=1.00
(smt.stats   53   7328 127264 268205  7902/7545/244    8749/962    29  119   24.04)
(smt.stats   54   7562 137711 285403  7933/7758/244    9042/1140    30  155   24.04)
(smt.stats   55   7663 145282 318695  8014/7822/244    9086/1140    30  155   24.04)
(smt.stats   56   7774 147437 329074  8090/7856/244    9206/1140    30  155   24.14)
ramon: poll                 wall=15.000s usage=14.883s mem=25552KiB load=1.00 rootload=1.00
(smt.stats   57   7896 149898 334926  8354/7978/246    9372/1243    31  158   24.14)
(smt.stats   58   8030 152412 344540  8450/8260/250    9463/1263    32  186   24.14)
(smt.stats   59   8177 156963 352222  8481/8310/259    9602/1287    33  210   24.14)
(smt.stats   60   8338 163368 366185  8486/8314/259    9791/1287    33  210   24.23)
(smt.stats   61   8515 166641 371432  8503/8321/259    9997/1289    33  210   24.33)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8709 171860 380445  8527/8334/259   10274/1290    33  210   24.42)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474978283562
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 4614782243172778026 := 65636 << 11
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474978283538
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 4614782243172778002 := 65636 << 11
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474978283562
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 4614782243172778026 := 65636 << 11
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474978283522
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 4614782243172777986 := 65636 << 11
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474978283528
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 4614782243172777992 := 65636 << 11
ramon: poll                 wall=16.000s usage=15.883s mem=25948KiB load=1.00 rootload=1.00
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&134422528
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 111762358083784 := 32818 << 12
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&134422528
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 111762358083784 := 32818 << 12
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&134422528
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 111762358083784 := 32818 << 12
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&134422528
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 111762358083784 := 32818 << 12
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&134422528
shl: (shl[49] (bv2int %0) (+ 49 (* 562949953421311 #115))) 111762358083756 := 32818 << 12
(smt.stats   63   8922 176129 393611  8596/8353/259   10535/1298    33  210   24.52)
(smt.stats   64   9156 180560 405690  8602/8420/269   10779/1378    34  212   24.52)
(smt.stats   65   9413 187190 413931  8639/8428/269   11062/1378    34  212   25.40)
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474978283562
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 5348024559075370 := 65640 << 9
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474978283562
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 23925373021978666 := 65640 << 9
band: (band[49] (if (or #810 #811 #812 #813 #814 #815 #816 #817 #818 #819 #820 #821 #822 #823 #824 #825 ...) 0 1) (shl[64] (* 2 #113) (mod #1131 64))) 0 := 0&281474978283562
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 48 #1128 #1130) 64)) 23925373021978666 := 65640 << 9
(smt.stats   66   9514 188532 418475  8680/8481/269   11196/1385    35  212   25.40)
(smt.stats   67   9625 190710 426891  8683/8496/274   11313/1385    35  212   25.40)
(smt.stats   68   9747 192902 436563  8686/8498/274   11460/1385    35  212   25.50)
(smt.stats   69   9881 197246 453177  8708/8504/274   11592/1405    36  213   25.59)
ramon: poll                 wall=17.000s usage=16.883s mem=27120KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 870)
(smt.stats   70  10028 198772 460052  8739/8553/276   10922/1419    37  216   25.59)
(smt.stats   71  10189 202707 466855  8777/8572/277   11080/1420    37  216   25.59)
(smt.stats   72  10366 206276 476057  8984/8606/277   11293/1421    38  221   25.59)
ramon: poll                 wall=18.000s usage=17.883s mem=27172KiB load=1.00 rootload=1.00
(smt.stats   73  10560 211612 486065  9109/8822/277   11491/1424    38  221   25.86)
ramon: poll                 wall=19.000s usage=18.882s mem=27504KiB load=1.00 rootload=1.00
(smt.stats   74  10773 212521 488356  9831/9186/277   11720/1430    38  221   26.05)
ramon: poll                 wall=20.000s usage=19.882s mem=27828KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:58:43 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.967s
ramon: group.utime          19.947s
ramon: group.stime          0.020s
ramon: group.mempeak        28084KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              0.99
