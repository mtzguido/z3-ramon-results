ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:46:43 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27841 MiB
ramon: sys.mem.avail        62084 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/bQEq7kPHPbrb.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             861775
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 11 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 11 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 11 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&11
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 11 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767359
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 687194767359 := 10 << 36
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&687194767360
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 6 := 5 << 37
(smt.stats    0    101    871    473  1049/935/103      93/11     6   19   51.76)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 14 := 14&137438953472
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 14&137438953472
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 14&137438953472
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953472
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953472 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&137438953471
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 13 := 14&137438953469
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 12 := 14&137438953469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 137438953469 := 2 << 40
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 14&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5 := 2 << 40
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   102.041     10000        49          0            1        2)
(smt.stats    1    202   1970   2343  1226/1088/129     195/15    10   29   51.95)
(sat.ddfw       1      1   51.2872     20001        98          1            1        3)
(smt.stats    2    313   3180   4046  1307/1103/131     307/16    11   31   52.14)
(sat.ddfw       1      1   51.9481     40001       196          2            1        5)
(sat.ddfw       1      1    56.391     70001       343          3            1        8)
(sat.ddfw       1      1   51.0856    110001       539          4            1       12)
(smt.stats    3    414   3513   4500  1572/1430/136     408/18    12   33   52.34)
(smt.stats    4    525   4383   5673  1596/1454/138     502/26    13   41   52.34)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398046511102
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 8796093022206 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398046511102
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 8796093022206 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398046511102
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 8796093022206 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107380142087
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5505426653191 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107380142087
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5505426653191 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&1107380142087
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5505426653191 := 8796093022206 << 20
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398044413952
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 1 := 4398046511103 << 21
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398044413952
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 20 := 4398046511103 << 21
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398044413952
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 20 := 4398046511103 << 21
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&4398044413952
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 20 := 4398046511103 << 21
(smt.stats    5    647   6722   8256  1649/1499/153     639/46    17   48   52.43)
ramon: poll                 wall=1.000s usage=1.133s mem=54564KiB load=1.13 rootload=1.12
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748   9439  11658  1670/1520/169     553/55    18  235   52.53)
(sat.ddfw       1      1   41.8052    160000       784          5            1       17)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 5 := 7&2892433981440
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 7&2892433981440
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2892433981440
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773050266723024896 := 5505609766696 << 39
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2892433981440
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773050266723024896 := 5505609766696 << 39
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2893667106816
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773050267956150272 := 5505609767872 << 39
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2892874383360
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773050267163426816 := 5505609767116 << 39
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 7&2893331562496
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5773045869574094848 := 5505605573248 << 39
(smt.stats    7    859  11469  13944  1742/1525/169     666/58    18  235   52.62)
(sat.ddfw       1      1   37.3838    220001      1078          6            1       23)
(smt.stats    8    981  12639  16395  1878/1716/175     813/83    20  236   52.72)
(smt.stats    9   1115  16249  19185  1898/1733/176     946/91    21  240   52.72)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 5 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 5 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 28&1107418947032
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 4 := 28&1107418946948
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5505465458052 := 5505465458052 << 41
(smt.stats   10   1216  18247  23815  1963/1750/176    1059/96    21  240   52.94)
ramon: poll                 wall=2.000s usage=2.314s mem=55040KiB load=1.18 rootload=1.17
(smt.stats   11   1327  20133  27183  2046/1859/192    1179/120    22  243   52.94)
(sat.ddfw       1      1   34.4828    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  22197  30557  2112/1944/195    1288/144    24  247   53.03)
(sat.ddfw       1      1   30.6162    370001      1813          8            1       38)
(smt.stats   13   1583  23328  32067  2288/1961/195    1429/156    24  247   53.13)
ramon: poll                 wall=3.000s usage=3.436s mem=55216KiB load=1.12 rootload=1.13
(sat.ddfw       1      1   26.6193    460001      2254          9            1       47)
(smt.stats   14   1730  23994  33559  2662/2243/195    1584/168    25  249   53.22)
ramon: poll                 wall=4.000s usage=4.383s mem=55384KiB load=0.95 rootload=0.94
(smt.stats   15   1831  24459  34283  2853/2625/195    1693/170    25  249   53.32)
(sat.ddfw       1      1   23.0574    560001      2745         10            1       57)
ramon: poll                 wall=5.000s usage=5.262s mem=56004KiB load=0.88 rootload=0.88
(smt.stats   16   1942  24831  35164  3206/2795/195    1802/174    25  249   53.61)
(sat.ddfw       1      1   20.0182    670001      3284         11            1       68)
(smt.stats   17   2064  25585  37261  3447/3090/195    1930/176    25  249   53.61)
ramon: poll                 wall=6.000s usage=6.200s mem=55932KiB load=0.94 rootload=0.94
(smt.stats   18   2198  26189  39318  3994/3466/195    2074/185    25  249   53.70)
(sat.ddfw       1      1   17.7253    790001      3872         12            1       80)
ramon: poll                 wall=7.000s usage=7.126s mem=56188KiB load=0.93 rootload=0.93
(smt.stats   19   2345  26626  39919  4092/3844/195    2222/186    25  249   53.99)
(smt.stats   20   2506  28355  44927  4736/4576/204    2498/195    26  251   54.08)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 5 := 7&2752804883341
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772904991559060365 := 7158183755860 << 39
(smt.stats   21   2607  29819  48109  4769/4620/206    2597/230    28  272   54.08)
(smt.stats   22   2718  34026  52057  4798/4634/206    2712/232    28  272   54.08)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 3 := 3&2752804883341
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 3&2752804883341
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772904991559060365 := 7161681805578 << 38
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 3&2892408097684
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 3&2892408097684
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772905131162274708 := 7161681805494 << 38
(sat.ddfw       1      1   16.5837    920001      4509         13            1       93)
(smt.stats   23   2840  35735  55889  4923/4676/206    2892/234    28  272   54.18)
ramon: poll                 wall=8.000s usage=8.194s mem=56388KiB load=1.07 rootload=1.06
(smt.stats   24   2974  37059  59673  5015/4798/211    3088/254    29  273   54.18)
(smt.stats   25   3121  40945  62200  5035/4870/211    3254/264    30  273   54.18)
(smt.stats   26   3282  44939  66585  5070/4887/211    3464/264    30  273   54.38)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902238754177024 := 4419068483456 << 25
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902238754177024 := 4419068483456 << 25
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902238754177024 := 4419068483456 << 25
(smt.stats   27   3459  47771  72036  5116/4935/211    3643/265    30  273   54.48)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 17 := 28&137438953489
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953489
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902376193130513 := 4408325181120 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 25 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953473
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 16 := 28&137438953505
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 24 := 28&137438953497
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772902376193130521 := 4408325181120 << 41
(smt.stats   28   3560  49987  75857  5173/4999/224    3781/307    31  274   54.48)
(smt.stats   29   3671  54968  91496  5220/5018/240    3909/336    32  280   54.48)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2752950304768
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772900593657970688 := 4408325181574 << 24
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2753214545920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772900593922211840 := 4408326749854 << 24
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 0&2753214545920
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 5772900593922211840 := 4408326749854 << 24
(smt.stats   30   3793  59655 101733  5323/5092/240    4113/352    33  280   54.58)
ramon: poll                 wall=9.000s usage=9.357s mem=57280KiB load=1.16 rootload=1.17
(smt.stats   31   3927  61734 106252  5398/5188/245    4250/369    34  281   54.79)
(sat.ddfw       1      1   15.2889   1060001      5196         14            1      108)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  64403 108837  5499/5280/245    4433/378    35  281   54.88)
ramon: poll                 wall=10.000s usage=10.573s mem=57264KiB load=1.22 rootload=1.21
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2199023255551 := 2748904535371 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2059420041212 := 2748904339399 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2059420041212 := 2748904339399 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2199023255553 := 2748904535371 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2199023255553 := 2748904535371 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
shl: (shl[42] (bv2int %0) (+ 42 (* 4398046511103 #116))) 2748883088189 := 2748904339399 << 41
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 1 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 4 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 8 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 14 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 1 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 4 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 8 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 8 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 4 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 14&2199023255552
band: (band[42] (if (or #544 #545 #546 #547 #548 #549 #550 #551 #552 #553 #554 #555 #556 #557 #558 #559 ...) 0 (if #581 1 #589)) (shl[42] (bv2int %0) (+ 42 #733))) 2 := 14&2199023255552
(smt.stats   33   4235  67985 114159  5850/5674/301    4648/448    36  293   55.18)
(sat.ddfw       1      1   14.2167   1210001      5931         15            1      123)
ramon: poll                 wall=11.000s usage=11.619s mem=57416KiB load=1.05 rootload=1.05
(smt.stats   34   4412  72035 121603  5999/5716/301    5003/452    36  293   55.27)
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 0 := 1&1107418939361
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 1&1107418939361
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 12297814363721433057 := 5505606483476 << 37
band: (band[42] (if (or #745 #746 #747 #748 #749 #750 #751 #752 #753 #754 #755 #756 #757 #758 #759 #760 ...) 0 (if #804 1 #812)) (shl[64] (* 2 #114) (mod #1050 64))) 1 := 1&1107418939361
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 41 #1047 #1049) 64)) 12297814363721433057 := 5505606483476 << 37
(smt.stats   35   4606  76961 129501  6164/5985/307    5375/624    37  295   55.38)
(smt.stats   36   4707  79459 134260  6232/6013/312    5527/625    37  295   55.58)
ramon: poll                 wall=12.000s usage=12.612s mem=58000KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   13.2659   1370001      6715         16            1      139)
(smt.stats   37   4818  82308 142108  6353/6099/312    5711/650    38  296   55.58)
(smt.stats   38   4940  84434 148679  6507/6311/313    5888/696    39  299   55.67)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
ramon: poll                 wall=13.000s usage=13.606s mem=58232KiB load=0.99 rootload=1.00
(smt.stats   39   5074  87553 155200  6565/6349/314    6131/696    39  299   55.77)
(smt.stats   40   5221  90940 165212  6607/6377/315    6360/727    40  304   55.77)
(smt.stats   41   5382  98421 180817  6635/6424/315    6552/727    40  304   55.96)
(sat.ddfw       1      1   12.3466   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=14.505s mem=58448KiB load=0.90 rootload=0.89
(smt.stats   42   5559 104695 191239  6750/6485/317    6900/775    41  310   56.16)
ramon: poll                 wall=15.000s usage=15.447s mem=58736KiB load=0.94 rootload=0.95
(smt.stats   43   5753 110302 208699  7044/6584/317    7285/792    42  314   56.35)
(sat.ddfw       1      1   11.4833   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.349s mem=59068KiB load=0.90 rootload=0.90
(smt.stats   44   5966 114558 225894  7331/6875/317    7746/795    42  314   56.83)
(smt.stats   45   6067 118575 243739  7353/7139/319    8025/860    43  320   56.83)
(smt.stats   46   6178 122424 256741  7469/7140/319    8311/862    43  320   56.93)
ramon: poll                 wall=17.000s usage=17.315s mem=59208KiB load=0.97 rootload=0.96
(smt.stats   47   6300 125508 271844  7557/7274/319    8650/864    43  320   56.93)
(smt.stats   48   6434 128249 281310  7643/7429/320    8985/981    44  326   56.93)
(sat.ddfw       1      1   10.8016   1910001      9362         19            1      193)
ramon: poll                 wall=18.000s usage=18.268s mem=59396KiB load=0.95 rootload=0.96
(smt.stats   49   6581 131489 295201  7684/7445/320    9366/983    44  326   57.02)
(smt.stats   50   6742 135083 306181  7714/7490/320    9605/985    44  326   57.02)
(smt.stats   51   6919 140844 327374  7745/7516/320    9831/985    44  326   57.57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   52   7113 144324 343636  7780/7552/320   10311/989    44  326   57.57)
ramon: poll                 wall=19.000s usage=19.314s mem=59696KiB load=1.05 rootload=1.04
(sat.ddfw       1      1   10.3429   2110001     10343         20            1      214)
(smt.stats   53   7326 148506 356310  7872/7574/320   10788/993    44  326   57.66)
ramon: poll                 wall=20.000s usage=20.280s mem=60008KiB load=0.97 rootload=0.97
ramon: end                  Fri Nov  1 22:47:03 2024
ramon: root.execname        z3
ramon: root.utime           20.340s
ramon: root.stime           0.010s
ramon: group.total          20.365s
ramon: group.utime          20.349s
ramon: group.stime          0.016s
ramon: group.mempeak        62036KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.087s
ramon: loadavg              1.01
