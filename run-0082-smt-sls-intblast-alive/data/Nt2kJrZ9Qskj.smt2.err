ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:22:04 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28463 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1381
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Nt2kJrZ9Qskj.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             778001
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   66.2252     10000        49          0            1        2)
(smt.stats    0    101   5911    787  1212/1074/107      98/13     4   19   52.20)
(sat.ddfw       1      1   32.1576     20001        98          1            1        3)
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 3&1
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 3&1
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 4&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 4 := 2 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421311 := 2 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 8 := 2 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421311 := 2 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 8 := 2 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 562949953421311 := 2 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 1 := 8&1
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 9&1
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 10&1
shl: (shl[64] (bv2int %0) (mod (+ #114 #765) 64)) 10 := 2 << 2
(smt.stats    1    203   8665   4789  2140/1894/108     199/19     5   21   52.49)
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 9 := 2 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 0 (if #620 1 #755))) 1 := 8&1
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
shl: (shl[49] (bv2int %0) (mod (bv2int %0) 49)) 7 := 2 << 2
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 0 (if #620 1 #755))) 1 := 8&1
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 0 (if #620 1 #755))) 1 := 8&1
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 0 (if #620 1 #755))) 1 := 8&1
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 0 := 8&1
band: (band[49] (shl[49] (bv2int %0) (mod #114 49)) (if (= #618 48) 0 (if #620 1 #755))) 1 := 8&1
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 1 := 8&1
(smt.stats    2    314  12332  11292  2420/1999/123     313/48     6   24   52.69)
(smt.stats    3    415  14154  14404  2442/2199/148     436/50     8   31   52.79)
(smt.stats    4    527  15129  16604  2557/2293/173     498/78    12   64   53.00)
(sat.ddfw       1      1   34.7826     40001       196          2            1        5)
(sat.ddfw       1      1    34.642     70001       343          3            1        8)
ramon: poll                 wall=1.004s usage=0.928s mem=55140KiB load=0.93 rootload=0.92
(sat.ddfw       1      1    28.551    110001       539          4            1       12)
ramon: poll                 wall=2.004s usage=1.928s mem=55376KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   24.2009    160000       784          5            1       17)
(sat.ddfw       1      1   20.9209    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.924s mem=55532KiB load=1.00 rootload=1.00
(smt.stats    5    649  16168  17971  2641/2294/173     631/84    12   64   53.67)
(sat.ddfw       1      1   18.4259    290001      1421          7            1       30)
ramon: poll                 wall=4.000s usage=3.926s mem=55800KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    752  18287  20364  2899/2625/175     730/98    14  116   53.57)
(sat.ddfw       1      1   16.4541    370001      1813          8            1       38)
ramon: poll                 wall=5.000s usage=4.926s mem=55888KiB load=1.00 rootload=1.00
(smt.stats    7    863  20311  21400  2982/2649/175     866/102    14  116   53.67)
ramon: poll                 wall=6.000s usage=5.923s mem=55892KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   14.8539    460001      2254          9            1       47)
(smt.stats    8    985  22211  24157  3057/2791/183    1041/136    16  122   53.67)
(smt.stats    9   1119  25005  30058  3083/2796/191    1214/145    16  122   53.78)
ramon: poll                 wall=7.000s usage=6.923s mem=55972KiB load=1.00 rootload=1.00
(smt.stats   10   1220  27605  34331  3151/2840/191    1389/157    17  171   53.88)
(smt.stats   11   1331  29624  38496  3158/2896/191    1526/157    17  171   53.88)
(sat.ddfw       1      1   13.5373    560001      2745         10            1       57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1453  31557  44322  3180/2901/191    1674/158    17  171   53.99)
(smt.stats   13   1587  35799  50127  3221/2930/192    1817/192    18  174   53.99)
ramon: poll                 wall=8.000s usage=7.923s mem=56168KiB load=1.00 rootload=1.00
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 264 := 72313030766558&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 264 := 72313030766558&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 264 := 72313030766560&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 256 := 72313030766560&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 4 := 72313030766560&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 4 := 72313030766560&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 16 := 72313030766560&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 32 := 72313030766560&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 64 := 72313030766560&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313030766592&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313030766594&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313030766594&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313030770690&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313030770690&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313030836226&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313030836226&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313038962690&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313038962690&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313038962690&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313290620930&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313290620930&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72314364362754&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313307414658&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313307414786&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313307414786&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313324175362&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313324175362&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72313324175362&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72314364362754&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72314364362754&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72327249264642&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72327249265154&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72327249265154&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72327249265154&72313030766555
(smt.stats   14   1734  38982  56074  3421/3113/314    2026/210    19  183   54.28)
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72327249264958&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 2 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 64 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 66 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 130 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 66 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 262 := 72327249264898&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264906&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264914&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264906&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264914&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264914&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264914&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264946&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72327249264930&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72018548490498&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72018549014786&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72018549015810&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72018549015810&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72018549016834&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72018549016834&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72018549016834&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72018549016834&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 72018549018882&72313030766555
(smt.stats   15   1835  41380  64396  3638/3179/360    2249/259    20  203   54.90)
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 1103806595330&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 1100585373954&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 1100585370882&72313030766555
band: (band[49] (shl[64] (bv2int %0) (mod #766 64)) (if (or #781 #782) 0 (if #783 1 #918))) 258 := 1100585390338&72313030766555
(smt.stats   16   1946  42525  68626  3914/3375/431    2502/275    21  224   55.09)
(sat.ddfw       1      1   12.4224    670001      3284         11            1       68)
ramon: poll                 wall=9.000s usage=8.923s mem=57332KiB load=1.00 rootload=1.00
(smt.stats   17   2068  47808  77074  3975/3712/446    2675/384    23  238   55.18)
ramon: poll                 wall=10.004s usage=9.927s mem=57864KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.4822    790001      3872         12            1       80)
ramon: poll                 wall=11.000s usage=10.919s mem=57872KiB load=1.00 rootload=0.99
(smt.stats   18   2202  53372  83412  4249/3730/446    2920/394    24  238   55.57)
ramon: poll                 wall=12.004s usage=11.920s mem=58144KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.7022    920001      4509         13            1       93)
ramon: poll                 wall=13.000s usage=12.913s mem=58188KiB load=1.00 rootload=1.00
(smt.stats   19   2349  61300  99433  4426/4020/446    3113/395    24  238   55.77)
(smt.stats   20   2510  65265 114038  4528/4243/449    3786/559    26  245   56.17)
ramon: poll                 wall=14.000s usage=13.912s mem=58688KiB load=1.00 rootload=0.99
(smt.stats   21   2611  71059 122612  4530/4245/449    3992/559    26  245   56.31)
(sat.ddfw       1      1   9.99714   1060001      5196         14            1      108)
(smt.stats   22   2722  76264 140994  4535/4250/450    4218/700    27  252   56.31)
(smt.stats   23   2844  86342 171824  4539/4254/451    4339/709    28  254   56.53)
ramon: poll                 wall=15.000s usage=15.084s mem=59188KiB load=1.17 rootload=1.17
(smt.stats   24   2978  94398 189829  4571/4257/452    4688/710    29  259   56.76)
(sat.ddfw       1      1   9.48047   1210001      5931         15            1      123)
ramon: poll                 wall=16.000s usage=16.078s mem=59256KiB load=0.99 rootload=1.00
(smt.stats   25   3125 101399 212585  4667/4290/456    4979/713    29  259   56.86)
ramon: poll                 wall=17.004s usage=17.085s mem=59288KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=18.076s mem=59312KiB load=0.99 rootload=1.00
(sat.ddfw       1      1   8.90175   1370001      6715         16            1      139)
ramon: poll                 wall=19.004s usage=19.079s mem=59372KiB load=1.00 rootload=1.00
(smt.stats   26   3286 106403 218906  4958/4422/456    5192/912    30  274   56.95)
ramon: poll                 wall=20.000s usage=20.076s mem=59384KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:22:24 2024
ramon: root.execname        z3
ramon: root.utime           20.120s
ramon: root.stime           0.010s
ramon: group.total          20.142s
ramon: group.utime          20.126s
ramon: group.stime          0.016s
ramon: group.mempeak        59640KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.00
