ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:15:43 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27126 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1389
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/vM0DYRIujEnu.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             955605
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   192.308     10000        49          0            1        2)
(sat.ddfw       1      1   90.9182     20001        98          1            1        3)
(sat.ddfw       1      1   86.2069     40001       196          2            1        5)
(smt.stats    0    101   3058    664   734/665/113     114/14    11   19   51.67)
(smt.stats    1    202   4647   2004  1117/990/116     263/30    13   21   51.77)
(sat.ddfw       1      1     71.09     70001       343          3            1        8)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&1
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&1
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 222 := 268435455&223
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 220 := 268435455&222
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&222
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&221
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&216
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&18
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 2 := 268435455&18
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&220
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&220
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&220
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&220
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&216
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32 := 268435455&64
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 64 := 268435455&128
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&24
(smt.stats    2    313   5711   3432  1307/1153/163     472/85    15   31   52.17)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&32
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32 := 268435455&40
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32 := 268435455&36
(smt.stats    3    414   6733   8120  1550/1412/218     683/119    17   48   52.27)
(smt.stats    4    525   8070  10414  1564/1427/230     998/168    19   63   52.36)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 128 := 65535&257
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 129 := 65535&257
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 256 := 65535&385
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 257 := 65535&513
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 513 := 65535&641
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 321 := 65535&385
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 257 := 65535&385
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 129 := 65535&385
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 129 := 65535&385
(sat.ddfw       1      1   59.1716    110001       539          4            1       12)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 897 := 65535&268435201
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 897 := 65535&268435329
(smt.stats    5    647   9277  13031  1728/1469/263    1289/189    21   77   52.66)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 961 := 65535&2433
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 961 := 65535&2433
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 2433 := 65535&2945
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4481 := 65535&268435329
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4481 := 65535&5505
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4481 := 65535&6529
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4481 := 65535&4481
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 1073746305 := 136 << 15
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6529 := 65535&6529
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 1073748353 := 80 << 15
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6529 := 65535&6529
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 1073748353 := 80 << 15
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6529 := 65535&6529
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 1073748353 := 24 << 15
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748  10340  16722  1880/1712/304    1669/257    22   89   52.96)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4917 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4916 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4912 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 5408 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 5376 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 5120 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6144 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6144 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 6144 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8192 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 16384 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32768 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 16384 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32768 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 32768 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8192 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 8192 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4608 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 512 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 512 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 11 := 12 << 16
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 11 := 12 << 16
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 11 := 12 << 16
(smt.stats    7    860  12244  20834  2031/1752/304    2289/271    22   89   53.18)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 0 := 12 << 16
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
shl: (shl[28] (bv2int %0) (+ 28 (* 268435455 #110))) 0 := 12 << 16
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 65535 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 65534 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 4 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 8 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 8 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 32 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 64 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 128 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 256 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 512 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 1024 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 2048 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 4096 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 8192 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16384 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 32768 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 16 := 65535&786432
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 65535&786432
band: (band[28] (if (= #114 27) 1 (if #382 3 #456)) (shl[28] (bv2int %0) (+ 28 #459))) 4 := 65535&786432
ramon: poll                 wall=1.000s usage=0.938s mem=56008KiB load=0.94 rootload=0.92
(sat.ddfw       1      1   50.5551    160000       784          5            1       17)
(smt.stats    8    982  14500  27995  2111/1970/453    2940/572    24  119   53.77)
(smt.stats    9   1116  16466  35520  2123/1981/453    3210/829    25  233   53.87)
(sat.ddfw       1      1   43.9568    220001      1078          6            1       23)
(smt.stats   10   1217  19116  40866  2277/2064/453    3469/839    25  233   54.07)
(sat.ddfw       1      1   38.8242    290001      1421          7            1       30)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 63&384
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 536871296 := 536625140 << 5
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 63&384
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 27 #506 #510) 32)) 536871296 := 336076820 << 5
ramon: poll                 wall=2.000s usage=1.940s mem=56604KiB load=1.00 rootload=1.00
(smt.stats   11   1328  21584  45558  2388/2118/453    3681/841    25  233   54.26)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   12   1450  24037  54260  2592/2397/467    4144/1101    27  267   54.35)
(sat.ddfw       1      1   34.7072    370001      1813          8            1       38)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 129 := 8191&387
(smt.stats   13   1584  27826  66605  2647/2405/468    4636/1111    27  267   54.55)
(smt.stats   14   1731  31820  77120  2722/2462/470    5045/1170    28  281   54.85)
(sat.ddfw       1      1    31.337    460001      2254          9            1       47)
ramon: poll                 wall=3.000s usage=2.936s mem=57080KiB load=1.00 rootload=1.00
(smt.stats   15   1832  33708  83551  2838/2603/470    5289/1174    28  281   55.04)
(sat.ddfw       1      1   28.5878    560001      2745         10            1       57)
(smt.stats   16   1943  35121  89532  3021/2692/471    5740/1219    29  283   55.23)
(smt.stats   17   2065  36975  93628  3052/2845/471    6374/1219    29  283   55.23)
(smt.stats   18   2199  41264 113482  3058/2859/471    6929/1219    29  283   55.33)
ramon: poll                 wall=4.000s usage=3.931s mem=57668KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   26.2342    670001      3284         11            1       68)
(smt.stats   19   2346  45337 124235  3193/2911/472    7571/1489    30  283   55.89)
(smt.stats   20   2507  48034 133455  3358/3145/474    8230/1581    31  291   56.08)
(smt.stats   21   2608  49862 142988  3366/3161/474    8562/1581    31  291   56.08)
ramon: poll                 wall=5.000s usage=4.929s mem=58568KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   24.2375    790001      3872         12            1       80)
(smt.stats   22   2719  54111 162181  3506/3260/476    8903/1700    32  291   56.28)
(sat.ddfw       1      1   23.0701    920001      4509         13            1       93)
ramon: poll                 wall=6.000s usage=6.050s mem=58524KiB load=1.12 rootload=1.12
(smt.stats   23   2841  58158 185808  3623/3406/478    9546/1779    33  298   56.28)
(smt.stats   24   2975  60605 199677  3662/3431/478   10059/1780    33  298   56.37)
(sat.ddfw       1      1   21.4133   1060001      5196         14            1      108)
ramon: poll                 wall=7.000s usage=7.045s mem=58788KiB load=1.00 rootload=0.99
(smt.stats   25   3122  63979 218148  3789/3466/478   10772/1929    34  309   56.56)
(smt.stats   26   3283  67016 234470  3903/3625/478   11188/1935    34  309   56.66)
(sat.ddfw       1      1   20.0374   1210001      5931         15            1      123)
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 170 := 268435455&268435432
(smt.stats   27   3460  71336 266145  3981/3772/487   12009/2231    36  336   56.75)
ramon: poll                 wall=8.000s usage=8.043s mem=59308KiB load=1.00 rootload=1.00
(smt.stats   28   3561  73905 283070  4041/3787/489   12432/2233    36  336   57.07)
(sat.ddfw       1      1   18.8058   1370001      6715         16            1      139)
(smt.stats   29   3672  76265 301389  4111/3856/489   12985/2414    37  344   57.17)
ramon: poll                 wall=9.000s usage=9.039s mem=59448KiB load=1.00 rootload=0.99
(smt.stats   30   3794  80820 323271  4260/3996/491   13441/2418    37  344   57.26)
(smt.stats   31   3928  84036 350009  4281/4056/491   13802/2549    38  347   57.26)
(sat.ddfw       1      1   17.6844   1540001      7549         17            1      156)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   32   4075  87524 371636  4296/4065/495   14951/2770    39  349   57.45)
ramon: poll                 wall=10.000s usage=10.004s mem=59820KiB load=0.97 rootload=0.97
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 16 := 268435455&784
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 16 := 268435455&784
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 272 := 268435455&784
band: (band[28] (if (= #265 31) 1 (if #361 3 #499)) (shl[32] (* 2 #108) (mod #514 32))) 0 := 268435455&64
(smt.stats   33   4236  91510 400037  4320/4081/497   15537/2899    40  383   57.64)
(smt.stats   34   4413  94505 422075  4366/4097/503   15806/2900    40  383   57.83)
(sat.ddfw       1      1    16.696   1720001      8431         18            1      174)
ramon: poll                 wall=11.000s usage=10.996s mem=60068KiB load=0.99 rootload=0.99
(smt.stats   35   4607  96998 435057  4493/4156/503   16319/2959    41  389   57.94)
(smt.stats   36   4708  98695 443551  4613/4328/503   16613/2961    41  389   58.04)
ramon: poll                 wall=12.000s usage=11.993s mem=60384KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.8452   1910001      9362         19            1      193)
(smt.stats   37   4819 100309 450012  4844/4408/505   16902/2963    41  389   58.23)
(smt.stats   38   4941 102684 467484  5013/4784/507   17449/3103    42  399   58.23)
ramon: poll                 wall=13.000s usage=12.988s mem=60500KiB load=1.00 rootload=0.99
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(sat.ddfw       1      1   15.0705   2110001     10343         20            1      214)
(smt.stats   39   5075 106533 491435  5084/4795/509   18479/3108    42  399   58.61)
ramon: poll                 wall=14.000s usage=13.957s mem=61336KiB load=0.97 rootload=0.97
(smt.stats   40   5222 111106 519717  5114/4881/509   19659/3108    42  399   58.69)
(smt.stats   41   5383 112733 525959  5406/4886/509   20059/3463    43  408   58.69)
(sat.ddfw       1      1   14.3619   2320001     11372         21            1      235)
(smt.stats   42   5560 115899 553047  5563/5277/509   21126/3466    43  408   58.88)
ramon: poll                 wall=15.000s usage=14.955s mem=61400KiB load=1.00 rootload=1.00
(smt.stats   43   5754 119960 585630  5646/5338/509   21942/3474    43  408   59.27)
(smt.stats   44   5967 123062 597029  5963/5450/509   22903/3479    43  408   59.46)
(smt.stats   45   6068 125991 615135  5987/5742/509   23669/3479    43  408   59.56)
ramon: poll                 wall=16.000s usage=15.941s mem=61936KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   13.7509   2540001     12451         22            1      257)
(smt.stats   46   6179 129514 636312  6057/5777/509   24127/3481    43  408   59.56)
(smt.stats   47   6301 133145 660205  6146/5856/509   24602/3490    43  408   59.66)
ramon: poll                 wall=17.000s usage=16.942s mem=62080KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.1956   2770001     13578         23            1      280)
(smt.stats   48   6435 136479 684791  6329/5975/509   25448/3496    43  408   59.85)
ramon: poll                 wall=18.000s usage=17.938s mem=62420KiB load=1.00 rootload=0.99
(smt.stats   49   6582 139942 701486  6469/6121/514   26416/4269    44  438   60.34)
(sat.ddfw       1      1    12.681   3010001     14754         24            1      305)
ramon: poll                 wall=19.000s usage=18.935s mem=62756KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.935s mem=62896KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:16:03 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          20.003s
ramon: group.utime          19.983s
ramon: group.stime          0.020s
ramon: group.mempeak        63152KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.00
