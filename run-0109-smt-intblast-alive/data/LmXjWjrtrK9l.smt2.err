ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:06:43 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41926 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/LmXjWjrtrK9l.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2922555
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3848   3438  1321/1193/89      97/4     2   13   19.04)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 163 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 163 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 165 := 31831031671201&165
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 38 := 31831031671201&38
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 40 := 31831031671201&40
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 48 := 31831031671201&48
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 64 := 31831031671201&64
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 163 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 165 := 31831031671201&165
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 289 := 31831031671201&289
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 289 := 288 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 163 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 165 := 31831031671201&165
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 31831031671201&163
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 29 := 31831031671201&192
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&192
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&256
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2849934139195392 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2849934139195392 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&562949953421312
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 562949953421313 := 524304 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670748 := 31831031671201&31831031670784
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670744 := 31831031671201&31831031670784
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670736 := 31831031671201&31831031670784
(smt.stats    1    202   7326   6402  1642/1438/126     190/15     5   22   19.63)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670736 := 31831031671201&31831031670784
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 512 := 162 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 2849934139195393 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671168 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671104 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671040 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031670784 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031668736 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031660544 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031644160 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 65536 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131072 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 524288 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 524288 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1048576 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2097152 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 31831031671201&562949953421312
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671040 := 31831031671201&31831031671296
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831031671040 := 31831031671201&31831031671040
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 31831031671040 := 524322 << 44
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 559104 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 622592 := 31831031671201&2849934139195392
(smt.stats    2    313   8469   8775  2619/2359/200     323/56     8   41   20.01)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 357888 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 356352 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8192 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 16384 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 65536 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8192 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 16384 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131081 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131080 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 131072 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 17 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 17 := 81 << 45
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 1 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 2 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 4 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671200 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671168 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 4 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671200 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671200 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 31831031671168 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 2 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 4 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 72 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 80 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 80 := 31831031671201&2849934139195392
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 31831031671201&2849934139195392
band: (band[63] (if (= #121 62) 1 (if #588 3 #766)) (shl[63] (bv2int %0) (+ 63 #769))) 257 := 31831031671201&2849934139195392
(smt.stats    3    414   9549  11203  2772/2505/307     488/84     9   54   20.63)
(smt.stats    4    525  12053  14593  2944/2670/326     591/157    12   86   20.63)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 1&16504
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 1&16504
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 61 := 8252 << 1
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 1&16504
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 1&16504
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 61 := 8252 << 1
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 1&16504
shl: (shl[63] (bv2int %0) (+ 63 (* 9223372036854775807 #117))) 61 := 8252 << 1
(smt.stats    5    647  16716  19560  2983/2708/339     713/169    14   88   20.77)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&528384
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&532480
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&589824
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&589824
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&532480
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&540672
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&557056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 557056 := 524326 << 42
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&532480
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&557056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 557056 := 524326 << 42
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&557056
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 557056 := 524326 << 42
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&589824
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524328
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524336
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524352
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&525312
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 525312 := 524326 << 42
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524352
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524800
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524352
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 7957757917800&524352
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 64 := 7957757917800&524352
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 524352 := 524326 << 42
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  20380  24738  3108/2821/398     850/197    17  110   21.11)
(smt.stats    7    859  25055  31301  3129/2833/398    1034/197    17  110   21.21)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831034953728
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831034953728
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831035543552
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831035543552
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831035543552
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831035543552
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831034429440 := 130379905725241053&31831038689280
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831042818048 := 130379905725241053&31831042883584
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831042818048 := 130379905725241053&31831042883584
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 31831042818048 := 130379905725241053&31831042883584
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2427722747871232 := 130379905725241053&2427722747871232
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2427722747871232 := 130379905725241053&2427722747871232
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274794590208 := 130379905725241053&2533274794590208
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274798784512 := 130379905725241053&2533274798784512
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2533274798784512 := 138 << 56
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274790395904 := 130379905725241053&2533274790395904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2533274790395904 := 138 << 56
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274790395904 := 130379905725241053&2533274790395904
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2533274790395904 := 138 << 56
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2533274823950336 := 130379905725241053&2533274823950336
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 2533274823950336 := 138 << 56
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 130379905723531264 := 130379905725241053&130379905723531264
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 130379905723531264 := 138 << 56
(smt.stats    8    981  29284  37491  3288/2870/398    1306/209    17  110   21.81)
(smt.stats    9   1115  38977  44884  3303/3010/457    1490/325    18  121   21.81)
(smt.stats   10   1216  43405  50884  3320/3028/458    1573/446    20  131   21.81)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725825024
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725825024
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725890560
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725890560
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725890560
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725759488
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725759488
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725759488
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905725759488
(smt.stats   11   1327  46738  56398  3472/3176/486    1778/498    21  134   21.91)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 65536 := 8344313966415427423&130379905734148096
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 262144 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 2048 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1024 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32768 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4096 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 16384 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 16384 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8192 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 512 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905732050944
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 8344313966415427423&130379905732050944
(smt.stats   12   1450  49257  64046  3622/3331/524    2011/650    23  167   22.12)
ramon: poll                 wall=1.000s usage=0.996s mem=23624KiB load=1.00 rootload=0.97
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 4 := 57&118
(smt.stats   13   1584  53597  69489  3687/3342/525    2175/661    23  167   22.23)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&54
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&32
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 32 := 57&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775840 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&20
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&20
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&20
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&20
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 1 := 57&64
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775872 := 9353751942584598558 << 5
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 0 := 57&64
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 9223372036854775872 := 9353751942584598558 << 5
(smt.stats   14   1731  59478  77626  3849/3541/558    2562/683    24  174   22.53)
(smt.stats   15   1832  63818  84719  3936/3603/558    2848/777    25  188   22.72)
(smt.stats   16   1943  68844  92422  4045/3670/558    3016/782    25  188   22.72)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   17   2065  72953 103492  4090/3751/565    3208/906    26  192   22.83)
(smt.stats   18   2199  81577 121338  4116/3808/565    3327/918    27  205   22.83)
(smt.stats   19   2346  89449 129808  4121/3813/565    3509/918    27  205   22.94)
(smt.stats   20   2507  94760 140955  4141/3833/569    4031/1021    29  213   23.13)
(smt.stats   21   2608 100581 155869  4145/3837/572    4308/1168    30  229   23.22)
(smt.stats   22   2719 105001 166939  4166/3858/577    4459/1194    31  252   23.42)
ramon: poll                 wall=2.000s usage=1.996s mem=24904KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   23   2841 110914 181438  4345/3998/579    4773/1267    32  256   23.62)
(smt.stats   24   2975 114801 190669  4383/4036/581    5180/1268    32  256   23.75)
(smt.stats   25   3122 121053 203651  4409/4059/590    5467/1349    33  271   23.94)
(smt.stats   26   3283 128736 218110  4435/4069/594    5666/1375    34  313   24.03)
(smt.stats   27   3460 135699 235698  4535/4181/601    5975/1395    35  326   24.22)
(smt.stats   28   3561 137687 242258  4619/4209/623    6322/1431    36  356   24.22)
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429402
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429400
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429402
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429406
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429466
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429468
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429470
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205278 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427422 := 8344313966415427423&8344313966415429464
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429465
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205277 := 9353751942588218928 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429465
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205277 := 9353751942588218676 << 62
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429465
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 8344313966415427421 := 8344313966415427423&8344313966415429469
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 62 #911 #912) 64)) 17567686003270205277 := 9353751942588218676 << 62
(smt.stats   29   3672 140832 249522  4872/4515/639    6503/1442    36  356   24.41)
ramon: poll                 wall=3.000s usage=2.996s mem=25928KiB load=1.00 rootload=0.99
(smt.stats   30   3794 145423 258358  5063/4542/639    6869/1733    37  399   24.41)
(smt.stats   31   3928 149043 270895  5178/4732/639    7316/1743    37  399   24.54)
(smt.stats   32   4075 155664 285861  5207/4851/640    7765/2090    38  402   24.73)
(smt.stats   33   4237 167371 311987  5282/4930/641    8104/2281    39  405   24.73)
ramon: poll                 wall=4.000s usage=3.996s mem=26440KiB load=1.00 rootload=1.00
(smt.stats   34   4414 176352 337691  5296/4944/641    8706/2281    39  405   24.73)
(smt.stats   35   4608 184193 365780  5314/4962/652    8967/2506    40  414   24.85)
(smt.stats   36   4709 188967 379885  5482/5008/652    9114/2548    41  460   25.05)
(smt.stats   37   4820 191557 394243  5752/5167/652    9321/2549    41  460   25.14)
(smt.stats   38   4942 193289 402798  6146/5508/652    9694/2553    41  460   25.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 330)
(smt.stats   39   5076 203509 419260  6182/5811/652    9644/2553    41  460   25.33)
ramon: poll                 wall=5.000s usage=4.996s mem=26952KiB load=1.00 rootload=1.00
(smt.stats   40   5223 218718 458993  6229/5829/652   10145/2557    41  460   25.42)
(smt.stats   41   5384 231080 483308  6301/5875/652   10982/2562    41  460   25.66)
(smt.stats   42   5561 242619 504479  6372/5995/652   11404/2562    41  460   25.66)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5755 250562 541743  6537/6024/652   11953/2570    41  460   25.85)
ramon: poll                 wall=6.000s usage=5.996s mem=27464KiB load=1.00 rootload=1.00
(smt.stats   44   5968 260907 584886  6777/6261/652   12463/2572    41  460   25.94)
(smt.stats   45   6069 267329 618104  6794/6428/656   13183/3417    42  463   25.94)
(smt.stats   46   6180 273277 642388  6829/6461/657   13578/3482    43  473   26.07)
(smt.stats   47   6302 276478 649285  7010/6468/657   13946/3485    43  473   26.17)
ramon: poll                 wall=7.000s usage=6.996s mem=27720KiB load=1.00 rootload=1.00
(smt.stats   48   6436 280219 658572  7262/6732/657   14546/3575    44  490   26.26)
(smt.stats   49   6583 287144 676581  7378/6949/658   15119/3578    44  490   26.45)
ramon: poll                 wall=8.000s usage=7.996s mem=28232KiB load=1.00 rootload=1.00
(smt.stats   50   6744 296864 704095  7626/7025/658   15866/3810    45  494   26.55)
(smt.stats   51   6921 307178 739590  7672/7306/658   16274/3810    45  494   26.64)
(smt.stats   52   7115 316277 765123  7692/7325/658   16823/3810    45  494   26.74)
ramon: poll                 wall=9.000s usage=8.996s mem=28744KiB load=1.00 rootload=1.00
(smt.stats   53   7328 329103 817905  7804/7329/659   17561/4246    46  496   27.22)
(smt.stats   54   7562 336986 855487  8037/7491/659   18495/4256    46  496   27.50)
(smt.stats   55   7663 342778 886995  8121/7693/659   18803/4258    46  496   27.50)
ramon: poll                 wall=10.000s usage=9.996s mem=29256KiB load=1.00 rootload=1.00
(smt.stats   56   7774 347271 899882  8330/7761/659   19381/4260    46  496   27.62)
(smt.stats   57   7896 350548 909587  8721/7985/660   19585/4567    47  500   27.71)
(smt.stats   58   8030 355052 928840  8780/8394/660   20091/4569    47  500   27.81)
ramon: poll                 wall=11.000s usage=10.995s mem=29512KiB load=1.00 rootload=1.00
(smt.stats   59   8177 365985 946780  8784/8417/660   20442/4569    47  500   27.81)
(smt.stats   60   8338 373784 970882  8944/8421/660   20937/4570    47  500   28.01)
ramon: poll                 wall=12.000s usage=11.995s mem=29512KiB load=1.00 rootload=1.00
(smt.stats   61   8515 376361 984026  9297/8669/660   21270/4571    47  500   28.11)
(smt.stats   62   8709 379704 995181  9673/8972/660   21743/4575    47  500   28.30)
ramon: poll                 wall=13.000s usage=12.995s mem=30024KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   63   8922 383388 1010358 10268/9437/660   22214/4581    47  500   28.48)
ramon: poll                 wall=14.000s usage=13.995s mem=30280KiB load=1.00 rootload=1.00
(smt.stats   64   9156 399618 1102395 10338/9958/660   22809/4581    47  500   28.38)
(smt.stats   65   9413 411091 1186948 10369/10002/668   23789/5284    49  511   28.71)
(smt.stats   66   9514 415130 1198241 10645/10201/668   24578/5285    49  511   28.81)
(smt.stats   67   9625 424498 1246006 10683/10218/668   24964/5449    50  591   29.01)
ramon: poll                 wall=15.000s usage=14.995s mem=30792KiB load=1.00 rootload=1.00
(smt.stats   68   9747 431167 1279853 10688/10258/670   25454/5594    51  607   29.01)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   69   9881 437047 1310096 10696/10266/670   26237/5594    51  607   29.11)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10028 441734 1320186 10699/10266/670   26464/5597    51  607   29.11)
(smt.stats   71  10189 450103 1399194 10769/10283/670   26882/5597    51  607   29.22)
ramon: poll                 wall=16.000s usage=15.995s mem=31304KiB load=1.00 rootload=1.00
band: (band[63] (if (= #779 63) 0 (if #781 1 #905)) (shl[64] (* 2 #107) (mod #913 64))) 16 := 115&8935141660731899926
(smt.stats   72  10367 458042 1416103 10947/10358/670   27255/5602    51  607   29.52)
(smt.stats   73  10561 469390 1445785 11006/10576/677   28056/5980    52  608   29.71)
ramon: poll                 wall=17.000s usage=16.995s mem=31560KiB load=1.00 rootload=1.00
(smt.stats   74  10774 479311 1481115 11053/10580/677   28561/5980    52  608   29.90)
(smt.stats   75  11008 486724 1501970 11384/10714/677   29342/6133    53  621   30.10)
ramon: poll                 wall=18.000s usage=17.995s mem=31816KiB load=1.00 rootload=1.00
(smt.stats   76  11265 495067 1555752 11804/10977/677   30203/6139    53  621   30.29)
(smt.stats   77  11547 508717 1615726 11832/11384/677   31402/6141    53  621   30.38)
ramon: poll                 wall=19.000s usage=18.995s mem=32072KiB load=1.00 rootload=1.00
(smt.stats   78  11648 513427 1638062 11838/11408/678   31874/6635    54  623   30.48)
(smt.stats   79  11759 517079 1665415 11841/11411/678   32268/6635    54  623   30.57)
(smt.stats   80  11881 527159 1694955 11844/11414/679   32589/7053    55  638   30.78)
(smt.stats   81  12015 531577 1710602 11854/11422/679   33144/7053    55  638   30.97)
(smt.stats   82  12162 550788 1749919 11857/11427/679   33492/7053    55  638   30.97)
ramon: poll                 wall=20.000s usage=19.995s mem=32840KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:07:03 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          20.001s
ramon: group.utime          19.965s
ramon: group.stime          0.036s
ramon: group.mempeak        33096KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.005s
ramon: loadavg              1.00
