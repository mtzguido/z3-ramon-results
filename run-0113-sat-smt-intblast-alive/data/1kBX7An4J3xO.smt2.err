ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 14:49:08 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41599 MiB
ramon: sys.mem.avail        61386 MiB
ramon: sys.nprocs           1348
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1kBX7An4J3xO.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3647204
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   457/456     0/0  57       0    19.05   0.00)
(sat.stats    101    597    0   457/456   101/46  57       0    19.24   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 240 :time 0.00)
(sat.stats    101    597    0   457/456   101/46  57       0    19.24   0.01)
(sat.stats    101    597    0   457/456   101/46  57       0    19.24   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 694019.34 :time 0.00)
(sat.stats    101    597    0   459/458    64/45  57       0    19.34   0.01)
(sat.stats    104    609    1   459/458    67/48  57       0    19.34   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    117    810    2   459/458    80/58  57       0    19.34   0.01)
(sat.stats    120    855    3   459/458    83/60  57       0    19.34   0.01)
(sat.stats    136   1209    4   459/458    99/70  57       0    19.34   0.01)
(sat.stats    139   1257    5   459/458   102/71  57       0    19.34   0.01)
(sat.stats    142   1319    6   459/458   105/71  57       0    19.34   0.01)
(sat.stats    145   1376    7   459/458   108/71  57       0    19.34   0.01)
(sat.stats    148   1440    8   459/458   111/72  57       0    19.34   0.01)
(sat.stats    151   1489    9   459/458   114/72  57       0    19.34   0.01)
(sat.stats    154   1537   10   459/458   117/72  57       0    19.34   0.01)
(sat.stats    157   1581   11   459/458   120/72  57       0    19.34   0.01)
(sat.stats    160   1626   12   459/458   123/74  57       0    19.34   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    382   7348   21   459/458   345/240  57       0    19.94   0.08)
(sat.stats    385   7378   22   459/458   348/241  57       0    19.94   0.08)
(sat.stats    527  10946   28   459/458   490/298  57       0    20.04   0.12)
(sat.stats    714  13996   62   461/460   677/309  57       0    20.26   0.15)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 7910 :time 0.00)
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 1 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 4272 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 2 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 0 := 134217727&1125899638407168
band: (band[50] (if (= #488 63) 10384593717069646033688955803664384 (if #638 5192296858534823016844477901832192 #635)) (if (or #1128 #1129) 0 (if #1130 1 #1264))) 18264 := 1125899638407168&134217727
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 0 := 134217727&1125899638407168
band: (band[50] (if (= #488 63) 10384593717069646033688955803664384 (if #638 5192296858534823016844477901832192 #635)) (if (or #1128 #1129) 0 (if #1130 1 #1264))) 355079 := 1125899638407168&134217727
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 0 := 134217727&1125899638407168
band: (band[50] (if (= #488 63) 10384593717069646033688955803664384 (if #638 5192296858534823016844477901832192 #635)) (if (or #1128 #1129) 0 (if #1130 1 #1264))) 16 := 1125899638407168&134217727
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 0 := 134217727&1125899638407168
band: (band[50] (if (= #488 63) 10384593717069646033688955803664384 (if #638 5192296858534823016844477901832192 #635)) (if (or #1128 #1129) 0 (if #1130 1 #1264))) 2 := 1125899638407168&134217727
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 12 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 8 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 0 := 134217727&1125899638407168
band: (band[50] (if (= #488 63) 10384593717069646033688955803664384 (if #638 5192296858534823016844477901832192 #635)) (if (or #1128 #1129) 0 (if #1130 1 #1264))) 36 := 1125899638407168&134217727
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 493344 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 324864 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 64 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 128 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 15629824 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 18235392 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 12288 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 3072 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 2048 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 8192 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 76808192 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 196608 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 32768 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 131072 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 98566144 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 524288 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 1048576 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 88080384 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 50331648 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 8388608 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 67108864 := 134217727&1125899638407168
band: (band[50] (if (= #868 49) 0 (if #870 1 #1008)) (if (= #324 49) 633825300114114137798398181376 (if #1012 316912650057057068899199090688 #1108))) 33554432 := 134217727&1125899638407168
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 9558 :time 0.00)
(sat.stats   1142  36624   85  2598/2596  1101/465 263       0    22.80   0.51)
 (sat-cleaner :elim-literals 8 :elim-clauses 1 :cost 11243 :time 0.00)
ramon: poll                 wall=1.000s usage=0.997s mem=25104KiB load=1.00 rootload=0.99
(sat.stats   1598  66949  182  5038/5036  1574/672 280       0    24.21   1.22)
ramon: poll                 wall=2.000s usage=1.995s mem=29668KiB load=1.00 rootload=1.00
ramon: poll                 wall=3.000s usage=2.992s mem=31304KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 24535 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 4 :cost 24623 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 25063 :time 0.00)
ramon: poll                 wall=4.000s usage=3.989s mem=32228KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.987s mem=32268KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.987s mem=32312KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts        :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats   2793 157690  255 40600/40598  3198/1521 318       0    30.59   6.02)
ramon: poll                 wall=7.000s usage=6.987s mem=32364KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 28368 :time 0.00)
ramon: poll                 wall=8.000s usage=7.987s mem=32440KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.987s mem=32472KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.986s mem=32504KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.986s mem=32540KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.986s mem=32576KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.986s mem=32592KiB load=1.00 rootload=1.00
(sat.stats   3822 231080  335 41808/41806  4246/1880 319       0    31.10  13.02)
ramon: poll                 wall=14.000s usage=13.986s mem=32612KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.986s mem=32632KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.985s mem=32744KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.003s usage=16.989s mem=34168KiB load=1.00 rootload=1.01
(sat.stats   5470 261502  389 54147/54145  5456/2398 319       0    33.30  17.41)
ramon: poll                 wall=18.000s usage=17.985s mem=34292KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.985s mem=34664KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 46071 :time 0.00)
ramon: poll                 wall=20.000s usage=19.985s mem=34872KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 14:49:28 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.000s
ramon: group.total          19.995s
ramon: group.utime          19.987s
ramon: group.stime          0.008s
ramon: group.mempeak        35128KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.011s
ramon: loadavg              1.00
