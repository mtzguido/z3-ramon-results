ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:43:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40931 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/gBUVoLpDO1jf.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3042146
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3051    157  1295/1171/99      91/54     6   18   19.24)
(smt.stats    1    202   3773    546  2635/2357/101     193/71     7   22   19.62)
(smt.stats    2    313   4285   1433  2800/2459/101     319/74     7   22   19.62)
(smt.stats    3    414   5572   3900  2877/2629/107     413/96     9   32   19.62)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1152921504603702718&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 1152921504603702718 := 18446744073659243520 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1152921504603702718&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 1152921504603702718 := 18446744073659243520 >>l 4
(smt.stats    4    525   7095   6496  2919/2667/118     535/103    11   37   19.72)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1 := 1&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1 := 1&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606846926 := 1152921504606846926&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606846924 := 1152921504606846924&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606846920 := 1152921504606846920&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606846924 := 1152921504606846924&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 8 := 8&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 16 := 16&1152921504606846928
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 16 := 18446744073659244464 >>l 63
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 6 := 6&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 4 := 4&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 8 := 8&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 8 := 8&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 8 := 8&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 0&1152921504606846928
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 0 := 18446744073659244464 >>l 63
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 0&1152921504606846928
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 0 := 18446744073659244464 >>l 63
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1&1152921504606846928
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 3 := 1152921504603702779 >>l 59
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1&1152921504606846928
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 0 := 1152921504603702779 >>l 59
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1&1152921504606846928
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 0 := 1152921504603702779 >>l 59
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1&1152921504606846928
band: (band[60] (lshr[60] (bv2int %0) (mod #98 60)) (if (= #514 59) 664613997892457922616845474858008576 (if #516 332306998946228961308422737429004288 #632))) 1 := 1&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1&1152921504606846928
band: (band[60] (lshr[60] (bv2int %0) (mod #98 60)) (if (= #514 59) 664613997892457922616845474858008576 (if #516 332306998946228961308422737429004288 #632))) 1 := 1&1152921504606846928
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1&1152921504606846928
band: (band[60] (lshr[60] (bv2int %0) (mod #98 60)) (if (= #514 59) 664613997892457922616845474858008576 (if #516 332306998946228961308422737429004288 #632))) 1 := 1&1152921504606846928
(smt.stats    5    647  11722   8106  3013/2735/167     694/116    14   51   20.01)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 2 := 3&1152921504606846880
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 2 := 3&1152921504606846880
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 2 := 3&1152921504606846880
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 2 := 3&1152921504606846880
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 17 := 1152921504603702540&1152921504606846880
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 17 := 1152921504603702539&1152921504606846880
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 17 := 1152921504603702539&1152921504606846880
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 16 := 1152921504603702539&1152921504606846880
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 32 := 33&1152921504606846880
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 33 := 18446744073659244448 >>l 62
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 32 := 33&1152921504606846880
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 33 := 18446744073659244448 >>l 62
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 32 := 32&1152921504606846880
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 32 := 18446744073659244448 >>l 62
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 32 := 32&1152921504606846880
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 32 := 18446744073659244448 >>l 62
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  13154  10375  3058/2793/195     805/128    16   58   20.11)
(smt.stats    7    859  14449  11825  3101/2808/195     930/128    16   58   20.20)
(smt.stats    8    981  15862  15431  3165/2899/200    1083/136    17   62   20.20)
(smt.stats    9   1115  20076  19185  3227/2957/201    1238/184    19   69   20.30)
ramon: poll                 wall=1.000s usage=0.923s mem=21548KiB load=0.92 rootload=0.91
(smt.stats   10   1216  23224  21883  3250/2964/201    1350/187    19   69   20.30)
(smt.stats   11   1327  26802  26183  3267/2997/207    1474/208    20   73   20.40)
(smt.stats   12   1449  30012  29511  3300/3018/211    1616/235    22   84   20.49)
(smt.stats   13   1583  32989  33390  3326/3042/211    1758/236    22   84   20.49)
(smt.stats   14   1730  40062  43855  3331/3058/211    1909/236    22   84   20.72)
(smt.stats   15   1831  43281  48438  3368/3087/212    2059/258    23   86   20.91)
(smt.stats   16   1942  44691  53608  3390/3101/212    2179/258    23   86   20.91)
(smt.stats   17   2064  48909  58271  3402/3114/216    2308/270    24   89   21.01)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 299&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 1152921504606847275 := 4800 >>l 4
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 299&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 1152921504606847275 := 4800 >>l 4
(smt.stats   18   2198  51776  65715  3421/3122/216    2492/274    24   89   21.10)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1152921504603702539&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 1152921504603702539 := 4816 >>l 5
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 768&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 768 := 4816 >>l 5
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 768&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 768 := 4816 >>l 5
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 150&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 1152921504606846975 := 301 >>l 1
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 150&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 153 := 301 >>l 1
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 150&0
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 153 := 301 >>l 1
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 0&1152921504606748672
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 0 := 5568 >>l 52
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 0&1152921504606748672
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 174 := 348 >>l 48
(smt.stats   19   2345  58164  74883  3454/3145/216    2678/274    24   89   21.20)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1152921504606846974&1152921504606748672
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1152921504606846974&1152921504606748672
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1152921504606846974&1152921504606748672
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1152921504606846974&1152921504606748672
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 1152921504606846974&1152921504606748672
(smt.stats   20   2506  60712  80713  3585/3269/248    2845/297    25   92   21.30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   21   2607  66047  87639  3626/3298/249    2962/300    27  101   21.59)
(smt.stats   22   2718  67906  92558  3677/3358/249    3126/301    27  101   21.59)
ramon: poll                 wall=2.000s usage=1.923s mem=22828KiB load=1.00 rootload=0.99
(smt.stats   23   2840  70248  96490  3729/3400/252    3268/316    28  106   21.69)
(smt.stats   24   2974  72478 104876  3793/3493/254    3551/362    29  107   21.78)
(smt.stats   25   3121  75695 115208  3826/3505/254    3747/365    29  107   21.78)
(smt.stats   26   3282  79730 129947  3855/3549/254    3921/383    30  115   21.78)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 751&1152815951490580480
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 751 := 3168 >>l 22
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 687&1152815951490580480
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 687 := 3168 >>l 22
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 687&1152815951490580480
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 687 := 3168 >>l 22
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 0&1152815951490580480
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 198 := 198 >>l 18
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 0&1152815951490580480
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 197 := 198 >>l 18
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 0&1152815951490580480
lshr: (lshr[60] (bv2int %0) (mod (bv2int %0) 60)) 100 := 198 >>l 18
(smt.stats   27   3459  82489 137226  3888/3562/254    4171/383    30  115   21.88)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 751&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 751 := 1936 >>l 5
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 0 := 59&0
lshr: (lshr[64] (* 16 (bv2int %0)) (mod (+ 4 #98 #355) 64)) 59 := 1936 >>l 5
(smt.stats   28   3562  83806 143661  3919/3612/266    4311/402    31  117   21.88)
(smt.stats   29   3673  87045 148896  3974/3645/268    4555/407    31  117   21.98)
(smt.stats   30   3795  89455 156682  4037/3686/268    4730/412    32  138   22.07)
ramon: poll                 wall=3.000s usage=2.923s mem=23340KiB load=1.00 rootload=1.00
(smt.stats   31   3929  94319 165465  4079/3766/270    4891/428    33  145   22.07)
(smt.stats   32   4076  96843 172639  4089/3775/270    5085/429    33  145   22.17)
(smt.stats   33   4237 100503 184532  4101/3790/273    5301/450    34  145   22.17)
(smt.stats   34   4414 105241 198062  4114/3803/274    5510/458    35  153   22.26)
(smt.stats   35   4608 107005 207083  4116/3805/276    5763/478    36  159   22.26)
(smt.stats   36   4709 108530 215118  4117/3806/276    5885/478    36  159   22.26)
(smt.stats   37   4820 112605 223370  4120/3809/276    5996/478    36  159   22.49)
ramon: poll                 wall=4.000s usage=3.923s mem=23912KiB load=1.00 rootload=1.00
(smt.stats   38   4942 115518 234497  4125/3814/276    6169/478    36  159   22.49)
(smt.delete-inactive-clauses  :num-deleted-clauses 146)
(smt.stats   39   5076 117659 239897  4173/3819/276    6212/481    36  159   22.59)
(smt.stats   40   5223 120802 249870  4310/3875/276    6454/487    36  159   22.59)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   41   5384 123870 257464  4512/4023/276    6697/493    36  159   22.68)
ramon: poll                 wall=5.000s usage=4.923s mem=24168KiB load=1.00 rootload=1.00
(smt.stats   42   5561 126989 268468  4610/4231/276    7096/494    36  159   22.78)
(smt.stats   43   5755 131845 280036  4737/4304/276    7320/507    36  159   22.92)
ramon: poll                 wall=6.000s usage=5.922s mem=24424KiB load=1.00 rootload=1.00
(smt.stats   44   5968 135961 292169  4855/4483/276    7595/513    36  159   22.92)
(smt.stats   45   6069 138252 300269  4901/4579/276    7758/517    36  159   22.92)
(smt.stats   46   6180 141338 305607  5009/4698/279    7850/711    37  200   23.02)
ramon: poll                 wall=7.000s usage=6.902s mem=24612KiB load=0.98 rootload=0.98
(smt.stats   47   6302 144739 309661  5152/4706/279    7995/719    37  200   23.12)
(smt.stats   48   6436 148024 314554  5307/4884/279    8188/726    37  200   23.21)
(smt.stats   49   6583 151507 323830  5350/5004/279    8417/732    37  200   23.21)
ramon: poll                 wall=8.000s usage=7.902s mem=24920KiB load=1.00 rootload=1.00
(smt.stats   50   6744 152778 327515  5856/5065/279    8670/735    37  200   23.51)
(smt.stats   51   6921 157910 348324  5951/5625/281    8988/808    38  227   23.51)
ramon: poll                 wall=9.000s usage=8.902s mem=25176KiB load=1.00 rootload=0.99
(smt.stats   52   7115 163775 362369  5993/5666/281    9243/813    38  227   23.51)
(smt.stats   53   7328 167621 376208  6403/5693/281    9564/819    38  227   23.70)
ramon: poll                 wall=10.000s usage=9.902s mem=25432KiB load=1.00 rootload=1.00
(smt.stats   54   7562 171683 391347  6699/6380/282    9954/907    39  238   23.83)
(smt.stats   55   7663 173965 399532  6733/6399/282   10070/909    39  238   23.83)
(smt.stats   56   7774 178139 408956  6811/6427/282   10299/911    39  238   23.92)
(smt.stats   57   7896 181252 415971  7048/6516/282   10537/915    39  238   24.02)
ramon: poll                 wall=11.000s usage=10.902s mem=25432KiB load=1.00 rootload=1.00
(smt.stats   58   8030 182772 424512  7162/6838/282   11002/915    39  238   24.02)
(smt.stats   59   8177 185672 435575  7212/6873/282   11189/920    39  238   24.02)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   60   8338 189405 451906  7440/6949/283   11708/1090    40  239   24.21)
(smt.stats   61   8515 192270 460201  7697/7271/283   12076/1090    40  239   24.21)
(smt.stats   62   8709 195011 475754  7721/7408/283   12561/1090    40  239   24.30)
ramon: poll                 wall=12.000s usage=11.901s mem=25944KiB load=1.00 rootload=1.00
(smt.stats   63   8922 199240 492623  7828/7412/283   13101/1093    40  239   24.40)
(smt.stats   64   9156 205269 508005  7934/7556/283   13631/1100    40  239   24.49)
(smt.stats   65   9413 210283 528382  8046/7689/283   14036/1102    40  239   24.59)
(smt.stats   66   9514 211617 536907  8064/7751/284   14379/1485    41  242   24.59)
ramon: poll                 wall=13.000s usage=12.901s mem=26200KiB load=1.00 rootload=1.00
(smt.stats   67   9625 214419 547461  8082/7756/284   14809/1485    41  242   24.68)
(smt.stats   68   9747 217120 558002  8159/7777/284   15043/1487    41  242   24.78)
(smt.stats   69   9881 222534 588447  8273/7936/284   15352/1487    41  242   24.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 41)
(smt.stats   70  10028 225226 602574  8309/7968/284   15768/1487    41  242   24.87)
(smt.stats   71  10189 229017 625484  8415/8021/284   16375/1488    41  242   24.87)
ramon: poll                 wall=14.000s usage=13.874s mem=26448KiB load=0.97 rootload=0.98
(smt.stats   72  10366 234834 648111  8458/8105/286   16804/1787    42  252   24.97)
(smt.stats   73  10560 240166 664216  8535/8182/286   17308/1787    42  252   24.97)
(smt.stats   74  10773 245467 685158  8726/8231/286   17815/1788    42  252   25.16)
(smt.stats   75  11007 248832 701842  8796/8423/286   18278/1789    42  252   25.26)
(smt.stats   76  11264 254309 728789  8834/8487/286   18703/1791    42  252   25.26)
ramon: poll                 wall=15.000s usage=14.872s mem=26972KiB load=1.00 rootload=0.99
(smt.stats   77  11546 259703 761114  8908/8536/286   19173/1793    42  252   25.35)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504605011696 := 1152921504606781505&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504605011712 := 1152921504606781505&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504605011712 := 1152921504606781504&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504605011712 := 1152921504606781504&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504605011712 := 1152921504606781505&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504605011696 := 1152921504606781505&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504605011696 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504605011696 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504605011712 := 1152921504606339583&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504604962916 := 1152921504606797873&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504604962916 := 1152921504606797876&1152921504606797824
(smt.stats   78  11647 261228 768168  9033/8598/286   19336/1797    42  252   25.55)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504604962916 := 1152921504606797873&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504604962916 := 1152921504606797919&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606667264 := 1152921504606797873&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606667264 := 1152921504606797873&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606667264 := 1152921504606797873&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606666816 := 1152921504606797873&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606666816 := 1152921504606797873&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606666816 := 1152921504606797873&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606666848 := 1152921504606797905&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606666848 := 1152921504606797905&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606666848 := 1152921504606797905&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606666848 := 1152921504606797905&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606665728 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606664704 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606662656 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606658560 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606652416 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606654464 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606658560 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606652416 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606654464 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606652416 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606654464 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606654464 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606654464 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606658560 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606658560 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606666752 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606666752 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606652416 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606781503&1152921504606797824
(smt.stats   79  11758 263149 775884  9220/8739/311   19595/2128    43  257   25.85)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650368 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650368 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650368 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650368 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650368 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650400 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650400 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650400 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650400 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606683136 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606683136 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650496 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650496 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650496 := 1152921504606781503&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650496 := 1152921504606781585&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650496 := 1152921504606781585&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650496 := 1152921504606781585&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650496 := 1152921504606781585&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650496 := 1152921504606781585&1152921504606797824
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   80  11880 265892 803761  9390/9009/428   19941/2148    43  257   26.14)
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606650880 := 1152921504606782367&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606782622&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606782609&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606782609&1152921504606797824
band: (band[60] (lshr[64] (* 16 #98) (mod #356 64)) (if (= #655 63) 21267647932558653523739055195456274432 (if #657 10633823966279326761869527597728137216 #781))) 1152921504606651392 := 1152921504606782609&1152921504606797824
(smt.stats   81  12014 267936 813653  9555/9060/428   20318/2151    43  257   26.36)
(smt.stats   82  12161 269103 819065  9876/9298/438   20635/2286    44  284   26.55)
ramon: poll                 wall=16.000s usage=15.872s mem=28252KiB load=1.00 rootload=1.00
(smt.stats   83  12322 270485 825680 10229/9642/438   21086/2286    44  284   26.93)
(smt.stats   84  12499 272761 835939 10834/10055/438   21890/2290    44  284   27.04)
(smt.stats   85  12693 279434 862168 11007/10674/440   23214/2296    44  284   27.33)
ramon: poll                 wall=17.000s usage=16.872s mem=29020KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   86  12906 286343 893934 11073/10712/440   23762/2299    44  284   27.42)
(smt.stats   87  13140 296795 923629 11246/10786/441   25369/3002    45  306   27.71)
ramon: poll                 wall=18.000s usage=17.872s mem=29532KiB load=1.00 rootload=1.00
(smt.stats   88  13397 305973 970945 11304/10989/441   26304/3002    45  306   27.81)
(smt.stats   89  13679 315455 1027939 11394/11008/443   27886/3620    46  310   28.50)
ramon: poll                 wall=19.000s usage=18.870s mem=30372KiB load=1.00 rootload=0.99
(smt.stats   90  13989 328620 1087696 11628/11270/445   28558/4053    48  328   28.69)
(smt.stats   91  14090 333337 1122099 11637/11285/447   29021/4053    48  328   28.79)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   92  14201 336257 1139098 11848/11483/449   29298/4055    48  328   28.89)
(smt.stats   93  14323 338955 1164245 12217/11855/450   29580/4241    49  393   28.98)
(smt.stats   94  14457 341801 1189063 12315/11963/451   30073/4241    49  393   29.08)
ramon: poll                 wall=20.000s usage=19.870s mem=30884KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:43:21 2024
ramon: root.execname        z3
ramon: root.utime           19.880s
ramon: root.stime           0.030s
ramon: group.total          19.916s
ramon: group.utime          19.884s
ramon: group.stime          0.032s
ramon: group.mempeak        31140KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.045s
ramon: loadavg              0.99
