ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:27:27 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42820 MiB
ramon: sys.mem.avail        61715 MiB
ramon: sys.nprocs           1257
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/4UDk5xAVqNg7.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2787186
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5099    502  1228/1092/111     101/11     5   22   19.28)
(smt.stats    1    202   6222   1079  1977/1782/111     207/13     5   22   19.38)
(smt.stats    2    313   9696   3213  2029/1835/114     354/43     7   25   19.49)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 17592186044416 := 1125899906842623&17592186044416
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1154047404513689599 := 1154047404513673216 >>l 21
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 1 := 17592186044417&17592186044416
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 17592186044417&17592186044416
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1125899906842623&17592186044416
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1090715534753792&17592186044416
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 289321091686465536 := 288230376151744512 >>l 21
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1090715534753792&17592186044416
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 289321091686465536 := 288230376151744512 >>l 21
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 1 := 17592186044417&17592186044416
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 17592186044417&17592186044416
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 17592186044414 := 35184372088832&17592186044416
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 35184372088832&17592186044416
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 288265560523800576 := 288230376151744512 >>l 21
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 35184372088832&17592186044416
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 288265560523800576 := 288265560523784192 >>l 21
(smt.stats    3    424  12895   5061  2528/2293/139     464/98    10   36   19.68)
(smt.stats    4    535  14230   6585  2587/2321/142     534/65    11   72   19.78)
(smt.stats    5    657  16496   9101  2629/2383/149     645/83    14   78   19.89)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    758  23403  14248  2636/2395/149     741/87    15   78   19.89)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 18445618173802708993 := 18445618173802708992 >>l 14
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 18445618173802708993 := 18445618173802708992 >>l 14
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 18445618173802708993 := 18445618173802708992 >>l 14
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1154047404513689601 := 18445618173802708992 >>l 14
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1154047404513689601 := 18445618173802708992 >>l 14
(smt.stats    7    869  24913  16408  2679/2437/158     846/97    17   83   19.89)
(smt.stats    8    991  28407  19228  2699/2449/166     959/99    18   88   20.02)
(smt.stats    9   1125  33969  26541  2709/2465/166    1084/108    19   97   20.02)
(smt.stats   10   1226  36410  28535  2710/2466/166    1184/108    19   97   20.02)
(smt.stats   11   1337  39660  32151  2714/2470/166    1291/108    19   97   20.14)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1459  41784  35299  2727/2481/169    1422/112    20  100   20.14)
(smt.stats   13   1593  43842  40167  2741/2495/170    1554/120    21  117   20.14)
(smt.stats   14   1740  45991  47285  2766/2505/170    1707/123    21  117   20.24)
(smt.stats   15   1841  46739  50044  2787/2535/170    1806/123    21  117   20.24)
(smt.stats   16   1952  47268  52091  2787/2541/170    1918/123    21  117   20.34)
ramon: poll                 wall=1.000s usage=0.998s mem=21388KiB load=1.00 rootload=0.98
(smt.stats   17   2074  48687  55983  2802/2544/171    2042/128    22  118   20.34)
(smt.stats   18   2208  51913  61540  2849/2575/171    2183/130    22  118   20.34)
(smt.stats   19   2355  53371  66119  2883/2617/171    2330/130    22  118   20.34)
(smt.stats   20   2516  54299  71586  2893/2643/172    2493/136    23  120   20.34)
(smt.stats   21   2617  55792  74568  2893/2647/172    2594/136    23  120   20.44)
(smt.stats   22   2728  57581  78824  2897/2651/172    2701/136    23  120   20.44)
(smt.stats   23   2850  58821  83205  2901/2653/172    2823/136    23  120   20.44)
(smt.stats   24   2984  59893  88517  2904/2658/173    2961/141    24  122   20.44)
(smt.stats   25   3131  63112  95124  2915/2663/173    3106/141    24  122   20.63)
(smt.stats   26   3292  65616 100360  2930/2674/173    3265/142    24  122   20.63)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&68719476736
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1 := 2097152 >>l 29
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&68719476736
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1 := 6275072 >>l 29
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&68719476736
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 1125899906842623 := 32768 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&68719476736
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1 := 4194304 >>l 29
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 2097152&68719476736
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 68719476737 := 68719476737 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 2097151&68719476736
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 68719476735 := 68719476735 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 1 := 1&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&68719476736
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 32768 := 32768 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 2 := 4294967295&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 2 := 4294967295&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 4 := 4294967295&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 8 := 8&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 16 := 16&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 32 := 32&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 64 := 64&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 128 := 128&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 256 := 256&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 512 := 512&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 1024 := 1024&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 2048 := 2048&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 4096 := 4096&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 8192 := 8192&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 1024 := 1024&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 2048 := 2048&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 4096 := 4096&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 8192 := 8192&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 16384 := 16384&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 32768 := 32768&68719476736
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 65536 := 65536&68719476736
(smt.stats   27   3469  66689 102333  3208/2693/173    3555/144    24  122   21.51)
(smt.stats   28   3570  67988 106413  3212/2959/268    3808/148    25  141   21.41)
(smt.stats   29   3681  69942 112459  3250/2964/269    4062/150    25  141   21.41)
(smt.stats   30   3803  72118 120873  3283/3021/278    4272/498    26  170   21.52)
(smt.stats   31   3937  74483 132765  3350/3098/281    4441/526    27  184   21.52)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4084  77845 145541  3355/3101/281    4696/526    27  184   21.52)
(smt.stats   33   4245  81032 154862  3383/3119/282    4865/628    28  188   21.62)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 46 := 46&281474976710656
ramon: poll                 wall=2.000s usage=1.995s mem=22836KiB load=1.00 rootload=0.99
(smt.stats   34   4422  85457 170421  3495/3238/289    5204/678    29  190   21.62)
(smt.stats   35   4616  88242 180883  3516/3253/289    5651/678    29  190   21.72)
(smt.stats   36   4717  91179 196154  3524/3268/289    5763/822    30  192   21.82)
(smt.stats   37   4828  93837 210038  3528/3273/289    5883/822    30  192   21.82)
(smt.stats   38   4950  98514 227399  3528/3273/289    6123/822    30  192   21.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 325)
(smt.stats   39   5084 101748 240685  3538/3281/289    5984/822    30  192   21.82)
(smt.stats   40   5231 107615 259260  3548/3289/289    6160/822    30  192   21.82)
(smt.stats   41   5392 114159 288475  3548/3289/289    6343/822    30  192   21.82)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   42   5569 118990 302022  3552/3293/290    6664/1070    31  198   21.92)
(smt.stats   43   5763 122808 313412  3558/3296/291    6870/1070    31  198   21.92)
(smt.stats   44   5976 127854 333910  3565/3305/294    7075/1107    33  208   21.92)
(smt.stats   45   6077 128459 338727  3567/3307/294    7177/1107    33  208   21.92)
(smt.stats   46   6188 129712 342667  3567/3307/294    7297/1107    33  208   22.03)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 16384 := 16385&16384
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 2251799813701633 := 2305843009482129408 >>l 51
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 16384 := 16385&16384
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 2251799813701633 := 4611686018158952448 >>l 51
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 16384 := 16385&16384
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 2251799813701633 := 2305843009482129408 >>l 51
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 281474976710656 := 281474976710657&281474976710656
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 3659174697238529 := 1125968626319360 >>l 17
(smt.stats   47   6310 133872 351012  3617/3320/294    7419/1108    33  208   22.12)
ramon: poll                 wall=3.000s usage=2.994s mem=23428KiB load=1.00 rootload=1.00
(smt.stats   48   6444 134618 351802  3779/3385/304    7558/1117    34  210   22.22)
(smt.stats   49   6591 136977 359609  3995/3724/304    7817/1117    34  210   22.22)
(smt.stats   50   6752 141000 365334  4108/3742/304    8138/1127    34  210   22.32)
(smt.stats   51   6929 143406 377623  4222/3927/304    8417/1128    34  210   22.32)
(smt.stats   52   7123 148445 389141  4228/3963/304    8691/1298    35  210   22.32)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 64 := 35184372088897&64
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1212629384041594945 := 1125968626319360 >>l 59
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 64 := 65&64
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1213720099576348737 := 1125968626319360 >>l 59
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 64 := 65&64
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1213720099576348737 := 1125968626319360 >>l 59
(smt.stats   53   7336 155635 402143  4255/3974/304    8943/1300    35  210   22.47)
(smt.stats   54   7570 158556 410671  4291/4014/309    9234/1355    36  211   22.73)
(smt.stats   55   7671 160374 420641  4312/4043/309    9372/1355    36  211   22.73)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&1048576
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 1 := 5188146770730827776 >>l 45
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 6&1048576
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 6 := 4611686018425307136 >>l 45
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 6&1048576
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 6 := 4611686017890500608 >>l 45
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 4&1048576
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 4 := 2882303762054004736 >>l 45
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 131577 := 281474976710529 >>l 31
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 131072 := 281474976710529 >>l 31
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 131072 := 281474976710529 >>l 31
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 1 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 2 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 131068 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 131064 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 8 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 16 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 32 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 64 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 128 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 256 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 512 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 1024 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 2048 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 4096 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 8192 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 16384 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 32768 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 65536 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 131068 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 1 := 131071&1048576
(smt.stats   56   7782 161911 430036  4426/4133/405    9544/1392    37  211   23.23)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 2 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 1 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 8 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 8 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 8 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 64 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 16 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 32 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 256 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 512 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 512 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 512 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 512 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 256 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 256 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 256 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 128 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 2048 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 4096 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 2048 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 4096 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 2048 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 1024 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 1024 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 1024 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131071&1048576
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 1024 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 2 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 2 := 131071&1048576
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 8194 := 131071&1048576
(smt.stats   57   7904 163890 442350  4560/4202/468    9739/1397    37  211   23.43)
ramon: poll                 wall=4.000s usage=3.993s mem=24740KiB load=1.00 rootload=1.00
(smt.stats   58   8038 166327 448539  4604/4291/473    9923/1397    37  211   23.52)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 526415&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 526415 := 4611686018427518976 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 526415&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 526415 := 4611686018427404288 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 35184372088833&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 35184372088833 := 4611686018427518976 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 140737488355332&0
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 1125899906842623 := 281474976710664 >>l 1
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 140737488355332&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 140737488355332 := 4611686018427518976 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 140737488355332&0
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 140737488355838 := 281474976710664 >>l 1
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 35184372088833&0
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 35184372088833 := 4611686018427518976 >>l 15
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 140737488355332&0
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 140737488355837 := 281474976710664 >>l 1
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 140737488355332&0
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 140737488355837 := 281474976710664 >>l 1
(smt.stats   59   8185 170106 459607  4617/4334/486   10158/1513    38  253   23.73)
(smt.stats   60   8346 174329 479811  4745/4436/486   10443/1513    38  253   23.82)
(smt.stats   61   8523 180758 497414  4790/4475/487   10687/1584    39  265   23.82)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 6&4
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 6&4
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 5&4
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 3&4
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 3 := 4611686018425307136 >>l 63
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 2&4
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 2 := 4611686018425405440 >>l 63
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 2&4
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 2 := 4611686018425405440 >>l 63
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&4
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 1 := 562952100937736 >>l 49
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&4
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 1 := 1&4
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&4
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 1 := 562952100872200 >>l 49
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&4
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 1 := 1&4
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&4
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 4 := 562949953421320 >>l 49
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&4
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 0 := 562952100839432 >>l 49
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 1&4
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 0 := 562952100872200 >>l 49
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 562952100839431&140737488355328
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 562952100839431 := 9223407220153253888 >>l 18
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 526415&140737488355328
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 526415 := 2305843009213825024 >>l 18
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 526415&140737488355328
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 526415 := 2305843009213825024 >>l 18
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8717 185541 507633  5007/4529/509   11004/1615    39  265   24.31)
(smt.stats   63   8930 189239 523696  5244/4922/518   11344/1669    40  275   24.43)
ramon: poll                 wall=5.000s usage=4.993s mem=26000KiB load=1.00 rootload=1.00
(smt.stats   64   9164 199379 552136  5376/4946/522   11762/1675    40  275   24.62)
(smt.stats   65   9421 210029 591235  5414/5092/522   12322/1826    41  291   24.81)
(smt.stats   66   9522 213197 599463  5437/5097/522   12562/1827    41  291   24.81)
(smt.stats   67   9633 216784 607406  5459/5118/522   12725/1830    41  291   24.81)
(smt.stats   68   9755 219696 613921  5533/5151/522   12873/1833    41  291   24.91)
(smt.stats   69   9889 223010 628937  5556/5229/522   13099/1833    41  291   24.91)
ramon: poll                 wall=6.000s usage=5.993s mem=26380KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 114)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 131072&16384
lshr: (lshr[64] (* 16384 (bv2int %1)) (mod (+ 14 #105 #318) 64)) 131072 := 4611721202799493120 >>l 51
(smt.stats   70  10036 227729 646188  5586/5240/523   13195/2051    42  293   25.00)
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 2049&16384
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 26 := 281612415664129 >>l 37
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 2056&16384
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 26 := 282574488338433 >>l 37
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 2304&16384
lshr: (lshr[50] (bv2int %1) (mod (bv2int %0) 50)) 26 := 316659348799489 >>l 37
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 16&16384
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 16 := 16&16384
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 16&16384
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 16 := 16&16384
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 16&16384
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 8 := 16&16384
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 24&16384
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 8 := 24&16384
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 24&16384
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 8 := 24&16384
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 24&16384
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 4 := 24&16384
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 24&16384
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 4 := 24&16384
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 20&16384
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 4 := 20&16384
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 0 := 20&16384
band: (band[50] (lshr[50] (bv2int %1) (mod #105 50)) (if (= #497 49) 1125899906842624 (if #499 562949953421312 #595))) 4 := 20&16384
(smt.stats   71  10197 231253 661501  5654/5297/534   13405/2056    42  293   25.00)
(smt.stats   72  10374 237601 680271  5669/5341/535   13632/2107    43  295   25.10)
(smt.stats   73  10568 242710 696928  5687/5357/535   13878/2107    43  295   25.10)
(smt.stats   74  10781 250254 730581  5704/5374/535   14141/2135    44  301   25.10)
(smt.stats   75  11015 256460 760484  5732/5392/536   14449/2135    44  301   25.21)
ramon: poll                 wall=7.000s usage=6.992s mem=26620KiB load=1.00 rootload=1.00
(smt.stats   76  11272 265109 786128  5798/5418/536   14768/2176    45  303   25.21)
(smt.stats   77  11554 270312 810999  5903/5475/536   15084/2177    45  303   25.40)
(smt.stats   78  11655 274076 822431  6001/5583/536   15208/2179    45  303   25.40)
ramon: poll                 wall=8.000s usage=7.992s mem=26904KiB load=1.00 rootload=1.00
(smt.stats   79  11766 276313 832208  6149/5708/536   15316/2180    45  303   25.40)
(smt.stats   80  11888 279161 849980  6307/5834/536   15442/2180    45  303   25.50)
(smt.stats   81  12022 282064 873568  6378/5975/536   15605/2181    45  303   25.50)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   82  12169 283917 897785  6404/6048/536   15774/2181    45  303   25.50)
(smt.stats   83  12330 291002 930559  6419/6078/537   15978/2213    46  304   25.50)
(smt.stats   84  12507 296351 949264  6461/6097/538   16292/2213    46  304   25.61)
ramon: poll                 wall=9.000s usage=8.992s mem=27156KiB load=1.00 rootload=1.00
(smt.stats   85  12701 304223 977360  6508/6136/538   16629/2263    47  309   25.70)
(smt.stats   86  12914 307973 995629  6598/6181/538   16919/2263    47  309   25.70)
(smt.stats   87  13148 312131 1020378  6606/6259/538   17342/2263    47  309   25.80)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   88  13405 316360 1047340  6654/6263/538   17646/2264    47  309   25.80)
ramon: poll                 wall=10.000s usage=9.991s mem=27384KiB load=1.00 rootload=1.00
(smt.stats   89  13687 325774 1080683  6728/6337/538   18117/2266    47  309   25.90)
(smt.stats   90  13997 332911 1115520  6837/6490/540   18527/2477    48  316   26.09)
(smt.stats   91  14098 334806 1128255  6839/6492/541   18722/2477    48  316   26.09)
(smt.stats   92  14209 338264 1144444  6848/6497/541   18849/2478    48  316   26.09)
(smt.stats   93  14331 346474 1162129  6852/6505/541   18985/2478    48  316   26.09)
(smt.stats   94  14465 350368 1183051  6854/6507/541   19132/2516    49  331   26.09)
(smt.stats   95  14612 353180 1198567  6860/6513/541   19356/2516    49  331   26.09)
ramon: poll                 wall=11.000s usage=10.991s mem=27620KiB load=1.00 rootload=1.00
(smt.stats   96  14773 356559 1225439  6907/6513/541   19589/2518    49  331   26.18)
(smt.stats   97  14950 361853 1251533  7042/6571/541   19890/2519    49  331   26.28)
(smt.delete-inactive-clauses  :num-deleted-clauses 56)
(smt.stats   98  15144 365402 1267245  7081/6714/541   20118/2520    49  331   26.28)
ramon: poll                 wall=12.004s usage=11.995s mem=27912KiB load=1.00 rootload=1.00
(smt.stats   99  15357 372673 1293907  7333/6782/542   20523/2644    50  331   26.28)
(smt.stats  100  15591 379541 1321015  7482/6994/542   20854/2645    50  331   26.47)
ramon: poll                 wall=13.000s usage=12.990s mem=28048KiB load=1.00 rootload=1.00
(smt.stats  101  15848 385847 1360579  7557/7170/542   21164/2645    50  331   26.47)
(smt.stats  102  16130 395877 1387662  7637/7219/542   21681/2648    50  331   26.56)
(smt.stats  103  16440 408737 1440968  7842/7380/543   22266/2784    51  335   26.66)
ramon: poll                 wall=14.000s usage=13.990s mem=28152KiB load=1.00 rootload=1.00
(smt.stats  104  16780 421375 1485915  8021/7633/545   22782/2887    52  335   26.76)
(smt.stats  105  16881 422947 1492910  8043/7688/545   22904/2887    52  335   26.76)
(smt.stats  106  16992 425782 1511853  8051/7704/546   23088/2887    52  335   26.76)
(smt.stats  107  17114 428227 1527019  8060/7712/546   23326/2887    52  335   26.76)
ramon: poll                 wall=15.000s usage=14.990s mem=28364KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  108  17248 431399 1547723  8070/7721/547   23536/2970    53  347   26.76)
(smt.stats  109  17395 435022 1566124  8085/7730/547   23744/2970    53  347   26.88)
(smt.stats  110  17556 440354 1585444  8143/7738/547   24017/2973    53  347   26.98)
(smt.stats  111  17733 446287 1614762  8306/7806/547   24269/3029    54  356   27.08)
ramon: poll                 wall=16.000s usage=15.989s mem=29284KiB load=1.00 rootload=1.00
(smt.stats  112  17927 452283 1646163  8513/7985/547   24623/3032    54  356   27.76)
(smt.stats  113  18140 459819 1669761  8548/8194/548   24903/3148    55  358   27.76)
(smt.stats  114  18374 467458 1714494  8586/8207/548   25340/3148    55  358   27.86)
ramon: poll                 wall=17.000s usage=16.989s mem=29504KiB load=1.00 rootload=1.00
(smt.stats  115  18631 475337 1760189  8659/8262/550   25865/3201    56  365   27.86)
(smt.stats  116  18913 483059 1811546  8724/8320/550   26203/3202    56  365   27.86)
ramon: poll                 wall=18.000s usage=17.989s mem=29604KiB load=1.00 rootload=1.00
(smt.stats  117  19223 487917 1833854  8897/8388/550   26559/3204    56  365   27.98)
(smt.stats  118  19563 496182 1879130  9016/8661/551   27165/3407    57  365   28.07)
ramon: poll                 wall=19.000s usage=18.988s mem=30004KiB load=1.00 rootload=1.00
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 52776558159616 := 351843720904703&281474976710656
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 52776558159616 := 351843720904703&281474976710656
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 52776558159360 := 351843720904703&281474976710656
band: (band[50] (lshr[64] (* 16384 #104) (mod #319 64)) (if (= #618 63) 36893488147419103232 (if #620 18446744073709551616 #744))) 52776558159360 := 351843720904703&281474976710656
(smt.stats  119  19936 508864 1953632  9527/8688/551   28104/3413    57  365   28.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 662)
(smt.stats  120  20037 510999 1962527  9534/9183/561   27600/3497    58  367   28.37)
(smt.stats  121  20148 513378 1979140  9535/9188/561   27854/3497    58  367   28.37)
(smt.stats  122  20270 516134 1997855  9574/9223/561   28124/3497    58  367   28.47)
(smt.stats  123  20404 521040 2025085  9578/9227/561   28312/3497    58  367   28.47)
(smt.stats  124  20551 523537 2047262  9606/9251/561   28609/3600    59  367   28.56)
(smt.stats  125  20712 528065 2068487  9614/9259/562   28884/3600    59  367   28.56)
(smt.stats  126  20889 532712 2085833  9637/9266/562   29065/3600    59  367   28.56)
ramon: poll                 wall=20.000s usage=19.988s mem=30232KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:27:47 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.995s
ramon: group.utime          19.979s
ramon: group.stime          0.016s
ramon: group.mempeak        30492KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
