ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:04:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27402 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/n0KyNuhIJs6K.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             920696
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710655
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710655
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421310 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 1407374883553282 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 1688849860263934 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421310 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421310 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 1 := 1&2
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&281474976710654
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421310 := 96 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 1 := 1&2
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 384 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 288 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 192 << 47
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 1&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 480 << 47
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   71.9424     10000        49          0            1        2)
(smt.stats    0    101   1199    492  1172/1051/117      88/18     7   20   51.85)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710670 := 32 << 31
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&16
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710672 := 32 << 31
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&14
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421326 := 32 << 31
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421314 := 32 << 31
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&68719476736
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 281474976710415 := 16 << 32
(smt.stats    1    202   2320   1272  1418/1250/118     193/20     8   21   51.95)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421318 := 8 << 43
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 562949953421318 := 8 << 43
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 844424930131974 := 8 << 43
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710663 := 2 << 46
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710663 := 4 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&7
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710663 := 6 << 44
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710662 := 4 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710660 := 4 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710660 := 4 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710656 := 2 << 46
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 281474976710656 := 2 << 46
(smt.stats    2    313   3832   2787  1513/1312/128     313/24     9   23   52.24)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 4503599627370502 := 6 << 44
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&6
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 47 #1040 #1044) 64)) 4503599627370502 := 6 << 44
(sat.ddfw       1      1   37.4569     20001        98          1            1        3)
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&105553116266496
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 3 := 3 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&105553116266496
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 3 := 3 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&105553116266496
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 2 := 3 << 45
band: (band[48] (if (or #409 #412 #415 #418 #421 #424 #427 #430 #433 #436 #439 #442 #445 #448 #451 #454 ...) 0 (if #406 1 #850)) (shl[64] (* 2 #101) (mod #1048 64))) 0 := 0&105553116266496
shl: (shl[48] (bv2int %0) (+ 48 (* 281474976710655 #103))) 1 := 3 << 45
(smt.stats    3    414   5147   4397  1592/1412/159     418/30    11   29   52.34)
(sat.ddfw       1      1   41.3223     40001       196          2            1        5)
(smt.stats    4    525   6342   6090  1721/1483/173     513/54    12   52   52.63)
(sat.ddfw       1      1   39.1645     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.896s mem=54804KiB load=0.90 rootload=0.88
(sat.ddfw       1      1   34.8736    110001       539          4            1       12)
(sat.ddfw       1      1   29.4458    160000       784          5            1       17)
ramon: poll                 wall=2.003s usage=1.852s mem=54932KiB load=0.95 rootload=0.96
(smt.stats    5    647   8262   7892  1886/1600/175     621/57    14   78   52.82)
(sat.ddfw       1      1   25.1366    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.716s mem=55068KiB load=0.87 rootload=0.86
(sat.ddfw       1      1   21.7391    290001      1421          7            1       30)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   8871   8720  2211/1771/180     726/66    15   82   53.01)
ramon: poll                 wall=4.000s usage=3.652s mem=55332KiB load=0.94 rootload=0.94
(sat.ddfw       1      1    19.975    370001      1813          8            1       38)
(smt.stats    7    859   9994  10511  2299/2040/180     856/68    15   82   53.01)
ramon: poll                 wall=5.000s usage=4.572s mem=55684KiB load=0.92 rootload=0.92
(sat.ddfw       1      1   18.2778    460001      2254          9            1       47)
(smt.stats    8    981  12039  13919  2449/2164/181     984/87    16   86   53.10)
ramon: poll                 wall=6.000s usage=5.563s mem=55568KiB load=0.99 rootload=0.99
(sat.ddfw       1      1   17.0039    560001      2745         10            1       57)
(smt.stats    9   1115  13381  16429  2619/2278/190    1136/100    17   86   53.30)
ramon: poll                 wall=7.000s usage=6.499s mem=55632KiB load=0.94 rootload=0.94
(sat.ddfw       1      1   15.7616    670001      3284         11            1       68)
ramon: poll                 wall=8.000s usage=7.444s mem=55500KiB load=0.94 rootload=0.94
(smt.stats   10   1216  14498  18295  2776/2442/190    1227/114    18  100   53.30)
(sat.ddfw       1      1   14.6681    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.427s mem=55760KiB load=0.98 rootload=0.98
(smt.stats   11   1327  15869  19787  2918/2619/190    1367/119    18  100   53.39)
(sat.ddfw       1      1   13.7931    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=9.410s mem=55808KiB load=0.98 rootload=0.99
(sat.ddfw       1      1   13.0039   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.346s mem=55916KiB load=0.94 rootload=0.93
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  18052  22668  3085/2787/190    1513/127    18  100   53.49)
(smt.stats   13   1583  19238  25512  3203/3015/190    1665/127    18  100   53.49)
ramon: poll                 wall=12.000s usage=11.334s mem=55800KiB load=0.99 rootload=0.99
(smt.stats   14   1730  22145  29857  3292/3032/190    1841/128    18  100   53.58)
(sat.ddfw       1      1   12.3102   1210001      5931         15            1      123)
ramon: poll                 wall=13.007s usage=12.426s mem=55852KiB load=1.08 rootload=1.08
(smt.stats   15   1831  23007  31673  3554/3112/190    1943/131    18  100   53.58)
(sat.ddfw       1      1   11.8116   1370001      6715         16            1      139)
(smt.stats   16   1942  24399  37647  3595/3411/191    2063/186    19  100   53.58)
(smt.stats   17   2064  26101  42140  3630/3426/191    2251/189    19  100   53.68)
ramon: poll                 wall=14.003s usage=13.494s mem=56160KiB load=1.07 rootload=1.07
ramon: poll                 wall=15.003s usage=14.436s mem=56040KiB load=0.94 rootload=0.94
(smt.stats   18   2198  28360  46111  3716/3469/191    2507/203    19  100   53.77)
(sat.ddfw       1      1   11.2071   1540001      7549         17            1      156)
(smt.stats   19   2345  31449  52332  3771/3567/191    2694/206    19  100   53.77)
ramon: poll                 wall=16.000s usage=15.426s mem=56308KiB load=0.99 rootload=0.99
(smt.stats   20   2506  35020  57501  3883/3637/192    2890/289    20  101   53.87)
(smt.stats   21   2607  37083  59782  3920/3727/192    3023/291    20  101   53.96)
(sat.ddfw       1      1   10.6686   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=16.489s mem=56120KiB load=1.06 rootload=1.07
(smt.stats   22   2718  39059  62707  4117/3756/192    3186/302    20  101   54.07)
ramon: poll                 wall=18.000s usage=17.461s mem=56520KiB load=0.97 rootload=0.97
(smt.stats   23   2840  41003  65575  4271/4032/192    3372/309    20  101   54.16)
(smt.stats   24   2974  43186  71846  4410/4222/193    3582/399    21  104   54.16)
(sat.ddfw       1      1   10.1735   1910001      9362         19            1      193)
ramon: poll                 wall=19.000s usage=18.463s mem=56580KiB load=1.00 rootload=1.00
(smt.stats   25   3121  45457  75533  4490/4253/193    3746/402    21  104   54.26)
ramon: poll                 wall=20.000s usage=19.517s mem=56704KiB load=1.05 rootload=1.05
(smt.stats   26   3282  48517  83530  4569/4328/193    3933/406    21  104   54.26)
ramon: end                  Fri Nov  1 23:05:02 2024
ramon: root.execname        z3
ramon: root.utime           19.620s
ramon: root.stime           0.000s
ramon: group.total          19.631s
ramon: group.utime          19.623s
ramon: group.stime          0.008s
ramon: group.mempeak        56960KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.116s
ramon: loadavg              0.98
