ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 15:57:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40674 MiB
ramon: sys.mem.avail        61380 MiB
ramon: sys.nprocs           1329
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ScfvCn7xNwAg.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3853879
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   210/210     0/0  72       0    18.51   0.00)
(sat.stats    101    569    0   210/210   101/27  72       0    18.84   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 345 :time 0.00)
(sat.stats    101    569    0   210/210   101/27  72       0    18.84   0.00)
(sat.stats    101    569    0   210/210   101/27  72       0    18.84   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 375618.84 :time 0.00)
(sat.stats    101    569    0   210/210    71/27  72       0    18.84   0.01)
(sat.stats    104    589    1   210/210    74/30  72       0    18.84   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    170   1740    2   210/210   140/79  72       0    18.93   0.01)
(sat.stats    173   1768    3   210/210   143/79  72       0    18.93   0.01)
(sat.stats    176   1794    4   210/210   146/79  72       0    18.93   0.01)
(sat.stats    179   1822    5   210/210   149/79  72       0    18.93   0.01)
(sat.stats    182   1872    6   210/210   152/79  72       0    18.93   0.01)
(sat.stats    185   1912    7   210/210   155/79  72       0    18.93   0.01)
(sat.stats    188   1977    8   210/210   158/81  72       0    18.93   0.01)
(sat.stats    191   2042    9   210/210   161/81  72       0    18.93   0.01)
(sat.stats    194   2109   10   210/210   164/82  72       0    18.93   0.01)
(sat.stats    197   2149   11   210/210   167/85  72       0    18.93   0.01)
(sat.stats    200   2198   12   210/210   170/88  72       0    18.93   0.01)
(sat.stats    209   2470   15   210/210   179/96  72       0    18.93   0.01)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 1755 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    339   4918   17   253/253   307/147  80       0    19.62   0.08)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2917 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3272 :time 0.00)
ramon: poll                 wall=1.002s usage=0.997s mem=21704KiB load=1.00 rootload=0.99
(sat.stats    787   8142   37  3276/3276   813/181  82       0    20.96   1.97)
(sat.stats    791   8205   38  3821/3821   820/181  82       0    20.96   1.98)
ramon: poll                 wall=2.000s usage=1.995s mem=22084KiB load=1.00 rootload=1.00
(sat.stats   1200  12490   98 13313/13313  1372/224  82       0    22.10   2.78)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 9073 :time 0.00)
ramon: poll                 wall=3.002s usage=2.997s mem=23740KiB load=1.00 rootload=1.00
lshr: (lshr[39] (bv2int %1) (mod (bv2int %0) 39)) 0 := 0 >>l 30
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 0&549755813376
lshr: (lshr[64] (* 33554432 (bv2int %1)) (mod (+ 25 #67 #266) 64)) 18437851223664099329 := 0 >>l 55
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 10528 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 11651 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 12455 :time 0.00)
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 1 := 1&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 2 := 2&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 4 := 4&549755813376
(sat.stats   1598  22236  164 18369/18368  1878/380 100       0    22.93   3.18)
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 8 := 8&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 16 := 16&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 32 := 32&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 64 := 64&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 128 := 128&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 256 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 256&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 1 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 256&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 224 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 256&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 130 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 256&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 256 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 256&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 64 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 256&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 128 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 256&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 12 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 256&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 8 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 256&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 16 := 256&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 257&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 1 := 257&549755813376
 (sat-cleaner :elim-literals 21 :elim-clauses 0 :cost 14662 :time 0.00)
 (sat-cleaner :elim-literals 20 :elim-clauses 0 :cost 16014 :time 0.00)
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 399&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 14 := 399&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 399&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 12 := 399&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 399&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 8 := 399&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 403&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 16 := 403&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 403&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 128 := 403&549755813376
band: (band[39] (lshr[39] (bv2int %1) (mod #67 39)) (if (= #470 38) 75557863725639445512192 (if #472 37778931862819722756096 #546))) 0 := 431&549755813376
band: (band[39] (lshr[64] (* 33554432 #83) (mod #267 64)) (if (= #569 63) 5070602400894470861913103269888 (if #571 2535301200447235430956551634944 #695))) 32 := 431&549755813376
(sat.stats   2396  35727  376 42081/42080  2900/607 216       0    30.04   3.85)
ramon: poll                 wall=4.000s usage=3.995s mem=33380KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.994s mem=50512KiB load=1.00 rootload=0.99
ramon: poll                 wall=6.000s usage=5.994s mem=56380KiB load=1.00 rootload=0.99
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   3596  40377  693 95781/95780  4100/607 216       0    56.39   6.17)
ramon: poll                 wall=7.000s usage=6.993s mem=60364KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.993s mem=63844KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.993s mem=65716KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.992s mem=67224KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.992s mem=86140KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.002s usage=11.994s mem=88324KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.992s mem=90516KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.992s mem=92184KiB load=1.00 rootload=1.00
(sat.stats   5393  45511 1265 162875/162874  5228/607 216       0    90.96  14.31)
ramon: poll                 wall=15.000s usage=14.991s mem=94468KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.991s mem=95960KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.991s mem=98432KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.991s mem=99308KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.990s mem=98MiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.990s mem=99MiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 15:58:17 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.050s
ramon: group.total          20.003s
ramon: group.utime          19.943s
ramon: group.stime          0.060s
ramon: group.mempeak        99MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.013s
ramon: loadavg              1.00
