ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:04:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27436 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1387
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mdIevfDb63Wv.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             919012
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 17 := 304&37
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 18 := 304&38
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 20 := 304&40
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 304&37
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 37 := 36 << 11
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 304&37
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 37 := 36 << 11
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 37 := 304&37
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 38 := 304&38
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 40 := 304&40
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 48 := 304&48
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 48 := 36 << 11
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 48 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 64 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 128 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 256 := 304&73728
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   114.943     10000        49          0            1        2)
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 256 := 304&307127
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 256 := 304&1073741794
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 256 := 304&256
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 1073742080 := 36 << 11
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 256 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 256 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 256 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 256 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 64 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 7 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 73727 := 18 << 12
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 73729 := 18 << 12
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 1 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 2 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 304 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 288 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 256 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 73728 := 18 << 12
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 256 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 255 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 73216 := 18 << 12
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 1 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 2 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 252 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 252 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 248 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 240 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 224 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 192 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 128 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 64 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 128 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 220 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 216 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 208 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 192 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 192 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 128 := 304&73728
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 136 := 304&73728
(sat.ddfw       1      1   66.6733     20001        98          1            1        3)
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 73727 := 18 << 12
(smt.stats    0    101   2413    918   791/724/213     139/28     9   45   51.95)
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 73727 := 18 << 12
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 196 := 18 << 12
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 304&73728
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 0 := 18 << 12
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 128 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 128 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 128 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 48 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 512 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 1024 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2048 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 1024 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2048 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 512 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 512 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 1024 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2048 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 1024 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2048 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2048 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2048 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 8192 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 12288 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 20480 := 38924&45056
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36864 := 38924&45056
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 45056 := 22 << 18
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36864 := 38924&45056
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 45056 := 22 << 18
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36864 := 38924&45056
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 45056 := 22 << 18
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36864 := 38924&45568
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 45568 := 22 << 18
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36864 := 38924&45311
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36864 := 38924&45057
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 45057 := 22 << 18
(smt.stats    1    202   3923   2488  1295/1163/272     333/54    11   57   52.34)
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36864 := 38924&45311
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36864 := 38924&45057
shl: (shl[32] (* 2 (bv2int %0)) (mod (+ 29 #518 #522) 32)) 45057 := 22 << 18
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 20480 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 16384 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 16384 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32768 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32768 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32768 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32768 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32768 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 8192 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 39 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 38 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 37 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 5460490 := 11 << 19
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 5460490 := 11 << 19
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 5460490 := 11 << 19
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 37 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 0 := 11 << 19
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
shl: (shl[30] (bv2int %0) (+ 30 (* 1073741823 #107))) 0 := 11 << 19
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 37 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 36 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 4 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 32 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 1 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 512 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 1024 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2048 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2048 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2048 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 2 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 4 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 4 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 6 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 6 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 6 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 6 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 6 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 6 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 6 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 16 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 16 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 32 := 38924&5767168
(sat.ddfw       1      1   64.7249     40001       196          2            1        5)
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 32 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 64 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 64 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 128 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 128 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 256 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 512 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 1024 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 2048 := 38924&5767168
(smt.stats    2    313   6054   6799  1527/1263/298     529/83    13   69   52.82)
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4096 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 8192 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 16384 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 16384 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 32768 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 16384 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 16384 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 32768 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 32768 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 8192 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 8192 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 5120 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 5120 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 5120 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 6144 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4608 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4608 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4608 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 4096 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 8 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 8 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 8 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 8 := 38924&5767168
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 0 := 38924&5767168
band: (band[30] (if (or #384 #385 #386) 0 (if #387 1 #460)) (shl[30] (bv2int %0) (+ 30 #468))) 1 := 38924&5767168
(smt.stats    3    414   7474  10444  1602/1450/458     764/115    15  102   53.51)
(sat.ddfw       1      1    53.286     70001       343          3            1        8)
(smt.stats    4    526  10549  14353  1886/1686/467    1235/247    17  125   53.80)
(sat.ddfw       1      1   49.0196    110001       539          4            1       12)
ramon: poll                 wall=1.000s usage=0.760s mem=56352KiB load=0.76 rootload=0.73
(smt.stats    5    648  15758  21515  1934/1719/473    1643/298    18  132   54.09)
(sat.ddfw       1      1   44.3254    160000       784          5            1       17)
(sat.ddfw       1      1   40.0274    220001      1078          6            1       23)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    749  17395  23286  2187/1872/475    1594/406    19  337   54.37)
ramon: poll                 wall=2.000s usage=1.758s mem=56964KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   36.0639    290001      1421          7            1       30)
(smt.stats    7    860  20450  26712  2469/2050/475    1842/414    19  337   54.46)
(smt.stats    8    982  24271  32977  2542/2366/487    2263/648    21  437   54.56)
(sat.ddfw       1      1   32.7332    370001      1813          8            1       38)
(smt.stats    9   1116  28833  39023  2746/2375/488    2491/651    21  437   54.77)
ramon: poll                 wall=3.000s usage=2.754s mem=57220KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   29.9401    460001      2254          9            1       47)
(smt.stats   10   1217  31559  45113  3081/2820/489    2798/694    22  440   54.99)
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 7 := 19462&5773327
band: (band[30] (if (or #361 #364 #369) 0 (if #358 1 #504)) (shl[32] (* 2 #105) (mod #526 32))) 7 := 19462&5773327
(smt.stats   11   1328  35136  53832  3152/2908/489    3283/770    23  444   55.09)
(sat.ddfw       1      1   27.5482    560001      2745         10            1       57)
(smt.stats   12   1450  39191  66460  3231/3021/498    3788/977    25  471   55.18)
ramon: poll                 wall=4.000s usage=3.755s mem=57664KiB load=1.00 rootload=1.00
(smt.stats   13   1584  41118  72859  3385/3160/502    4179/982    25  471   55.37)
(sat.ddfw       1      1   25.3106    670001      3284         11            1       68)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   14   1731  45585  88227  3596/3275/505    4599/1088    26  481   55.65)
ramon: poll                 wall=5.000s usage=4.725s mem=58336KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   23.3827    790001      3872         12            1       80)
(smt.stats   15   1832  48740  97932  3753/3401/505    4820/1148    27  483   55.85)
(smt.stats   16   1943  51062 106753  4016/3784/511    5324/1187    28  488   55.94)
ramon: poll                 wall=6.000s usage=5.723s mem=58536KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.8561    920001      4509         13            1       93)
(smt.stats   17   2065  54310 117131  4032/3795/513    5840/1349    29  511   56.04)
(smt.stats   18   2199  58080 123676  4089/3807/513    6309/1354    29  511   56.23)
(sat.ddfw       1      1   20.5339   1060001      5196         14            1      108)
ramon: poll                 wall=7.000s usage=6.722s mem=58692KiB load=1.00 rootload=1.00
(smt.stats   19   2346  62957 147207  4379/4094/515    6781/1612    31  535   56.49)
(sat.ddfw       1      1   19.3349   1210001      5931         15            1      123)
ramon: poll                 wall=8.000s usage=7.718s mem=59064KiB load=1.00 rootload=0.99
(smt.stats   20   2507  65421 153849  4581/4185/515    7093/1613    31  535   56.49)
(smt.stats   21   2608  67846 161149  4656/4363/515    7322/1617    31  535   56.59)
(sat.ddfw       1      1   18.2711   1370001      6715         16            1      139)
ramon: poll                 wall=9.000s usage=8.715s mem=59148KiB load=1.00 rootload=1.00
(smt.stats   22   2719  69855 176080  4777/4454/516    7705/1720    32  537   56.69)
(smt.stats   23   2841  71872 195966  4994/4628/517    8138/1772    33  549   56.88)
(sat.ddfw       1      1   17.3116   1540001      7549         17            1      156)
(smt.stats   24   2975  73316 211963  5173/4927/522    8960/1840    34  558   56.97)
ramon: poll                 wall=10.000s usage=9.714s mem=59460KiB load=1.00 rootload=1.00
(smt.stats   25   3122  77373 230758  5240/4933/523    9545/1848    34  558   57.16)
ramon: poll                 wall=11.000s usage=10.712s mem=59628KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.4399   1720001      8431         18            1      174)
(smt.stats   26   3283  82870 267458  5494/5028/523   10167/2004    35  584   57.26)
(smt.stats   27   3460  88101 306070  5736/5313/524   10941/2154    36  588   57.45)
ramon: poll                 wall=12.000s usage=11.712s mem=60456KiB load=1.00 rootload=1.00
(smt.stats   28   3561  91590 314215  5784/5524/529   11530/2283    37  602   57.64)
(sat.ddfw       1      1   15.6585   1910001      9362         19            1      193)
(smt.stats   29   3672  95575 328998  5865/5586/530   11932/2286    37  602   57.81)
ramon: poll                 wall=13.000s usage=12.709s mem=60524KiB load=1.00 rootload=1.00
(smt.stats   30   3794  99282 343914  5920/5662/530   12226/2509    38  624   57.90)
(sat.ddfw       1      1   14.9477   2110001     10343         20            1      214)
(smt.stats   31   3928 104955 369085  6010/5761/533   12693/2623    39  640   58.09)
ramon: poll                 wall=14.000s usage=13.706s mem=60660KiB load=1.00 rootload=0.99
(smt.stats   32   4075 109549 388267  6095/5814/535   13776/2627    39  640   58.19)
(smt.stats   33   4236 115713 420501  6199/5929/536   14422/2976    40  647   58.28)
(sat.ddfw       1      1   14.3003   2320001     11372         21            1      235)
ramon: poll                 wall=15.000s usage=14.836s mem=60680KiB load=1.13 rootload=1.13
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   34   4413 123811 460586  6424/6178/540   15092/3142    42  693   58.38)
ramon: poll                 wall=16.000s usage=15.871s mem=60928KiB load=1.03 rootload=1.04
(sat.ddfw       1      1    13.702   2540001     12451         22            1      257)
(smt.stats   35   4607 130558 499860  6507/6191/541   16017/3153    42  693   58.57)
(smt.stats   36   4708 135099 521389  6586/6319/543   16449/3278    43  706   58.67)
ramon: poll                 wall=17.000s usage=16.870s mem=61056KiB load=1.00 rootload=1.00
(smt.stats   37   4819 139824 549989  6677/6353/543   16796/3287    43  706   59.02)
(sat.ddfw       1      1   13.1594   2770001     13578         23            1      280)
ramon: poll                 wall=18.000s usage=17.975s mem=61492KiB load=1.11 rootload=1.10
(smt.stats   38   4941 140396 553130  7052/6806/544   17045/3357    44  723   59.12)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5075 145620 592231  7104/6816/545   18247/3360    44  723   59.31)
(sat.ddfw       1      1   12.8096   3010001     14754         24            1      305)
ramon: poll                 wall=19.000s usage=18.975s mem=61772KiB load=1.00 rootload=1.00
(smt.stats   40   5222 150688 630377  7315/6899/547   18975/3579    45  725   59.41)
ramon: poll                 wall=20.000s usage=20.057s mem=61908KiB load=1.08 rootload=1.08
ramon: end                  Fri Nov  1 23:04:29 2024
ramon: root.execname        z3
ramon: root.utime           20.120s
ramon: root.stime           0.020s
ramon: group.total          20.152s
ramon: group.utime          20.124s
ramon: group.stime          0.028s
ramon: group.mempeak        62132KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.096s
ramon: loadavg              1.00
