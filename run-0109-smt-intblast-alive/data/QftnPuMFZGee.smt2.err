ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:16:39 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41637 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QftnPuMFZGee.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2955659
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3034   1217  1120/1012/108      97/66     4   16   19.15)
(smt.stats    1    202   5088   1705  1877/1704/113     195/78     6   19   19.34)
(smt.stats    2    313   6598   2728  2243/2037/118     312/122     7   20   19.44)
(smt.stats    3    414   8897   4114  2380/2110/118     425/124     8   20   19.54)
(smt.stats    4    525  11577   5846  2408/2190/126     523/146    12   34   19.54)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 1&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 1&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4398046511102&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305834213120671742 := 4398046511103 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4398046511102&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305834213120671742 := 4398046511103 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4398046511102&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305834213120671742 := 4398046511103 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4398046511102&1
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 4398046511103 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 1&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511106 := 2199023255552 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 2199023255553 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 1&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2 := 3 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2 := 2199023255553 << 1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 1 := 2&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 1 << 1
(smt.stats    5    647  16242   8414  2465/2242/152     649/153    14   47   19.74)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 1 := 2&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 1 := 2&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 1 := 2&1
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2&1
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 1 := 2&1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  18291   9950  2558/2310/171     782/205    16   53   19.84)
(smt.stats    7    859  18727  10449  2694/2373/171     903/206    16   53   20.03)
(smt.stats    8    981  20321  13206  2814/2572/176    1030/227    17   58   20.03)
(smt.stats    9   1115  22929  16071  2842/2590/176    1184/227    17   58   20.13)
(smt.stats   10   1216  27409  19485  2925/2637/176    1304/254    18   65   20.13)
ramon: poll                 wall=1.000s usage=0.932s mem=21240KiB load=0.93 rootload=0.92
(smt.stats   11   1327  31321  23054  2977/2700/176    1442/254    18   65   20.13)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  34421  29810  3003/2748/176    1590/254    18   65   20.13)
(smt.stats   13   1583  37894  35013  3011/2765/179    1741/294    19   72   20.26)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 66&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511170 := 2199023255552 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 66&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511170 := 2199023255552 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 66&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511170 := 2199023255552 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2199023255551&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2199023255551&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2199023255487&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 6597069766591 := 2199023255552 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 67&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 191&64
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 4398046511295 := 2199023255552 << 7
(smt.stats   14   1730  43067  39737  3054/2806/195    1887/303    20   79   20.26)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 256&64
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 2233382993922 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 128&64
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 2199023255553 << 7
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2216338399232&64
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 0 := 2216338399296 << 7
(smt.stats   15   1831  45473  42185  3098/2806/195    1999/306    20   79   20.35)
(smt.stats   16   1942  48081  46791  3125/2862/201    2120/309    21   80   20.35)
(smt.stats   17   2064  50855  51042  3163/2904/208    2251/321    22   82   20.45)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2267742732289&32768
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2267742732289 := 2267742732290 << 16
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2302102470719&32768
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2302102470719 := 2302102470721 << 16
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2302102470719&32768
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2302102470719 := 2302102470721 << 16
(smt.stats   18   2198  55048  55444  3185/2909/209    2371/352    23  110   20.74)
ramon: poll                 wall=2.000s usage=1.930s mem=22392KiB load=1.00 rootload=1.00
(smt.stats   19   2345  60319  63939  3392/3015/214    2550/353    24  111   21.03)
ramon: poll                 wall=3.000s usage=2.930s mem=22400KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.927s mem=22400KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.927s mem=22400KiB load=1.00 rootload=1.00
(smt.stats   20   2506  62858  70923  3564/3218/214    2779/358    25  111   21.13)
(smt.stats   21   2607  64629  75283  3591/3312/214    2926/358    25  111   21.13)
(smt.stats   22   2718  66644  80418  3610/3353/214    3077/358    25  111   21.13)
(smt.stats   23   2840  70179  89072  3621/3358/214    3246/358    25  111   21.13)
(smt.stats   24   2974  72269  93307  3624/3367/214    3422/358    25  111   21.13)
(smt.stats   25   3121  76296 100678  3676/3369/215    3588/418    26  114   21.22)
ramon: poll                 wall=6.000s usage=5.925s mem=22452KiB load=1.00 rootload=1.00
(smt.stats   26   3282  82006 113044  3683/3426/215    3750/418    26  114   21.22)
(smt.stats   27   3459  85997 122448  3713/3434/215    3960/418    26  114   21.32)
(smt.stats   28   3560  88891 127779  3719/3459/225    4032/529    27  149   21.32)
(smt.stats   29   3671  91603 134868  3766/3471/225    4150/531    27  149   21.32)
(smt.stats   30   3793  93653 142884  3796/3537/225    4291/531    27  149   21.32)
(smt.stats   31   3927  97382 154959  3802/3547/225    4462/531    27  149   21.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 101592 168754  3816/3553/225    4606/532    27  149   21.47)
(smt.stats   33   4235 109854 190599  3819/3564/225    4772/532    27  149   21.47)
(smt.stats   34   4412 115554 207269  3830/3567/225    4989/532    27  149   21.47)
(smt.stats   35   4606 119075 217960  3847/3592/225    5192/532    27  149   21.47)
(smt.stats   36   4707 121248 224469  3857/3602/225    5298/532    27  149   21.47)
ramon: poll                 wall=7.000s usage=6.925s mem=22820KiB load=1.00 rootload=1.00
(smt.stats   37   4818 123875 232221  3876/3607/225    5423/532    27  149   21.56)
(smt.stats   38   4940 126719 242330  3902/3647/226    5555/621    28  154   21.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 132124 259360  3903/3648/226    5692/621    28  154   21.56)
(smt.stats   40   5221 137496 277125  3905/3650/226    5862/621    28  154   21.56)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2216338399104&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305840827505581952 := 1168231104512 << 41
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2216338399104&1099511627776
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305840827505581952 := 2061584302080 << 41
(smt.stats   41   5382 139947 287985  4026/3699/232    6029/635    29  156   21.66)
(smt.stats   42   5559 143197 298315  4092/3793/232    6219/635    29  156   21.66)
(smt.stats   43   5753 146243 316106  4207/3884/233    6452/649    30  164   21.75)
(smt.stats   44   5966 149738 329755  4263/4006/233    6706/649    30  164   21.75)
ramon: poll                 wall=8.000s usage=7.924s mem=23016KiB load=1.00 rootload=1.00
(smt.stats   45   6067 151542 335904  4268/4008/234    6812/690    31  166   21.75)
(smt.stats   46   6178 153536 345675  4277/4012/234    6926/690    31  166   21.75)
(smt.stats   47   6300 155073 355368  4285/4028/235    7055/699    32  168   21.75)
(smt.stats   48   6434 157775 366855  4290/4033/235    7221/699    32  168   21.85)
(smt.stats   49   6581 159953 375131  4290/4033/235    7371/699    32  168   21.95)
(smt.stats   50   6742 164962 395600  4294/4037/235    7542/699    32  168   21.95)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4043085535948&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305847052299229900 := 2199024304130 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4043085535948&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305847052299229900 := 2199024304130 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 4043085535948&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305847052299229900 := 2199024304130 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2943573908172&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305845952787602124 := 2370822995970 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 2943573908172&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 2305845952787602124 := 2370858123816 << 5
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3298543434784&16
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 2851858552160 := 2851858551777 << 5
(smt.stats   51   6919 168360 405990  4418/4049/235    7736/704    32  168   22.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 170945 416901  4462/4202/247    8051/734    33  170   22.04)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 62 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 2 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 2 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 8 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 8 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 16 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 32 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 64 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 32 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 32 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 32 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 4 := 3664797483264&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 16 := 3665754609664&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 8 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 1 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 2 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 2 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 64 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 4 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 64 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 64 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 62 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 60 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 8 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 16 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 32 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 32 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 24 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 16 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351616&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 8 := 3666828351616&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351616&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 8 := 3666828351616&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 64 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351488&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 4 := 3666828351488&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351616&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 4 := 3666828351616&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351872&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 2 := 3666828351872&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351872&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 2 := 3666828351872&64
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828351616&64
band: (band[42] (shl[42] (bv2int %0) (mod #109 42)) (if (= #589 41) 1 (if #591 2 #671))) 8 := 3666828351616&64
(smt.stats   53   7326 175108 439292  4637/4316/353    8317/755    34  187   22.39)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828352896&4
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 386296874818944 := 3018943902676 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3666828352512&4
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 386296874818560 := 3018943902685 << 3
ramon: poll                 wall=9.000s usage=8.911s mem=23940KiB load=0.99 rootload=0.98
(smt.stats   54   7560 181092 458093  4754/4396/363    8686/757    34  187   22.68)
(smt.stats   55   7661 186431 474155  4762/4479/370    8828/795    35  217   22.68)
(smt.stats   56   7772 189347 483106  4861/4506/370    9031/800    35  217   22.88)
(smt.stats   57   7894 192414 499328  4905/4597/371    9285/815    36  221   22.88)
(smt.stats   58   8028 194833 512563  4915/4621/371    9513/815    36  221   22.97)
(smt.stats   59   8175 200329 535789  4965/4632/371    9905/817    36  221   23.29)
(smt.stats   60   8336 202878 557260  5059/4689/371   10146/820    36  221   23.39)
ramon: poll                 wall=10.000s usage=9.911s mem=24776KiB load=1.00 rootload=1.00
(smt.stats   61   8513 205804 576091  5100/4802/375   10616/918    37  223   23.48)
(smt.stats   62   8707 211820 603438  5132/4825/375   10870/919    37  223   23.58)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 1583769222016&1099511627776
(smt.stats   63   8920 214529 616179  5338/4843/375   11329/977    38  235   23.67)
(smt.stats   64   9154 219931 637088  5471/5052/380   11841/980    38  235   23.97)
ramon: poll                 wall=11.000s usage=10.911s mem=25540KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9411 224077 670262  5558/5259/381   12538/1058    39  236   24.07)
(smt.stats   66   9512 226620 682670  5575/5265/381   12850/1058    39  236   24.07)
(smt.stats   67   9623 228941 701009  5587/5291/382   13084/1344    40  241   24.36)
(smt.stats   68   9745 231075 717975  5604/5296/382   13266/1345    40  241   24.36)
ramon: poll                 wall=12.000s usage=11.909s mem=25860KiB load=1.00 rootload=1.00
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 3667096764672&16
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 3667096763650 := 3000814796808 << 5
(smt.stats   69   9879 233157 736105  5777/5312/382   13600/1346    40  241   24.55)
(smt.delete-inactive-clauses  :num-deleted-clauses 134)
(smt.stats   70  10026 236288 750627  5960/5624/389   14094/1546    41  248   24.74)
(smt.stats   71  10187 241721 774125  5970/5632/391   14395/1546    41  248   24.84)
(smt.stats   72  10364 246648 804806  5976/5638/392   14721/1546    41  248   24.84)
ramon: poll                 wall=13.000s usage=12.908s mem=26304KiB load=1.00 rootload=1.00
(smt.stats   73  10558 253101 836800  6001/5663/393   15050/1614    42  252   24.94)
(smt.stats   74  10771 259792 862035  6226/5874/394   15564/1679    43  263   25.04)
(smt.stats   75  11005 266535 894208  6437/6099/396   16116/1680    43  263   25.23)
ramon: poll                 wall=14.000s usage=13.908s mem=26924KiB load=1.00 rootload=1.00
(smt.stats   76  11262 270562 931280  6449/6111/404   16641/1729    44  279   25.32)
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 0&4
shl: (shl[64] (bv2int %0) (mod (+ #109 #331) 64)) 229806726298206208 := 2832631595979 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 0&4
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 1 := 549755813888 << 3
band: (band[42] (shl[64] (bv2int %0) (mod #332 64)) (if (= #690 63) 0 (if #692 1 #816))) 0 := 0&4
shl: (shl[42] (bv2int %0) (mod (bv2int %1) 42)) 1 := 549755813888 << 3
(smt.stats   77  11544 273978 949347  6562/6161/404   17137/1751    45  295   25.42)
(smt.stats   78  11645 275370 955835  6596/6236/409   17263/1751    45  295   25.42)
(smt.stats   79  11756 277481 976545  6609/6244/409   17521/1751    45  295   25.51)
(smt.stats   80  11878 279726 986646  6626/6262/409   17793/1813    46  296   25.61)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   81  12012 282252 1004848  6648/6282/413   18198/1813    46  296   25.61)
ramon: poll                 wall=15.000s usage=14.908s mem=27264KiB load=1.00 rootload=1.00
(smt.stats   82  12159 286633 1015989  6734/6287/413   18725/1815    46  296   26.01)
(smt.stats   83  12320 289111 1031629  6800/6416/413   19006/1889    47  313   26.01)
ramon: poll                 wall=16.000s usage=15.907s mem=27564KiB load=1.00 rootload=1.00
(smt.stats   84  12497 293748 1064281  6875/6511/414   19425/1889    47  313   26.11)
(smt.stats   85  12691 300747 1089561  6910/6517/414   19859/1918    48  318   26.30)
ramon: poll                 wall=17.000s usage=16.907s mem=27752KiB load=1.00 rootload=1.00
(smt.stats   86  12904 311589 1135577  6916/6549/414   20153/1918    48  318   26.30)
(smt.stats   87  13138 320797 1172809  6949/6560/415   20594/1940    49  331   26.20)
(smt.stats   88  13395 329126 1233114  7009/6623/415   21071/1941    49  331   26.30)
ramon: poll                 wall=18.003s usage=17.908s mem=27972KiB load=1.00 rootload=1.00
(smt.stats   89  13677 334053 1261081  7022/6654/416   21556/1998    50  339   26.39)
(smt.stats   90  13987 339569 1303085  7064/6700/420   22543/1999    50  339   26.49)
(smt.stats   91  14088 341248 1315166  7064/6700/420   22643/2111    51  377   26.58)
(smt.stats   92  14199 343645 1332562  7067/6703/420   22920/2111    51  377   26.58)
ramon: poll                 wall=19.000s usage=18.905s mem=28156KiB load=1.00 rootload=0.99
(smt.stats   93  14321 347177 1351755  7158/6708/420   23088/2117    51  377   26.68)
(smt.stats   94  14455 348757 1364282  7271/6823/420   23372/2120    51  377   26.68)
ramon: poll                 wall=20.000s usage=19.905s mem=28292KiB load=1.00 rootload=1.00
(smt.stats   95  14602 351643 1386777  7283/6919/420   23721/2120    51  377   26.68)
ramon: end                  Tue Dec 24 15:16:59 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.978s
ramon: group.utime          19.962s
ramon: group.stime          0.016s
ramon: group.mempeak        28548KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.073s
ramon: loadavg              1.00
