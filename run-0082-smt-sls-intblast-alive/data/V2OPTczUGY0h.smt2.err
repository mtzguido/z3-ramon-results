ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:36:01 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28050 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/V2OPTczUGY0h.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             825506
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 21 := 687011649&21
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023255552 := 20 << 30
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011648 := 687011649&21474836480
(smt.stats    0    101   2834    858  1097/981/98      94/5     4   15   52.05)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011648 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011648 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011584 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011328 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687010816 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011649 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 687011648 := 687011649&21474836480
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&21474836480
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1 := 10 << 31
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&21474836480
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1 := 10 << 31
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 687011649&21474836480
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1 := 10 << 31
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   71.9424     10000        49          0            1        2)
(smt.stats    1    202   4150   2330  1919/1724/115     183/18    10   22   52.25)
(smt.stats    2    313   6824   5796  1976/1774/116     299/20    11   23   52.25)
(sat.ddfw       1      1   39.2196     20001        98          1            1        3)
(smt.stats    3    414   7562   7165  2085/1783/118     402/20    12   26   52.36)
(smt.stats    4    525   8709   8738  2130/1926/121     480/24    13   29   52.46)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10482 := 10482&10483
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023266035 := 2559800510688 << 14
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10482 := 10482&17179871402
(sat.ddfw       1      1   44.2478     40001       196          2            1        5)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871402
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871238
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871236
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871238
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&17179871236
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10485
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10485
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10496
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&12288
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10496
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&12288
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&12288
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023271936 := 2559800510606 << 14
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023271936 := 2559800510606 << 14
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10496
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10496
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&12288
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023271936 := 2559800510606 << 14
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&16384
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023271936 := 2559800510606 << 14
(smt.stats    5    647  11372  11303  2210/1996/169     601/30    15   36   52.55)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 32 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 32 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 14 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 12 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 208 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 240 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 6384 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10352 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10352 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 16 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 48 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 112 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 144 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 176 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 432 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 510 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 432 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 496 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 432 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 496 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 752 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1264 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1264 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1264 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2288 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2300 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2296 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2288 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8944 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8956 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8952 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 8944 := 10482&10484
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 10480 := 10482&10484
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2199023266036 := 2542620649770 << 14
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  12711  14045  2395/2056/233     771/43    16   45   53.06)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1281779302400 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1281779302400 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1281779302400 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1281779302400 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1290033692672 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1290033692672 << 15
(sat.ddfw       1      1   40.8719     70001       343          3            1        8)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1290033692672 << 15
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1290033692671 := 1290033692672 << 15
(smt.stats    7    859  14622  17521  2463/2221/274     992/81    18   76   53.54)
ramon: poll                 wall=1.000s usage=0.852s mem=55904KiB load=0.85 rootload=0.84
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 10482&0
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 1290033692672 << 15
(sat.ddfw       1      1   35.6824    110001       539          4            1       12)
(smt.stats    8    981  15700  19491  2740/2518/289    1250/156    19   81   53.73)
(sat.ddfw       1      1   34.9888    160000       784          5            1       17)
(smt.stats    9   1115  19379  25469  2824/2525/291    1412/260    21  129   53.83)
(smt.stats   10   1216  20876  28461  2897/2660/292    1608/293    22  130   53.93)
(smt.stats   11   1327  22200  31845  3071/2664/292    1735/298    22  130   54.02)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  25800  40698  3095/2858/293    1874/334    23  132   54.02)
ramon: poll                 wall=2.000s usage=1.970s mem=56360KiB load=1.12 rootload=1.12
(sat.ddfw       1      1   30.9124    220001      1078          6            1       23)
(smt.stats   13   1583  29596  49638  3096/2859/294    2127/334    23  132   54.12)
(smt.stats   14   1730  35657  60419  3205/2954/295    2314/394    25  147   54.12)
(smt.stats   15   1831  39106  69459  3243/2994/295    2459/394    25  147   54.23)
(smt.stats   16   1942  40735  75928  3273/3018/296    2649/403    26  152   54.23)
(smt.stats   17   2064  44949  89126  3288/3028/296    2811/403    26  152   54.35)
(sat.ddfw       1      1   26.7686    290001      1421          7            1       30)
(smt.stats   18   2198  49235  99329  3390/3077/296    3031/404    26  152   54.54)
ramon: poll                 wall=3.000s usage=2.973s mem=57180KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   23.6267    370001      1813          8            1       38)
(smt.stats   19   2345  53181 108257  3487/3151/296    3244/404    26  152   54.75)
ramon: poll                 wall=4.000s usage=3.971s mem=56952KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.1964    460001      2254          9            1       47)
(smt.stats   20   2506  54279 110805  3768/3295/297    3419/438    27  156   54.84)
(smt.stats   21   2607  55315 114197  3813/3536/297    3560/438    27  156   54.84)
(smt.stats   22   2718  56862 118282  3874/3571/297    3759/438    27  156   54.98)
ramon: poll                 wall=5.000s usage=4.969s mem=57348KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.2567    560001      2745         10            1       57)
(smt.stats   23   2840  59923 124926  4076/3649/297    3910/440    27  156   55.07)
(smt.stats   24   2974  61860 130623  4113/3855/297    4075/443    27  156   55.07)
(smt.stats   25   3121  65011 141241  4163/3874/300    4452/568    28  169   55.19)
ramon: poll                 wall=6.000s usage=5.909s mem=57688KiB load=0.94 rootload=0.94
(smt.stats   26   3282  68372 154813  4379/3936/300    4987/617    29  171   55.29)
(sat.ddfw       1      1   17.1821    670001      3284         11            1       68)
(smt.stats   27   3459  72443 164411  4494/4150/300    5501/620    29  171   55.48)
(smt.stats   28   3560  75309 171056  4509/4253/300    5727/621    29  171   55.48)
(smt.stats   29   3673  79231 185458  4657/4267/300    5973/621    29  171   55.48)
ramon: poll                 wall=7.000s usage=6.880s mem=57956KiB load=0.97 rootload=0.97
(smt.stats   30   3795  81088 192101  4754/4413/300    6133/623    29  171   55.57)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 2&1486189692928
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43080351765956608 := 1357249771518 << 2
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43080351765956608 := 1357249771518 << 2
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43080351765956608 := 1357249771518 << 2
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43082550789212160 := 1357249787508 << 2
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&1486189692928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 43082550789212160 := 1357249787508 << 2
(smt.stats   31   3929  84102 206330  4968/4597/300    6451/629    29  171   55.67)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4076  88576 222660  5036/4725/310    6708/855    30  173   55.80)
(sat.ddfw       1      1   15.9172    790001      3872         12            1       80)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 1&45095821314
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 1 := 1&45095821315
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2244119076867 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097136130
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2244120391682 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097136130
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2244120391682 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132034
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 2244120387586 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097132035
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097136130
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 45097136130 := 1408749274314 << 1
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 1&45097136130
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 45097136130 := 1408749274314 << 1
(smt.stats   33   4237  92373 238030  5170/4907/322    7120/880    31  173   56.04)
ramon: poll                 wall=8.000s usage=7.880s mem=58408KiB load=1.00 rootload=0.99
(smt.stats   34   4414  96031 247791  5221/4923/323    7459/1003    32  180   56.04)
(smt.stats   35   4609  99105 260612  5277/5020/325    7677/1088    33  189   56.13)
(smt.stats   36   4710 100742 268194  5441/5022/325    7825/1088    33  189   56.13)
(smt.stats   37   4821 102927 281129  5597/5195/325    8011/1088    33  189   56.24)
(sat.ddfw       1      1   14.7912    920001      4509         13            1       93)
ramon: poll                 wall=9.000s usage=8.877s mem=58592KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4943 104208 285423  5670/5345/325    8201/1088    33  189   56.34)
(smt.delete-inactive-clauses  :num-deleted-clauses 2)
(smt.stats   39   5077 109114 294362  5716/5442/325    8396/1090    33  189   56.34)
(smt.stats   40   5224 111952 304578  5778/5505/325    8609/1092    33  189   56.34)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180319232
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876082176 := 3161110875816 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180335616
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876098560 := 3161110875816 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180352000
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876114944 := 3161110875816 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180352000
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876114944 := 3161110875898 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 5&1486180352000
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #867 #869) 64)) 16047758876114944 := 3161110875652 << 3
(smt.stats   41   5385 115052 314174  5890/5522/325    8887/1096    33  189   56.43)
(smt.stats   42   5562 118005 324974  5928/5661/330    9246/1196    34  190   56.43)
ramon: poll                 wall=10.000s usage=9.881s mem=58740KiB load=1.00 rootload=1.00
(smt.stats   43   5756 124279 348097  5941/5682/330    9692/1196    34  190   56.54)
(sat.ddfw       1      1   13.8258   1060001      5196         14            1      108)
(smt.stats   44   5969 129393 362723  5983/5723/334   10233/1346    35  190   56.64)
(smt.stats   45   6070 132777 369985  6009/5741/334   10393/1346    35  190   56.64)
(smt.stats   46   6181 136169 380860  6054/5758/334   10623/1521    36  207   56.64)
(smt.stats   47   6303 139795 395374  6107/5797/334   10883/1524    36  207   56.99)
ramon: poll                 wall=11.000s usage=11.018s mem=59064KiB load=1.14 rootload=1.14
(smt.stats   48   6437 143880 416044  6163/5902/336   11221/1578    37  214   56.99)
(smt.stats   49   6584 148784 436778  6180/5917/337   11855/1578    37  214   57.08)
(smt.stats   50   6745 153553 450229  6182/5919/337   12143/1673    38  226   57.18)
(sat.ddfw       1      1   12.9859   1210001      5931         15            1      123)
(smt.stats   51   6922 159661 465740  6196/5927/338   12564/1673    38  226   57.18)
(smt.stats   52   7116 166381 490797  6198/5935/338   13428/1748    39  230   57.29)
ramon: poll                 wall=12.000s usage=12.018s mem=59704KiB load=1.00 rootload=1.00
(smt.stats   53   7329 176750 542296  6203/5940/338   13703/1748    39  230   57.52)
(smt.stats   54   7563 184206 575257  6206/5943/338   14360/1748    39  230   57.52)
(smt.stats   55   7664 186578 584211  6212/5945/338   14520/1748    39  230   57.52)
(smt.stats   56   7775 190075 600238  6221/5954/338   14767/1749    39  230   57.52)
(smt.stats   57   7897 195183 628504  6232/5961/339   15095/1989    40  230   57.52)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1692217118744 := 8589934597 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 8589934597 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #116))) 1279919784234 := 8589934597 << 3
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 1 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 2 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 2 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 1 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 0 := 2&68719476776
band: (band[41] (if (= #120 40) 0 (if #544 1 #655)) (shl[41] (bv2int %0) (+ 41 #658))) 1 := 2&68719476776
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 2&68719476776
ramon: poll                 wall=13.000s usage=13.017s mem=60172KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8031 196855 636866  6351/6019/365   15327/1993    40  230   57.73)
(sat.ddfw       1      1   12.2334   1370001      6715         16            1      139)
(smt.stats   59   8178 197644 643191  6625/6109/365   15543/1994    40  230   58.12)
ramon: poll                 wall=14.000s usage=14.017s mem=60540KiB load=1.00 rootload=1.00
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2 := 2&549890068712
(smt.stats   60   8339 199250 657121  7050/6557/365   16022/1994    40  230   58.21)
(smt.stats   61   8516 203642 673983  7075/6792/365   16487/2100    41  236   58.21)
(sat.ddfw       1      1   11.5646   1540001      7549         17            1      156)
(smt.stats   62   8710 210499 693952  7091/6818/366   16877/2100    41  236   58.67)
ramon: poll                 wall=15.000s usage=15.047s mem=60756KiB load=1.03 rootload=1.03
(smt.stats   63   8923 213880 717371  7103/6826/366   17250/2210    42  240   58.77)
(smt.stats   64   9157 225456 739944  7184/6880/368   18061/2210    42  240   58.96)
ramon: poll                 wall=16.002s usage=16.046s mem=61028KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.9716   1720001      8431         18            1      174)
ramon: poll                 wall=17.002s usage=17.042s mem=61420KiB load=1.00 rootload=1.00
(smt.stats   65   9414 232532 763695  7636/7003/369   19013/2412    43  243   59.24)
(smt.stats   66   9515 235690 777902  7651/7364/370   19334/2602    44  247   59.24)
(smt.stats   67   9626 240443 806440  7727/7365/370   19600/2608    44  247   59.34)
ramon: poll                 wall=18.000s usage=18.040s mem=61600KiB load=1.00 rootload=0.99
(sat.ddfw       1      1    10.423   1910001      9362         19            1      193)
(smt.stats   68   9748 244195 825522  8033/7516/370   20057/2610    44  247   59.34)
(smt.stats   69   9882 247521 847835  8093/7806/371   20513/2769    45  250   59.44)
ramon: poll                 wall=19.000s usage=19.042s mem=61808KiB load=1.00 rootload=1.01
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10029 251501 870276  8100/7809/372   20937/2769    45  250   59.54)
(smt.stats   71  10190 257162 907917  8196/7839/374   21637/2887    46  276   59.64)
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 3072 := 10482&158040064
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2048 := 10482&158040064
band: (band[41] (if (or #670 #671 #672 #673 #674 #675 #676 #677 #678 #679 #680 #681 #682 #683 #684 #685 ...) 0 (if #694 1 #772)) (shl[64] (* 2 #114) (mod #870 64))) 2048 := 10482&158040064
(smt.stats   72  10367 261630 955373  8327/7918/375   22100/2892    46  276   59.64)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   73  10561 267625 1002614  8371/8052/386   23136/2893    46  276   59.85)
ramon: poll                 wall=20.000s usage=20.107s mem=62020KiB load=1.07 rootload=1.06
ramon: end                  Fri Nov  1 22:36:21 2024
ramon: root.execname        z3
ramon: root.utime           20.170s
ramon: root.stime           0.010s
ramon: group.total          20.193s
ramon: group.utime          20.181s
ramon: group.stime          0.012s
ramon: group.mempeak        62276KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.080s
ramon: loadavg              1.01
