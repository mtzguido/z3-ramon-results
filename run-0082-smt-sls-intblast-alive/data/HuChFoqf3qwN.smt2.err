ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:09:10 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28691 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/HuChFoqf3qwN.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             734001
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   7243   1204  2345/2097/80      97/3     2   11   52.73)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1      62.5     10000        49          0            1        2)
(smt.stats    1    202   8777   1736  4109/3697/80     196/6     2   11   52.94)
(smt.stats    2    313  11317   5846  4233/3795/82     307/14     3   13   53.04)
(sat.ddfw       1      1   32.4708     20001        98          1            1        3)
(smt.stats    3    414  13833  10871  4348/3907/82     379/21     4   14   53.20)
(smt.stats    4    525  15077  13307  4853/4387/89     493/72     5   19   53.30)
(sat.ddfw       1      1   37.8788     40001       196          2            1        5)
(smt.stats    5    647  21038  17585  4910/4440/90     593/79     6   22   53.40)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify   :memory)
(smt.stats      :conflicts  :propagations          :lemmas        :deletions    )
(smt.stats    6    748  25107  22190  4926/4458/92     682/75     7   31   53.40)
(smt.stats    7    859  27995  25560  4936/4467/92     794/75     7   31   53.54)
(smt.stats    8    981  30185  28005  4940/4471/95     916/82     8   32   53.54)
(smt.stats    9   1115  32455  32296  4956/4484/95    1052/82     8   32   53.66)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 2 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 4 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 8 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 16 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 2 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 2 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 2 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 2 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 8 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 16 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 8 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 8 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 8 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 4 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 24 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 23 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 6 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 16 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 2 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 22 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 20 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 16 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 16 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 16 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 2 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 2 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 4 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 16 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 16 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 1 := 64&24
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 64&24
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 8 := 64&24
(smt.stats   10   1217  33169  35120  5029/4555/194    1151/99    11   58   53.96)
(sat.ddfw       1      1   34.8028     70001       343          3            1        8)
(smt.stats   11   1328  35113  39343  5040/4564/195    1257/97    12   60   54.07)
ramon: poll                 wall=1.000s usage=0.733s mem=56280KiB load=0.73 rootload=0.72
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1450  38177  45513  5077/4593/197    1377/100    13   61   54.23)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1 := 4&1
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1 := 4&1
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 4&1
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 1 := 4&1
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 4&1
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 1 := 4&1
(smt.stats   13   1584  38614  49148  5088/4601/204    1510/102    14   63   54.23)
(smt.stats   14   1731  40490  54088  5095/4609/205    1679/115    16   74   54.35)
(smt.stats   15   1832  45446  57570  5105/4614/205    1784/116    16   74   54.44)
(smt.stats   16   1943  46994  64991  5144/4650/214    1919/128    18   78   54.59)
(sat.ddfw       1      1   31.9234    110001       539          4            1       12)
(smt.stats   17   2065  50028  69471  5153/4657/215    2049/128    18   78   54.59)
(smt.stats   18   2199  52799  79383  5159/4664/216    2181/148    20  117   54.59)
(smt.stats   19   2346  57006  85292  5163/4668/216    2333/148    20  117   54.71)
(smt.stats   20   2507  61825  93623  5168/4672/216    2551/148    20  117   54.81)
(smt.stats   21   2608  65901  98267  5189/4688/216    2669/148    20  117   54.91)
(smt.stats   22   2719  68667 105216  5189/4690/225    2795/226    21  148   54.91)
(smt.stats   23   2841  72835 114204  5194/4694/225    2938/226    21  148   55.06)
(sat.ddfw       1      1   28.7186    160000       784          5            1       17)
(smt.stats   24   2975  76714 126445  5198/4698/225    3093/226    21  148   55.06)
ramon: poll                 wall=2.000s usage=1.733s mem=57408KiB load=1.00 rootload=1.00
(smt.stats   25   3122  80314 139909  5214/4714/225    3240/226    21  148   55.06)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 4&1
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 1 := 4&1
(smt.stats   26   3283  85207 152748  5216/4716/225    3402/228    21  148   55.06)
(smt.stats   27   3460  88546 161534  5220/4720/226    3586/235    22  153   55.06)
(smt.stats   28   3561  90790 169164  5227/4725/226    3689/235    22  153   55.19)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 16&6
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 1 := 16&6
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 4 := 16&6
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 4 := 16&6
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 16&6
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 4 := 16&6
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 16&6
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 4 := 16&6
(smt.stats   29   3672  92889 174158  5236/4735/227    3822/237    23  156   55.33)
(smt.stats   30   3796  95183 181248  5243/4738/227    3953/237    23  156   55.33)
(sat.ddfw       1      1   25.2105    220001      1078          6            1       23)
(smt.stats   31   3930  97557 188733  5253/4747/227    4084/237    23  156   55.43)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077  99145 197639  5273/4764/229    4240/240    24  161   55.57)
(smt.stats   33   4238 103568 213621  5276/4775/229    4407/244    25  162   55.57)
(smt.stats   34   4415 105100 220854  5347/4777/229    4605/244    25  162   55.68)
ramon: poll                 wall=3.000s usage=2.708s mem=57880KiB load=0.98 rootload=0.98
(smt.stats   35   4609 108265 226880  5411/4908/229    4808/244    25  162   55.68)
(smt.stats   36   4710 110250 233735  5418/4915/229    4969/245    25  162   55.68)
(sat.ddfw       1      1   22.8534    290001      1421          7            1       30)
(smt.stats   37   4821 112942 247837  5433/4932/229    5077/245    25  162   55.82)
(smt.stats   38   4943 115855 257961  5439/4938/230    5242/286    26  162   55.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5077 117616 261424  5496/4944/230    5374/291    26  162   55.92)
(smt.stats   40   5224 119500 266813  5573/5041/230    5527/291    26  162   56.07)
(smt.stats   41   5385 122613 274438  5584/5078/230    5687/291    26  162   56.07)
(smt.stats   42   5562 124508 287238  5594/5093/230    5888/291    26  162   56.07)
(smt.stats   43   5756 126817 299317  5615/5094/230    6084/291    26  162   56.07)
(sat.ddfw       1      1   20.7254    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.707s mem=58500KiB load=1.00 rootload=0.99
(smt.stats   44   5969 130495 318177  5630/5127/230    6376/291    26  162   56.18)
(smt.stats   45   6070 131721 328098  5634/5133/230    6543/291    26  162   56.18)
(smt.stats   46   6181 133935 337595  5662/5136/230    6662/291    26  162   56.18)
(smt.stats   47   6303 138215 346896  5666/5165/230    6790/291    26  162   56.18)
(smt.stats   48   6437 141455 354082  5670/5169/230    6974/291    26  162   56.46)
(smt.stats   49   6584 143495 360653  5672/5171/230    7119/291    26  162   56.46)
(smt.stats   50   6745 146277 368296  5675/5171/230    7280/291    26  162   56.56)
(smt.stats   51   6922 147833 379197  5707/5176/230    7483/291    26  162   56.56)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7116 149080 387397  5712/5211/230    7676/291    26  162   56.56)
(sat.ddfw       1      1   18.9913    460001      2254          9            1       47)
(smt.stats   53   7329 150651 398946  5724/5223/230    7942/291    26  162   56.56)
ramon: poll                 wall=5.000s usage=4.706s mem=58796KiB load=1.00 rootload=1.00
(smt.stats   54   7563 153282 415805  5729/5228/230    8224/291    26  162   56.56)
(smt.stats   55   7664 155133 427210  5732/5231/230    8331/291    26  162   56.73)
(smt.stats   56   7775 158408 447728  5732/5231/230    8443/291    26  162   56.73)
(smt.stats   57   7897 161225 469699  5733/5232/230    8569/291    26  162   57.06)
(smt.stats   58   8031 163913 485931  5740/5239/230    8746/291    26  162   57.17)
(smt.stats   59   8178 168663 508863  5744/5243/230    8899/291    26  162   57.17)
(smt.stats   60   8339 173981 539198  5745/5244/230    9059/291    26  162   57.17)
(sat.ddfw       1      1   17.4795    560001      2745         10            1       57)
(smt.stats   61   8516 180611 571229  5745/5244/230    9249/291    26  162   57.17)
ramon: poll                 wall=6.000s usage=5.835s mem=59544KiB load=1.13 rootload=1.13
(smt.stats   62   8710 186867 606112  5750/5249/230    9441/291    26  162   57.17)
(smt.stats   63   8923 192263 646802  5753/5252/230    9651/291    26  162   57.28)
(smt.stats   64   9157 195450 662730  5760/5258/230    9913/291    26  162   57.28)
(smt.stats   65   9414 199974 688463  5770/5269/230   10180/291    26  162   57.28)
(smt.stats   66   9515 202694 699258  5770/5269/231   10301/428    27  166   57.28)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 32 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 64 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 128 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 256 := 562949953421312&219417807170022
(smt.stats   67   9626 204501 704762  5874/5270/231   10427/428    27  166   57.28)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 128 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 512 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1024 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 2048 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 4096 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 8192 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 16384 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 32768 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 65536 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 131072 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 262144 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 524288 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1048576 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1048576 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 2097152 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 4194304 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 8388608 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 16777216 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 33554432 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 67108864 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 134217728 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 268435456 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 536870912 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1073741824 := 562949953421312&219417807170022
(sat.ddfw       1      1    16.167    670001      3284         11            1       68)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 293601280 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 487587840 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 488636416 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 488636416 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 287309824 := 562949953421312&219417807170022
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 421527552 := 562949953421312&219417807170022
ramon: poll                 wall=7.000s usage=6.890s mem=60192KiB load=1.05 rootload=1.05
(smt.stats   68   9748 205808 709432  6093/5423/341   10686/432    27  166   57.89)
(smt.stats   69   9882 206705 712284  6337/5636/351   11014/492    28  196   58.23)
(smt.delete-inactive-clauses  :num-deleted-clauses 498)
(smt.stats   70  10029 208787 724304  6480/5948/351   10891/493    28  196   58.67)
(smt.stats   71  10190 215240 744190  6513/6008/353   11640/982    29  208   58.77)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 32&12
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 4 := 32&12
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 8 := 32&12
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 32&12
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 8 := 32&12
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   72  10367 220430 765011  6572/6060/356   11999/998    30  213   58.77)
(smt.stats   73  10561 225249 779201  6637/6118/358   12281/998    30  213   58.90)
(smt.stats   74  10774 231808 805047  6644/6124/358   12501/1005    31  224   59.01)
ramon: poll                 wall=8.000s usage=8.013s mem=61196KiB load=1.12 rootload=1.13
(sat.ddfw       1      1   15.0376    790001      3872         12            1       80)
(smt.stats   75  11008 235666 825355  6685/6145/359   13282/1195    32  230   59.01)
(smt.stats   76  11265 245357 857854  6726/6171/359   14283/1198    32  230   59.17)
(smt.stats   77  11547 252693 879786  6749/6217/359   14667/1198    32  230   59.29)
(smt.stats   78  11648 257364 900439  6758/6231/359   14907/1198    32  230   59.29)
(smt.stats   79  11759 262695 931264  6762/6235/359   15144/1198    32  230   59.40)
(smt.stats   80  11881 266860 958504  6779/6250/360   15339/1752    33  230   59.40)
(smt.stats   81  12015 268178 971419  6783/6256/363   15492/1752    33  230   59.40)
ramon: poll                 wall=9.000s usage=9.229s mem=61640KiB load=1.22 rootload=1.21
(smt.stats   82  12162 271668 999608  6785/6258/363   15690/1752    33  230   59.50)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   83  12323 274391 1014574  6788/6261/363   15822/1763    34  256   59.50)
(sat.ddfw       1      1   14.0419    920001      4509         13            1       93)
(smt.stats   84  12500 279116 1045063  6800/6273/364   16562/1763    34  256   59.50)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 16&6
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 4 := 16&6
(smt.stats   85  12694 283704 1084615  6810/6280/364   16784/2091    35  272   59.62)
(smt.stats   86  12907 287173 1105514  6817/6290/364   17017/2091    35  272   59.62)
ramon: poll                 wall=10.000s usage=10.231s mem=61916KiB load=1.00 rootload=1.00
(smt.stats   87  13141 292484 1125260  6822/6295/364   17273/2091    35  272   59.62)
(smt.stats   88  13398 296139 1141796  6872/6296/364   17666/2093    35  272   59.71)
(smt.stats   89  13680 302469 1160987  6921/6373/364   18003/2097    35  272   59.81)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 512 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 512 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 256 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 64 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 128 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 32 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 16 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 16 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 2048 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1024 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1024 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1024 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1024 := 8192&3192
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 1024 := 8192&3192
(sat.ddfw       1      1   13.1455   1060001      5196         14            1      108)
(smt.stats   90  13990 308476 1187142  6992/6405/364   18437/2100    35  272   59.93)
(smt.stats   91  14091 310439 1194887  6999/6472/410   18646/2149    36  281   60.06)
ramon: poll                 wall=11.000s usage=11.215s mem=62388KiB load=0.98 rootload=0.99
(smt.stats   92  14202 313305 1206621  7004/6477/410   18824/2149    36  281   60.60)
(smt.stats   93  14324 315306 1216643  7023/6481/413   19014/2151    36  281   60.70)
(smt.stats   94  14458 317785 1227512  7048/6512/413   19571/2151    36  281   60.70)
(smt.stats   95  14605 318643 1235246  7085/6534/413   19708/2333    37  319   60.84)
(smt.stats   96  14766 321592 1264098  7160/6617/414   20090/2333    37  319   61.66)
(smt.stats   97  14943 325560 1297958  7178/6629/414   20727/2334    37  319   61.77)
ramon: poll                 wall=12.000s usage=12.184s mem=64028KiB load=0.97 rootload=0.97
(smt.delete-inactive-clauses  :num-deleted-clauses 150)
(smt.stats   98  15137 330475 1331423  7192/6645/414   20840/2446    38  320   61.77)
(sat.ddfw       1      1    12.289   1210001      5931         15            1      123)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 1125899906842624&438835614340045
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 32 := 1125899906842624&438835614340045
(smt.stats   99  15350 337436 1385475  7243/6676/416   21237/2483    39  325   61.87)
(smt.stats  100  15584 343928 1416519  7326/6767/427   21743/2486    39  325   61.97)
ramon: poll                 wall=13.000s usage=13.201s mem=64008KiB load=1.02 rootload=1.01
(smt.stats  101  15841 349191 1445317  7390/6788/427   22185/2486    39  325   61.97)
(smt.stats  102  16123 353282 1472687  7421/6868/429   22857/2627    40  332   62.13)
(sat.ddfw       1      1   11.5482   1370001      6715         16            1      139)
ramon: poll                 wall=14.000s usage=14.179s mem=64528KiB load=0.98 rootload=0.98
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  103  16433 361109 1508907  7474/6921/430   23531/2715    41  342   62.25)
(smt.stats  104  16773 370921 1536475  7477/6924/431   24011/2715    41  342   62.36)
(smt.stats  105  16874 374468 1572264  7480/6927/431   24161/2715    41  342   62.36)
(smt.stats  106  16985 376474 1592896  7491/6936/432   24425/2736    42  355   62.36)
ramon: poll                 wall=15.000s usage=15.172s mem=64764KiB load=0.99 rootload=1.00
(smt.stats  107  17107 379138 1600926  7496/6943/433   24578/2736    42  355   62.46)
(smt.stats  108  17241 381293 1615682  7517/6947/433   24856/2737    42  355   62.46)
(smt.stats  109  17388 382784 1629977  7572/6969/433   25032/2740    42  355   62.46)
(smt.stats  110  17549 383773 1641028  7575/7022/433   25205/2740    42  355   62.57)
(sat.ddfw       1      1   10.9529   1540001      7549         17            1      156)
(smt.stats  111  17726 386390 1666782  7580/7027/433   25392/2740    42  355   62.57)
(smt.stats  112  17920 390778 1701597  7589/7036/434   25654/2766    43  361   62.57)
ramon: poll                 wall=16.000s usage=16.170s mem=65004KiB load=1.00 rootload=0.99
(smt.stats  113  18133 393441 1728250  7607/7042/434   25897/2767    43  361   62.57)
(smt.stats  114  18367 396329 1765532  7648/7057/434   26223/2768    43  361   62.67)
(smt.stats  115  18624 401753 1814273  7672/7109/434   26776/2806    44  366   62.67)
ramon: poll                 wall=17.000s usage=17.171s mem=65388KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.4227   1720001      8431         18            1      174)
(smt.stats  116  18906 408889 1864871  7901/7348/435   27348/2863    45  374   62.96)
(smt.stats  117  19216 419004 1919787  7904/7351/435   28194/2863    45  374   62.96)
ramon: poll                 wall=18.000s usage=18.251s mem=65872KiB load=1.08 rootload=1.08
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 1125899906842624&438835614340045
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 8 := 1125899906842624&438835614340045
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 0 := 1125899906842624&438835614340045
band: (band[52] (if (= #110 51) 4503599627370496 (if #840 2251799813685248 #940)) (if (= #947 51) 1 (if #949 3 #1094))) 219417807170656 := 1125899906842624&438835614340045
(smt.stats  118  19556 425227 1971232  7976/7371/435   28753/2863    45  374   63.13)
(smt.stats  119  19929 431337 2000495  8090/7458/435   29264/2864    45  374   63.13)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  120  20030 433607 2013282  8133/7544/435   29415/2864    45  374   63.27)
(smt.stats  121  20141 436659 2044912  8169/7613/435   29586/2864    45  374   63.27)
ramon: poll                 wall=19.000s usage=19.251s mem=65952KiB load=1.00 rootload=1.00
(smt.stats  122  20263 440304 2070742  8220/7618/435   29845/2866    45  374   63.27)
(sat.ddfw       1      1   10.0163   1910001      9362         19            1      193)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  123  20397 444705 2096304  8227/7674/435   30165/2866    45  374   63.27)
(smt.stats  124  20544 446432 2108116  8247/7680/435   30490/2866    45  374   63.43)
(smt.stats  125  20705 447453 2125477  8275/7697/435   30772/2866    45  374   63.43)
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 32 := 128&49
band: (band[52] (if (= #483 63) 18446744073709551616 (if #629 9223372036854775808 #626)) (if (= #1113 63) 0 (if #1115 1 #1249))) 32 := 128&49
(smt.stats  126  20882 448351 2134054  8285/7727/435   30956/2867    45  374   63.43)
(smt.stats  127  21076 449727 2143887  8297/7738/435   31196/2867    45  374   63.43)
(smt.stats  128  21289 453689 2178100  8310/7748/435   31450/2867    45  374   63.54)
ramon: poll                 wall=20.000s usage=20.316s mem=66124KiB load=1.06 rootload=1.07
ramon: end                  Fri Nov  1 22:09:30 2024
ramon: root.execname        z3
ramon: root.utime           20.370s
ramon: root.stime           0.010s
ramon: group.total          20.395s
ramon: group.utime          20.379s
ramon: group.stime          0.016s
ramon: group.mempeak        66156KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              1.02
