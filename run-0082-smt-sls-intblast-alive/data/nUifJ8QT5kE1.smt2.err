ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:05:21 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27378 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1385
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/nUifJ8QT5kE1.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             922892
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&13
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 13 := 12 << 37
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&8246337208321
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 8246337208321 := 134217788 << 37
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&8246337208321
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 8246337208321 := 134217788 << 37
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&17592186044415
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 18446744073709551615 := 35184372088812 << 37
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&17592186044415
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 18446744073709551615 := 134217788 << 37
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&17592186044415
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 18446744073709551615 := 134217788 << 37
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&17592186044415
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 18446744073709551615 := 134217788 << 37
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&8246337208320
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 1 := 67108894 << 38
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&8246337208320
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 1 := 67108894 << 38
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&8246337208320
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 1 := 67108894 << 38
(smt.stats    0    101   1068    345  1055/936/98      92/6     4   19   51.67)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&2748779069440
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 67108937 := 67108938 << 38
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   133.333     10000        49          0            1        2)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&2748779069440
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 1 := 134217738 << 38
(sat.ddfw       1      1   60.9817     20001        98          1            1        3)
(sat.ddfw       1      1    58.309     40001       196          2            1        5)
(smt.stats    1    202   1443    815  1250/964/98     200/8     4   19   51.96)
(sat.ddfw       1      1   48.7805     70001       343          3            1        8)
(smt.stats    2    313   2207   1513  1435/1273/105     313/16     6   20   52.05)
ramon: poll                 wall=1.000s usage=0.926s mem=54028KiB load=0.93 rootload=0.92
(smt.stats    3    414   2883   2605  1507/1380/108     436/24     7   21   52.05)
(sat.ddfw       1      1   40.8998    110001       539          4            1       12)
(smt.stats    4    525   3872   4238  1636/1504/121     522/67    11   44   52.05)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 35184372088834 := 35184372088830 << 28
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 35184372088834 := 35184372088830 << 28
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 35184372088834 := 35184372088830 << 28
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 35184372088833 := 35184372088830 << 28
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 35184372088833 := 35184372088830 << 28
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&17591649173504
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 0 := 17592186044415 << 29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&17591649173504
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 0 := 17592186044415 << 29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&17591649173504
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 0 := 17592186044415 << 29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 0&17591649173504
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 0 := 17592186044415 << 29
(smt.stats    5    647   5707   6198  1698/1563/135     584/47    12   94   52.15)
(smt.stats :restarts  :decisions   :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748   9084   8764  1723/1582/135     688/47    12   94   52.15)
(smt.stats    7    859  10670  10429  1867/1587/138     796/63    14   98   52.24)
(smt.stats    8    981  11760  12063  2118/1783/138     924/74    14   98   52.34)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 1 := 28&2
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 2 := 28&3
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 4 := 28&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 87960930222085 := 17662113480704 << 43
(sat.ddfw       1      1   34.7457    160000       784          5            1       17)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 2 := 28&29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 2 := 28&29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 2 := 28&29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 2 := 28&402653186
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 2 := 28&402653186
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 2 := 28&402653186
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 4 := 28&402653186
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&402653186
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&402653186
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&402653186
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&402653175
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&32
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&32
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&32
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&32
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&32
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 87960930222128 := 17591246520320 << 43
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&32
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 87960930222128 := 17591246520320 << 43
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&32
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&48
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 87960930222128 := 17591246520320 << 43
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&31
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&29
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&402653187
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&402653200
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 87961332875280 := 17591246520320 << 43
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&402653192
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 16 := 28&402653187
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&402653187
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&402653187
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&402653192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 87961332875272 := 17591246520320 << 43
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&402653192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 87961332875272 := 17591246520320 << 43
(smt.stats    9   1115  14355  16162  2262/2073/178    1057/92    16  107   52.73)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&71806483584
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 8 := 28&1073741834
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 87962003963914 := 17662113480704 << 43
(smt.stats   10   1216  15818  18973  2405/2112/203    1157/93    16  107   52.73)
(smt.stats   11   1327  16754  20274  2451/2269/203    1273/96    17  115   52.82)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  17642  23939  2548/2359/206    1395/117    18  116   52.82)
ramon: poll                 wall=2.002s usage=1.995s mem=55100KiB load=1.07 rootload=1.07
(sat.ddfw       1      1   30.3188    220001      1078          6            1       23)
(smt.stats   13   1583  18637  28063  2628/2412/207    1527/144    19  119   52.82)
(smt.stats   14   1730  20163  32314  2903/2748/209    1710/170    21  127   53.01)
(smt.stats   15   1831  20717  33742  2928/2767/209    1811/170    21  127   53.01)
(sat.ddfw       1      1   26.7891    290001      1421          7            1       30)
(smt.stats   16   1942  21548  35339  3104/2799/209    1929/205    22  128   53.11)
ramon: poll                 wall=3.002s usage=2.990s mem=55688KiB load=0.99 rootload=0.99
(smt.stats   17   2064  22626  38311  3306/2997/230    2033/220    23  140   53.30)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 1&3355442464
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 9007202610183456 := 19446806609920 << 39
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 1&3355442464
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 9007202610183456 := 19446806609920 << 39
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 1&3355442464
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 9007202610183456 := 19446806609920 << 39
(smt.stats   18   2198  26561  48913  3465/3161/230    2163/236    24  159   53.30)
(smt.stats   19   2345  28825  52336  3578/3336/237    2290/246    25  167   53.30)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 1&3355442464
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 9024794796227872 := 18760282931200 << 39
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 1&3355442464
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 9024794796227872 := 18760282931200 << 39
(sat.ddfw       1      1    23.902    370001      1813          8            1       38)
(smt.stats   20   2506  29382  53175  3593/3439/237    2452/250    26  167   53.71)
(smt.stats   21   2607  30582  61263  4367/4083/237    2559/251    26  167   53.71)
(smt.stats   22   2718  30837  61648  4459/4310/237    2670/251    26  167   53.84)
(smt.stats   23   2840  31358  64342  4962/4780/237    2794/252    26  167   53.94)
(smt.stats   24   2974  32878  70416  5417/5248/237    2956/252    26  167   54.03)
ramon: poll                 wall=4.000s usage=3.985s mem=56456KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   21.5776    460001      2254          9            1       47)
(smt.stats   25   3121  34450  72257  5533/5271/237    3154/255    26  167   54.32)
ramon: poll                 wall=5.000s usage=4.984s mem=56712KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   19.8768    560001      2745         10            1       57)
(smt.stats   26   3282  35377  73803  6186/5732/237    3334/256    26  167   54.41)
(smt.stats   27   3459  36144  76135  6685/6332/237    3522/256    26  167   54.60)
(smt.stats   28   3560  39733  81125  7271/7116/237    3686/256    26  167   54.60)
(sat.ddfw       1      1   19.1939    670001      3284         11            1       68)
ramon: poll                 wall=6.000s usage=6.314s mem=56976KiB load=1.33 rootload=1.33
(smt.stats   29   3671  41753  83264  7512/7136/237    3851/272    26  167   54.86)
(sat.ddfw       1      1   17.5876    790001      3872         12            1       80)
ramon: poll                 wall=7.000s usage=7.310s mem=57436KiB load=1.00 rootload=0.99
(smt.stats   30   3793  43153  86739  7949/7456/237    4003/289    26  167   55.05)
(smt.stats   31   3927  44951  90445  8238/7832/237    4209/296    26  167   55.14)
ramon: poll                 wall=8.000s usage=8.311s mem=57436KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   32   4074  47012  94669  8394/8099/237    4436/301    26  167   55.24)
(sat.ddfw       1      1   16.2399    920001      4509         13            1       93)
(smt.stats   33   4235  49031 100739  8923/8352/239    4650/661    27  172   55.33)
ramon: poll                 wall=9.000s usage=9.308s mem=57692KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.0878   1060001      5196         14            1      108)
(smt.stats   34   4412  50502 106251  9481/8890/240    4858/702    28  174   55.52)
(smt.stats   35   4606  57848 118516  9612/9457/240    5162/702    28  174   55.52)
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 14&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 17592186044448 := 19241218598186 << 42
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 14&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 17592186044448 := 19241218598186 << 42
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 14&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 17592186044448 := 19241218605050 << 42
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 14&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 17592186044448 := 19241218539490 << 42
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 14&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 17592186044448 := 19241218598098 << 42
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 14&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 17592186044448 := 19241218543450 << 42
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 14&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 17592186044448 := 19241234006018 << 42
band: (band[44] (if (or #759 #760 #761 #762 #763 #764 #765 #766 #767 #768 #769 #770 #771 #772 #773 #774 ...) 0 (if #818 1 #826)) (shl[64] (* 2 #114) (mod #1064 64))) 0 := 14&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #1061 #1063) 64)) 17592186044448 := 19241235320650 << 42
(smt.stats   36   4707  60575 126065  9686/9464/240    5344/705    28  174   55.62)
ramon: poll                 wall=10.002s usage=10.309s mem=57948KiB load=1.00 rootload=1.00
(smt.stats   37   4818  62494 136139  9736/9545/245    5564/898    29  175   55.73)
(smt.stats   38   4940  64729 146248  9849/9644/246    5705/945    30  175   55.82)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(sat.ddfw       1      1   14.1057   1210001      5931         15            1      123)
(smt.stats   39   5074  65753 148844  9974/9716/246    5886/958    31  178   55.82)
ramon: poll                 wall=11.000s usage=11.303s mem=58212KiB load=1.00 rootload=0.99
(smt.stats   40   5221  67375 159962 10182/9921/246    6054/958    31  178   56.05)
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas         :deletions     )
(smt.stats   41   5382  69229 167531 10486/10054/246    6243/959    31  178   56.05)
ramon: poll                 wall=12.000s usage=12.303s mem=58468KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.2483   1370001      6715         16            1      139)
(smt.stats   42   5559  70752 174364 10530/10337/247    6450/1021    32  180   56.15)
(smt.stats   43   5753  74015 178662 10757/10387/247    6682/1022    32  180   56.15)
ramon: poll                 wall=13.000s usage=13.299s mem=58724KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.4798   1540001      7549         17            1      156)
ramon: poll                 wall=14.000s usage=14.297s mem=59360KiB load=1.00 rootload=0.99
(smt.stats   44   5966  74756 179773 10944/10696/247    6896/1023    32  180   56.91)
(smt.stats   45   6067  76618 188198 11854/11685/247    7065/1024    32  180   56.72)
(smt.stats   46   6178  78947 201281 11902/11715/247    7253/1028    32  180   56.72)
(smt.stats   47   6300  84327 217298 11957/11768/247    7512/1033    32  180   56.81)
ramon: poll                 wall=15.000s usage=15.293s mem=59616KiB load=1.00 rootload=1.00
(smt.stats   48   6434  87282 223950 12074/11801/247    7682/1035    32  180   56.81)
(sat.ddfw       1      1   11.8064   1720001      8431         18            1      174)
(smt.stats   49   6581  89512 233586 12202/11998/247    7897/1035    32  180   57.00)
ramon: poll                 wall=16.000s usage=16.292s mem=59616KiB load=1.00 rootload=1.00
(smt.stats   50   6742  91918 238739 12448/12066/247    8165/1057    32  180   57.00)
ramon: poll                 wall=17.000s usage=17.292s mem=59872KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.2008   1910001      9362         19            1      193)
(smt.stats   51   6919  94748 250758 12749/12350/247    8414/1070    32  180   57.37)
(smt.stats   52   7113  98530 258153 12976/12664/247    8670/1073    32  180   57.37)
ramon: poll                 wall=18.000s usage=18.331s mem=59948KiB load=1.04 rootload=1.04
(smt.stats :restarts :decisions   :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas          :deletions     )
(smt.stats   53   7326 101674 265513 13257/12866/247    8914/1090    32  180   57.46)
(sat.ddfw       1      1   10.7175   2110001     10343         20            1      214)
ramon: poll                 wall=19.000s usage=19.327s mem=60008KiB load=1.00 rootload=0.99
(smt.stats   54   7560 105865 274742 13519/13163/247    9181/1094    32  180   57.46)
(smt.stats   55   7661 106938 278063 13603/13368/247    9288/1101    32  180   57.76)
ramon: poll                 wall=20.000s usage=20.324s mem=60264KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:05:42 2024
ramon: root.execname        z3
ramon: root.utime           20.410s
ramon: root.stime           0.000s
ramon: group.total          20.418s
ramon: group.utime          20.410s
ramon: group.stime          0.008s
ramon: group.mempeak        60524KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.095s
ramon: loadavg              1.02
