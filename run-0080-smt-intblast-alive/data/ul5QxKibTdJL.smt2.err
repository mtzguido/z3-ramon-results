ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:08:11 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24584 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/ul5QxKibTdJL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             178772
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1451    217  1066/938/97      96/11     5   16   18.97)
(smt.stats    1    202   3097    663  1247/1137/102     184/18     7   29   19.06)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 1 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 1 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 1&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 1 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 72&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 72 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 72&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 37 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 72&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 72 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 72&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 37 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 34359738367&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 18446744073709551615 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 72&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 73 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 72&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 35 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 72&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 36 := 36 << 1
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 72&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 36 := 36 << 1
(smt.stats    2    313   5185   1754  1490/1139/103     292/43     7   29   19.25)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 2&0
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 3 := 1 << 1
(smt.stats    3    414   7825   3284  1730/1399/117     420/82     9   35   19.35)
(smt.stats    4    525   9909   5863  2013/1807/140     515/107    12   82   19.54)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 21 := 22&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 20 := 22&21
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 22 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 20 := 22&21
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 22 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 21 := 22&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 20 := 22&21
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 22 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 7 := 7&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 4 := 7&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 4 := 7&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 6 := 6&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 4 := 6&21
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 6 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 4 := 6&21
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 6 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 28950 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 21 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 20 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 18 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 8 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 16 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 13 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 12 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 12 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 12 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 9 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 8 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 28929 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 28929 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 9 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 227 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 21 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 20 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 16 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 2 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 2 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 2 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 2 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 2 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 8 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 8 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 8 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 8 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 8 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 16 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 8 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 28932 := 113 << 8
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 17 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 16 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 4 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 28928&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 4 := 28928&21
(smt.stats    5    647  13557   9336  2130/1918/249     678/143    14  107   20.12)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 16 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 16 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 2 := 28928&21
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 2 := 28928&21
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  17233  12487  2262/1959/249     804/151    14  107   20.35)
(smt.stats    7    859  22044  18218  2279/2037/259     934/161    15  109   20.35)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 8&703
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 8&703
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 8&703
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 8&703
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 8 := 8&703
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 8 := 118 << 13
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 8 := 8&703
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 8 := 118 << 13
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 8 := 8&703
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 8 := 118 << 13
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 0&703
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 0 := 118 << 13
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 0&703
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 0 := 118 << 13
(smt.stats    8    981  26414  23147  2436/2147/272    1161/192    17  115   20.65)
(smt.stats    9   1115  32766  29936  2629/2358/283    1441/216    20  141   21.03)
(smt.stats   10   1216  36709  33953  2753/2445/284    1648/225    21  142   21.03)
(smt.stats   11   1327  41730  39801  2867/2574/285    1979/277    22  142   21.23)
(smt.stats   12   1449  45573  46592  2932/2634/286    2445/308    23  143   21.32)
(smt.stats   13   1583  50037  52887  3042/2767/293    2866/331    24  154   21.42)
(smt.stats   14   1730  56247  60387  3181/2785/293    3231/375    25  166   21.52)
ramon: poll                 wall=1.000s usage=0.939s mem=22956KiB load=0.94 rootload=0.93
(smt.stats   15   1831  60858  67961  3339/2984/294    3647/404    26  167   21.61)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 8 := 34359738347&10
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 10 := 34359738347&10
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 281474976710635 := 34359738357 << 7
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 10 := 34359738346&10
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 281474976710634 := 34359738357 << 7
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 10 := 34359738346&10
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 281474976710634 := 34359738357 << 7
(smt.stats   16   1942  64811  78074  3393/3107/305    4121/427    27  172   21.71)
(smt.stats   17   2064  68274  82857  3426/3148/317    4435/470    28  206   21.80)
(smt.stats   18   2198  73204  87373  3516/3152/318    4608/475    28  206   21.90)
(smt.stats   19   2345  80218  96076  3759/3301/318    5190/484    28  206   21.99)
ramon: poll                 wall=2.000s usage=1.937s mem=23296KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   20   2506  86075 107566  3844/3565/323    5915/567    30  221   22.28)
(smt.stats   21   2607  88233 109206  3928/3576/323    6074/567    30  221   22.49)
ramon: poll                 wall=3.000s usage=2.935s mem=23872KiB load=1.00 rootload=1.00
(smt.stats   22   2718  91477 115499  4238/3839/323    6405/567    30  221   22.49)
(smt.stats   23   2840  96415 125576  4432/3989/323    6756/636    31  257   22.69)
ramon: poll                 wall=4.003s usage=3.938s mem=24300KiB load=1.00 rootload=1.00
(smt.stats   24   2974  99213 133144  4651/4176/323    7091/636    31  257   22.88)
(smt.stats   25   3121 105155 141622  4764/4404/324    7557/660    32  261   22.97)
ramon: poll                 wall=5.000s usage=4.935s mem=24464KiB load=1.00 rootload=1.00
(smt.stats   26   3282 113446 157630  4994/4567/324    7932/663    32  261   23.07)
ramon: poll                 wall=6.000s usage=5.934s mem=24692KiB load=1.00 rootload=1.00
(smt.stats   27   3459 118005 167352  5219/4940/325    8469/724    33  265   23.31)
(smt.stats   28   3560 121787 174705  5307/4942/325    8772/724    33  265   23.40)
ramon: poll                 wall=7.000s usage=6.934s mem=24908KiB load=1.00 rootload=1.00
(smt.stats   29   3671 126463 186231  5495/5088/326    9323/727    33  265   23.50)
(smt.stats   30   3793 132254 198624  5648/5234/326    9763/955    34  274   23.59)
ramon: poll                 wall=8.000s usage=7.934s mem=25052KiB load=1.00 rootload=0.99
(smt.stats   31   3927 136490 204402  5763/5391/326   10043/957    34  274   23.69)
(smt.stats   32   4074 141224 213768  5847/5540/326   10763/960    34  274   23.78)
ramon: poll                 wall=9.000s usage=8.934s mem=25416KiB load=1.00 rootload=1.00
(smt.stats   33   4235 147217 221804  5988/5636/326   11052/962    34  274   23.88)
ramon: poll                 wall=10.000s usage=9.933s mem=25476KiB load=1.00 rootload=1.00
(smt.stats   34   4412 155077 239019  6266/5764/326   11643/967    34  274   23.97)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   35   4606 160167 247377  6336/6005/328   12328/1147    35  286   24.16)
ramon: poll                 wall=11.000s usage=10.933s mem=25692KiB load=1.00 rootload=1.00
(smt.stats   36   4707 164086 261998  6387/6075/329   12687/1149    35  286   24.26)
(smt.stats   37   4818 167771 284555  6487/6130/329   13105/1247    36  289   24.26)
(smt.stats   38   4940 169549 291781  6535/6215/331   13622/1248    36  289   24.36)
(smt.delete-inactive-clauses  :num-deleted-clauses 10)
ramon: poll                 wall=12.000s usage=11.933s mem=26168KiB load=1.00 rootload=1.00
(smt.stats   39   5074 172600 307366  6601/6267/333   14616/1314    37  298   24.44)
(smt.stats   40   5221 177059 322336  6849/6448/333   15164/1316    37  298   24.54)
ramon: poll                 wall=13.000s usage=12.933s mem=26188KiB load=1.00 rootload=1.00
(smt.stats   41   5382 183789 343901  6897/6586/333   15969/1318    37  298   24.63)
(smt.stats   42   5559 187419 362304  7067/6668/334   16777/1721    38  303   24.73)
ramon: poll                 wall=14.000s usage=13.932s mem=26236KiB load=1.00 rootload=1.00
(smt.stats   43   5753 193529 390335  7334/7017/335   17526/1724    38  303   24.92)
(smt.stats   44   5966 201905 431544  7418/7083/335   18571/1768    39  312   25.11)
ramon: poll                 wall=15.000s usage=14.932s mem=26528KiB load=1.00 rootload=1.00
(smt.stats   45   6067 206335 440158  7446/7141/335   18974/1769    39  312   25.21)
(smt.stats   46   6178 210028 458685  7525/7176/335   19718/1778    39  312   25.21)
(smt.stats   47   6300 214212 470266  7554/7271/337   20370/1890    40  315   25.30)
(smt.stats   48   6434 218708 479883  7564/7279/337   20643/1891    40  315   25.40)
(smt.stats   49   6581 221796 486405  7570/7291/337   21132/1891    40  315   25.49)
ramon: poll                 wall=16.000s usage=15.932s mem=26972KiB load=1.00 rootload=1.00
(smt.stats   50   6742 226113 500193  7595/7312/338   22290/1891    40  315   25.59)
(smt.stats   51   6919 231967 521578  7596/7313/341   23305/2364    41  325   25.59)
(smt.stats   52   7113 237958 546046  7602/7319/341   24415/2364    41  325   25.94)
(smt.stats   53   7326 249414 617090  7619/7336/341   25167/2423    42  400   25.94)
(smt.stats   54   7560 255516 643022  7632/7349/341   25729/2423    42  400   26.04)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 34359738215&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 281509336448871 := 142 << 2
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   55   7661 257559 656650  7679/7358/341   25950/2424    42  400   26.04)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 34359738358&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 281474976710646 := 107 << 2
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 34359738358&0
shl: (shl[64] (bv2int %0) (mod (+ #101 #287) 64)) 281474976710646 := 107 << 2
(smt.stats   56   7772 259853 667653  7737/7419/347   26255/2596    43  402   26.13)
(smt.stats   57   7894 264447 689438  7744/7456/347   26489/2596    43  402   26.13)
(smt.stats   58   8028 267305 710767  7747/7459/347   26871/2596    43  402   26.23)
ramon: poll                 wall=17.000s usage=16.932s mem=27792KiB load=1.00 rootload=1.00
(smt.stats   59   8175 272315 743237  7751/7463/347   27153/2647    44  402   26.32)
(smt.stats   60   8336 278208 776920  7758/7465/347   27391/2647    44  402   26.42)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 8 := 14336&10
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 4 := 14336&10
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 2 := 14336&10
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 14336&10
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 28672 := 112 << 7
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 14336&10
shl: (shl[35] (bv2int %0) (mod (bv2int %0) 35)) 28672 := 112 << 7
(smt.stats   61   8513 281285 796714  7816/7522/353   28718/2682    45  405   26.62)
(smt.stats   62   8707 287825 807990  7853/7534/354   29299/2682    45  405   26.72)
ramon: poll                 wall=18.003s usage=17.934s mem=28444KiB load=1.00 rootload=1.00
(smt.stats   63   8920 293298 822040  8053/7576/354   29733/2687    45  405   27.01)
(smt.stats   64   9154 303239 846561  8123/7813/354   30766/2688    45  405   27.01)
(smt.stats   65   9411 313369 889784  8181/7832/354   31531/2988    46  409   27.11)
(smt.stats   66   9512 316296 904235  8209/7911/354   31831/2988    46  409   27.11)
ramon: poll                 wall=19.000s usage=18.931s mem=28620KiB load=1.00 rootload=0.99
(smt.stats   67   9623 320999 942157  8230/7928/355   32357/3075    47  419   27.22)
(smt.stats   68   9745 326617 973781  8239/7935/355   32582/3075    47  419   27.22)
(smt.stats   69   9879 330687 998961  8266/7950/355   32889/3076    47  419   27.31)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 0 := 2048&21
band: (band[35] (shl[35] (bv2int %0) (mod #101 35)) (if (or #559 #560 #561) 0 (if #562 1 #649))) 16 := 2048&21
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   70  10026 334289 1019263  8305/7980/356   33611/3077    47  419   27.41)
(smt.stats   71  10187 337647 1058602  8321/8003/358   34126/3285    48  420   27.51)
(smt.stats   72  10364 341236 1077221  8392/8020/358   34552/3289    48  420   27.70)
(smt.stats   73  10558 342615 1086646  8427/8076/359   35028/3290    48  420   27.70)
(smt.stats   74  10771 345965 1108615  8467/8123/360   35646/3388    49  439   27.79)
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 64 := 95&87
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 49 := 87&87
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 49 := 87&87
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 51 := 87&87
band: (band[35] (shl[64] (bv2int %0) (mod #288 64)) (if (or #674 #675 #676 #677) 0 (if #678 1 #823))) 51 := 87&87
ramon: poll                 wall=20.000s usage=19.931s mem=29320KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:08:31 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.996s
ramon: group.utime          19.980s
ramon: group.stime          0.016s
ramon: group.mempeak        29600KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.065s
ramon: loadavg              1.00
