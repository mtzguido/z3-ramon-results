ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:14:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28242 MiB
ramon: sys.mem.avail        62089 MiB
ramon: sys.nprocs           1355
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/rEMY1YrCO2ZZ.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             549124
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   201/200     0/0  61       0    18.55   0.00)
(sat.stats    101    750    0   201/200   101/28  61       0    18.74   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 529 :time 0.00)
(sat.stats    101    750    0   201/200   101/28  61       0    18.74   0.00)
(sat.stats    101    750    0   201/200   101/28  61       0    18.74   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 397618.74 :time 0.00)
(sat.stats    101    750    0   201/200    72/28  61       0    18.74   0.01)
(sat.stats    104    759    1   201/200    75/31  61       0    18.74   0.01)
(sat.stats :conflicts    :restarts      :learned/bin      :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    107    813    2   201/200    78/34  61       0    18.74   0.01)
(sat.stats    110    884    3   201/200    81/37  61       0    18.74   0.01)
(sat.stats    113    958    4   201/200    84/40  61       0    18.74   0.01)
(sat.stats    116   1070    5   201/200    87/42  61       0    18.74   0.01)
(sat.stats    119   1130    6   201/200    90/42  61       0    18.74   0.01)
(sat.stats    122   1195    7   201/200    93/42  61       0    18.74   0.01)
(sat.stats    125   1266    8   201/200    96/42  61       0    18.74   0.01)
(sat.stats    128   1343    9   201/200    99/42  61       0    18.74   0.01)
(sat.stats    131   1456   10   201/200   102/45  61       0    18.74   0.01)
(sat.stats    134   1579   11   201/200   105/48  61       0    18.84   0.01)
(sat.stats    147   2055   12   201/200   118/56  61       0    18.84   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    237   4570   26   201/200   208/100  61       0    18.94   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2639 :time 0.00)
(sat.stats    400   7372   27   964/963   372/154  68       0    19.70   0.57)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 3825 :time 0.00)
(sat.stats    491   8291   28  1739/1738   462/156  73       0    19.99   0.77)
ramon: poll                 wall=1.000s usage=0.955s mem=21352KiB load=0.96 rootload=0.95
 (sat-cleaner :elim-literals 13 :elim-clauses 0 :cost 5920 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 0 :cost 6466 :time 0.00)
(sat.stats   1010  17514   35  4546/4545   996/182  78       0    20.49   1.32)
(sat.stats   1065  19514   52  4728/4727  1053/183  78       0    20.49   1.36)
 (sat-cleaner :elim-literals 27 :elim-clauses 2 :cost 8990 :time 0.00)
 (sat-cleaner :elim-literals 293 :elim-clauses 1 :cost 11845 :time 0.00)
(sat.stats   1599  34932   96  5864/5863  1584/297  79       0    20.88   1.62)
 (sat-cleaner :elim-literals 25 :elim-clauses 3 :cost 13640 :time 0.00)
ramon: poll                 wall=2.000s usage=1.954s mem=22184KiB load=1.00 rootload=1.00
shl: (shl[34] (bv2int %0) (mod (bv2int %0) 34)) 6607 := 17179869177 << 31
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 18883 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 3478 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 14824 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 4 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 203344 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 86144 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 32 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 64 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 899328 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 8780800 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 512 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 16719872 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 6144 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 4096 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 402948096 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 16384 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 419037184 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 65536 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 508559360 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 262144 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 524288 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 1054867456 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 1006632960 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 33554432 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 4194304 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 25165824 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 16777216 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 402653184 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 805306368 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 536870912 := 1073741823&2147483648
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
shl: (shl[64] (bv2int %0) (mod (+ #52 #248) 64)) 3355 := 17179869177 << 31
(sat.stats :conflicts  :restarts       :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   2561  68140  150  8422/8420  2610/463  80       0    22.35   2.26)
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 72 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 50 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 80 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 64 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 33 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 32 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 4 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 128 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 256 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 4096 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 3072 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 512 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 2048 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 170491904 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 8192 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 16384 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 676003840 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 829554688 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 779354112 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 226492416 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 524288 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 6291456 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 1048576 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 4194304 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 452984832 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 1006632960 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 33554432 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 805306368 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 134217728 := 2147483648&1073741823
band: (band[34] (if (= #522 33) 0 (if #524 1 #614)) (shl[34] (bv2int %0) (mod #52 34))) 0 := 1073741823&2147483648
band: (band[34] (shl[64] (bv2int %0) (mod #249 64)) (if (or #635 #636) 0 (if #637 1 #787))) 536870912 := 2147483648&1073741823
ramon: poll                 wall=3.000s usage=2.954s mem=28760KiB load=1.00 rootload=0.97
ramon: poll                 wall=4.000s usage=3.954s mem=32448KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.953s mem=35920KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.953s mem=37648KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.953s mem=38928KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.953s mem=40120KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.952s mem=43620KiB load=1.00 rootload=1.00
(sat.stats   3642 137256  236 77020/77018  4837/1711  80       0    44.56   9.68)
ramon: poll                 wall=10.000s usage=9.952s mem=45904KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.000s usage=10.952s mem=50424KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.952s mem=55644KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.952s mem=59160KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.003s usage=13.954s mem=60912KiB load=1.00 rootload=1.00
(sat.stats   5609 170356  350 204059/204057  7280/3026  80       0    68.71  14.69)
ramon: poll                 wall=15.000s usage=14.951s mem=63812KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.951s mem=68124KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.951s mem=69612KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.950s mem=73536KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.950s mem=83072KiB load=1.00 rootload=0.99
ramon: poll                 wall=20.000s usage=19.943s mem=84596KiB load=0.99 rootload=0.99
ramon: end                  Fri Nov  1 21:14:29 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.040s
ramon: group.total          19.995s
ramon: group.utime          19.947s
ramon: group.stime          0.048s
ramon: group.mempeak        90720KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.051s
ramon: loadavg              1.00
