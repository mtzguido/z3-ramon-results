ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:13:36 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24415 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1394
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/zJkJ3PDWknFB.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             194692
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.80)
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 3 := 2 << 2
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 57 := 56 << 1
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 36028797018963968 := 2 << 2
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 36028797018963968 := 56 << 1
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 36028797018963968 := 36028797018963926 << 1
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 36028797018963968 := 2 << 2
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 4 := 3 << 3
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 57 := 56 << 1
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 57 := 56 << 1
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 29 := 56 << 1
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 221 := 111 << 1
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 1 := 111 << 1
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 36028797018963873 := 18014398509481937 << 2
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 223 := 112 << 2
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 1 := 112 << 2
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 1 := 112 << 2
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 1 := 112 << 2
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928268 := 18014398509482067 << 22
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470340 := 18014415689367585 << 15
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470344 := 18014415689367586 << 16
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470344 := 18014415689367586 << 16
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470348 := 18014415689367587 << 17
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470352 := 18014415689367588 << 18
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470356 := 18014415689367589 << 19
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470360 := 18014415689367590 << 20
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057868916883604 := 18014467229220901 << 21
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470144 := 18014415689367536 << 21
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470140 := 18014415689367535 << 20
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470136 := 18014415689367534 << 19
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470132 := 18014415689367533 << 18
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470128 := 18014415689367532 << 17
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470124 := 18014415689367531 << 16
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470120 := 18014415689367530 << 15
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470140 := 18014415689367535 << 20
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470136 := 18014415689367534 << 19
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470132 := 18014415689367533 << 18
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470128 := 18014415689367532 << 17
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470124 := 18014415689367531 << 16
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470120 := 18014415689367530 << 15
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470120 := 18014415689367530 << 15
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470124 := 18014415689367531 << 16
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470128 := 18014415689367532 << 17
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470132 := 18014415689367533 << 18
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470140 := 18014415689367535 << 20
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470136 := 18014415689367534 << 19
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470140 := 18014415689367535 << 20
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757470140 := 18014415689367535 << 20
(smt.stats    0    101    474    488   186/110/77      93/9     7   15   18.58)
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928240 := 18014398509482060 << 15
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928244 := 18014398509482061 << 16
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928248 := 18014398509482062 << 17
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928244 := 18014398509482061 << 16
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928240 := 18014398509482060 << 15
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928024 := 18014398509482006 << 16
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928032 := 18014398509482008 << 18
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057662757469912 := 18014415689367478 << 18
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928048 := 18014398509482012 << 22
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928052 := 18014398509482013 << 23
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928128 := 18014398509482032 << 42
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928124 := 18014398509482031 << 41
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928120 := 18014398509482030 << 40
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928048 := 18014398509482012 << 22
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928052 := 18014398509482013 << 23
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928268 := 18014398509482067 << 22
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928272 := 18014398509482068 << 23
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928272 := 18014398509482068 << 23
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928268 := 18014398509482067 << 22
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928268 := 18014398509482067 << 22
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928272 := 18014398509482068 << 23
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928276 := 18014398509482069 << 24
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928276 := 18014398509482069 << 24
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928276 := 18014398509482069 << 24
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928280 := 18014398509482070 << 25
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928284 := 18014398509482071 << 26
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928292 := 18014398509482073 << 28
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928288 := 18014398509482072 << 27
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928292 := 18014398509482073 << 28
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928292 := 18014398509482073 << 28
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928280 := 18014398509482070 << 25
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928284 := 18014398509482071 << 26
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928280 := 18014398509482070 << 25
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928284 := 18014398509482071 << 26
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928280 := 18014398509482070 << 25
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928280 := 18014398509482070 << 25
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928292 := 18014398509482073 << 28
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928296 := 18014398509482074 << 29
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928300 := 18014398509482075 << 30
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928300 := 18014398509482075 << 30
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928304 := 18014398509482076 << 31
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928308 := 18014398509482077 << 32
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928312 := 18014398509482078 << 33
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928316 := 18014398509482079 << 34
(smt.stats    1    202   1424   1746   368/192/112     197/31     8   22   18.87)
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928084 := 18014398509482021 << 31
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928088 := 18014398509482022 << 32
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928084 := 18014398509482021 << 31
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928088 := 18014398509482022 << 32
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928092 := 18014398509482023 << 33
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928096 := 18014398509482024 << 34
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928084 := 18014398509482021 << 31
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928116 := 18014398509482029 << 39
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928112 := 18014398509482028 << 38
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928084 := 18014398509482021 << 31
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928088 := 18014398509482022 << 32
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928092 := 18014398509482023 << 33
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928108 := 18014398509482027 << 37
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928104 := 18014398509482026 << 36
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928096 := 18014398509482024 << 34
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928100 := 18014398509482025 << 35
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928096 := 18014398509482024 << 34
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928104 := 18014398509482026 << 36
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928116 := 18014398509482029 << 39
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928084 := 18014398509482021 << 31
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928088 := 18014398509482022 << 32
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928092 := 18014398509482023 << 33
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928084 := 18014398509482021 << 31
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928088 := 18014398509482022 << 32
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928088 := 18014398509482022 << 32
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928084 := 18014398509482021 << 31
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928088 := 18014398509482022 << 32
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928080 := 18014398509482020 << 30
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928076 := 18014398509482019 << 29
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928076 := 18014398509482019 << 29
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928068 := 18014398509482017 << 27
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928068 := 18014398509482017 << 27
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928064 := 18014398509482016 << 26
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928112 := 18014398509482028 << 38
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928112 := 18014398509482028 << 38
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928120 := 18014398509482030 << 40
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928124 := 18014398509482031 << 41
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928128 := 18014398509482032 << 42
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928124 := 18014398509482031 << 41
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928120 := 18014398509482030 << 40
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928120 := 18014398509482030 << 40
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928176 := 18014398509482044 << 54
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928132 := 18014398509482033 << 43
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928136 := 18014398509482034 << 44
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928140 := 18014398509482035 << 45
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928144 := 18014398509482036 << 46
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928148 := 18014398509482037 << 47
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928152 := 18014398509482038 << 48
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928156 := 18014398509482039 << 49
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928148 := 18014398509482037 << 47
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928152 := 18014398509482038 << 48
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928176 := 18014398509482044 << 54
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928156 := 18014398509482039 << 49
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928176 := 18014398509482044 << 54
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928160 := 18014398509482040 << 50
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928160 := 18014398509482040 << 50
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928164 := 18014398509482041 << 51
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928172 := 18014398509482043 << 53
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928168 := 18014398509482042 << 52
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928172 := 18014398509482043 << 53
(smt.stats    2    313   2836   3415   572/377/167     309/44     9   33   19.54)
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928172 := 18014398509482043 << 53
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928160 := 18014398509482040 << 50
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928164 := 18014398509482041 << 51
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928160 := 18014398509482040 << 50
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928160 := 18014398509482040 << 50
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928156 := 18014398509482039 << 49
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928156 := 18014398509482039 << 49
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928152 := 18014398509482038 << 48
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928152 := 18014398509482038 << 48
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928148 := 18014398509482037 << 47
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928144 := 18014398509482036 << 46
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928132 := 18014398509482033 << 43
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928144 := 18014398509482036 << 46
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928140 := 18014398509482035 << 45
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928136 := 18014398509482034 << 44
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928132 := 18014398509482033 << 43
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928132 := 18014398509482033 << 43
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928136 := 18014398509482034 << 44
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928136 := 18014398509482034 << 44
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928140 := 18014398509482035 << 45
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928144 := 18014398509482036 << 46
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928140 := 18014398509482035 << 45
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928136 := 18014398509482034 << 44
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928140 := 18014398509482035 << 45
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928140 := 18014398509482035 << 45
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928176 := 18014398509482044 << 54
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928000 := 18014398509482000 << 10
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928004 := 18014398509482001 << 11
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928000 := 18014398509482000 << 10
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928000 := 18014398509482000 << 10
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928004 := 18014398509482001 << 11
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928008 := 18014398509482002 << 12
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928016 := 18014398509482004 << 14
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928012 := 18014398509482003 << 13
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 72057594037928016 := 18014398509482004 << 14
(smt.stats    3    414   4853   5652   697/662/281     402/58    11   56   19.94)
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 271 := 68 << 13
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 271 := 68 << 13
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 275 := 69 << 14
(smt.stats    4    525   8653   7486   752/678/284     502/66    12   61   20.22)
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 13 := 75 << 20
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 13 := 75 << 20
shl: (shl[55] (bv2int %0) (mod (bv2int %0) 55)) 13 := 75 << 20
(smt.stats    5    647  11964   9588   801/729/284     622/75    13   64   20.32)
ramon: poll                 wall=1.000s usage=0.947s mem=21768KiB load=0.95 rootload=0.94
(smt.stats :restarts :decisions     :clauses/bin/units       :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas        :deletions    )
(smt.stats    6    748  13358  10432   863/778/289     723/92    14   65   20.61)
(smt.stats    7    859  16064  13095  1040/930/293     838/119    15   65   20.80)
ramon: poll                 wall=2.000s usage=1.946s mem=22336KiB load=1.00 rootload=1.00
(smt.stats    8    981  18157  15557  1202/1096/294     935/122    16   76   20.80)
ramon: poll                 wall=3.000s usage=2.946s mem=22336KiB load=1.00 rootload=1.00
(smt.stats    9   1115  20198  17748  1340/1191/295    1070/139    17   76   20.99)
(smt.stats   10   1216  22485  20480  1509/1422/295    1172/143    18   79   20.99)
(smt.stats   11   1327  25424  24255  1545/1496/296    1261/147    19   81   20.99)
ramon: poll                 wall=4.000s usage=3.946s mem=22340KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  28228  26604  1775/1526/296    1382/172    19   81   21.18)
ramon: poll                 wall=5.000s usage=4.946s mem=22528KiB load=1.00 rootload=1.00
(smt.stats   13   1583  31487  29642  2016/1852/296    1511/184    19   81   21.28)
ramon: poll                 wall=6.004s usage=5.950s mem=22924KiB load=1.00 rootload=1.00
(smt.stats   14   1730  34232  32723  2248/2028/296    1658/200    19   81   21.37)
(smt.stats   15   1831  36797  36136  2421/2326/297    1752/234    20   83   21.37)
(smt.stats   16   1942  39655  39648  2580/2444/297    1863/244    20   83   21.46)
ramon: poll                 wall=7.000s usage=6.945s mem=22932KiB load=1.00 rootload=1.00
(smt.stats   17   2064  42426  42485  2737/2602/297    1983/252    20   83   21.56)
ramon: poll                 wall=8.000s usage=7.945s mem=22936KiB load=1.00 rootload=1.00
(smt.stats   18   2198  46431  46426  2860/2754/300    2113/264    21   92   21.56)
(smt.stats   19   2345  50129  52383  3014/2855/300    2248/280    21   92   21.65)
ramon: poll                 wall=9.000s usage=8.945s mem=22988KiB load=1.00 rootload=1.00
(smt.stats   20   2506  53647  56772  3203/3138/301    2394/310    22   93   21.65)
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 43839736212698934 := 21919868106349466 << 11
shl: (shl[64] (bv2int %0) (mod (+ #63 #86) 64)) 43839736212698934 := 21919868106349466 << 11
(smt.stats   21   2607  57038  60257  3303/3181/301    2498/320    22   93   21.75)
(smt.stats   22   2718  59827  63937  3423/3368/301    2601/321    22   93   21.75)
ramon: poll                 wall=10.000s usage=9.945s mem=23148KiB load=1.00 rootload=1.00
(smt.stats   23   2840  63671  67759  3521/3398/303    2710/334    23   96   21.84)
(smt.stats   24   2974  67662  73944  3759/3559/303    2841/338    24   98   21.84)
(smt.stats   25   3121  70481  77672  3786/3738/308    2981/339    25   99   22.29)
(smt.stats   26   3282  76884  85827  4115/3998/308    3196/339    26  113   23.02)
ramon: poll                 wall=11.000s usage=10.944s mem=24500KiB load=1.00 rootload=1.00
(smt.stats   27   3459  84836  97980  4198/4010/310    3422/424    27  115   23.30)
ramon: poll                 wall=12.000s usage=11.944s mem=24984KiB load=1.00 rootload=1.00
(smt.stats   28   3560  91054 102972  4239/4093/311    3526/482    28  116   23.49)
ramon: poll                 wall=13.000s usage=12.944s mem=25092KiB load=1.00 rootload=1.00
(smt.stats   29   3671  96920 106171  4319/4135/311    3674/493    28  116   23.59)
ramon: poll                 wall=14.000s usage=13.944s mem=25192KiB load=1.00 rootload=1.00
(smt.stats   30   3793  99569 108632  4528/4247/311    3814/494    28  116   23.59)
ramon: poll                 wall=15.000s usage=14.943s mem=25248KiB load=1.00 rootload=0.99
(smt.stats   31   3927 106208 115818  4683/4529/312    3980/544    29  118   23.78)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 114720 124659  4715/4592/312    4123/546    29  118   23.78)
ramon: poll                 wall=16.004s usage=15.947s mem=25396KiB load=1.00 rootload=1.01
(smt.stats   33   4235 121705 133565  4866/4664/314    4312/571    30  118   24.07)
ramon: poll                 wall=17.000s usage=16.925s mem=25892KiB load=0.98 rootload=0.98
ramon: poll                 wall=18.000s usage=17.925s mem=25892KiB load=1.00 rootload=1.00
(smt.stats   34   4412 126947 139934  5169/5005/316    4496/589    31  118   24.17)
ramon: poll                 wall=19.000s usage=18.924s mem=25904KiB load=1.00 rootload=1.00
(smt.stats   35   4606 135351 151575  5398/5115/316    4719/618    32  118   24.26)
ramon: poll                 wall=20.000s usage=19.924s mem=25908KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:13:56 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.000s
ramon: group.total          19.982s
ramon: group.utime          19.978s
ramon: group.stime          0.004s
ramon: group.mempeak        26164KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.058s
ramon: loadavg              1.00
