ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:14:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28612 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1382
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KV7LLqmiGPv4.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             753886
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(smt.stats    0    101   5391    841  1274/1148/88     101/3     1   13   51.89)
(smt.stats    1    202   6560   1361  2031/1832/89     198/5     2   13   52.19)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 131072&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1 := 18 << 18
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 131072&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1 := 18 << 18
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 131072&1
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1 := 18 << 18
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 131072&1
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 131072&2
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 4 := 131072&4
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 8 := 131072&8
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   90.9091     10000        49          0            1        2)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 4 := 131072&4
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 8 := 131072&8
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1728 := 131072&1728
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 32 := 131072&32
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 131072&16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 131072&64
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&128
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 13056 := 131072&13056
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 512 := 131072&512
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1024 := 131072&1024
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 118784 := 131072&118784
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2048 := 131072&2048
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 8192 := 131072&8192
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16384 := 131072&16384
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 131072&1020
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&194
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 512 := 131072&548
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
(smt.stats    2    313   8957   3217  2204/1954/114     312/14     3   13   52.57)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&128
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&128
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 128 := 131072&128
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 256 := 131072&256
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1024 := 131072&1024
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2050 := 131072&2050
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2050 := 131072&2050
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2052 := 131072&2052
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2056 := 131072&2056
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2120 := 131072&2120
(smt.stats    3    414  10189   5236  2301/2087/174     420/28     6   39   52.57)
(sat.ddfw       1      1   48.0817     20001        98          1            1        3)
(smt.stats    4    525  12060   7077  2641/2089/176     532/67     7   48   52.70)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&253
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423741 := 252 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&194
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423682 := 193 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&194
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423682 := 193 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&76
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423564 := 75 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&76
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 576460752303423564 := 75 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 8796229238783 := 8796227242014 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32768 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 8796227242015 := 8796227242014 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32768 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32767 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 8796227242015 := 8796227242014 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32768 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32767 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32766 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32767 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&8796229206016
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32766 := 8796229206016&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 4 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 64 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 128 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 256 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 512 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 512 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1024 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 2048 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 4096 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8192 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16384 := 17592457363456&32768
(smt.stats    5    648  15075  11076  2759/2493/266     708/122     9   56   53.21)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&576460752300933120
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 26388279066587 := 26388279066586 << 16
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&576460752300933120
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 256 := 576460752300933120&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&576460752300933120
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 256 := 576460752300933120&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 256 := 17592457363456&32768
(sat.ddfw       1      1   48.5437     40001       196          2            1        5)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&576460752300933120
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 576 := 576460752300933120&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 576 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 576 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 576 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 512 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1024 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1024 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 2048 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16384 := 17592457363456&32768
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    749  16835  13457  2860/2606/305     825/148    11   84   53.61)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 32768&17592461230080
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 32 := 32768&17592461230080
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 32768&17592461230080
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 16 := 32768&17592461230080
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592461230080
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8192 := 17592461230080&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592461230080
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8192 := 17592461230080&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592461230080
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8192 := 17592461230080&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 32768 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 16384 := 17592457363456&32768
(smt.stats    7    860  20367  20032  2911/2618/305     958/151    11   84   53.80)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 4096 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 8 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 2 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 2 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 4 := 17592457363456&32768
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 32768&17592457363456
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 128 := 17592457363456&32768
(sat.ddfw       1      1   41.5512     70001       343          3            1        8)
(smt.stats    8    982  21678  25368  3004/2749/385    1130/209    14  129   53.99)
(smt.stats    9   1116  25694  30056  3021/2764/385    1290/209    14  129   53.99)
(smt.stats   10   1217  32146  36935  3027/2770/386    1393/247    15  131   54.09)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&299071749685248
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&299071749685249
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 299071749685249 := 299071726227815 << 1
ramon: poll                 wall=1.000s usage=0.973s mem=56916KiB load=0.97 rootload=0.96
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&299071749685249
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 299071749685249 := 299071726227815 << 1
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&299071753551873
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 299071753551873 := 299071726227874 << 1
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&598143453036544
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 1 := 1&598143453036544
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 1&598143452455984
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 598143452512256 := 299071726227992 << 1
(smt.stats   11   1328  35465  40922  3128/2861/397    1505/265    16  134   54.48)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 1&17592722931754
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 288239172513234944 := 288239172513177621 << 1
(sat.ddfw       1      1   35.7143    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  38485  46760  3233/2960/408    1687/306    17  136   54.57)
(smt.stats   13   1584  42032  51621  3262/2985/408    1843/317    18  146   54.70)
(smt.stats   14   1731  49659  57425  3285/3000/408    2025/319    18  146   54.82)
(smt.stats   15   1832  55413  65844  3294/3017/412    2127/361    19  147   54.82)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 16&59390
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 10 := 16&59390
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 9 := 16&59391
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 9 := 16&59391
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 13 := 16&59391
(smt.stats   16   1943  57402  70335  3326/3049/425    2292/421    21  177   54.82)
(smt.stats   17   2065  60234  75547  3335/3058/425    2429/421    21  177   54.94)
(sat.ddfw       1      1   30.8065    160000       784          5            1       17)
(smt.stats   18   2199  63905  82755  3343/3064/425    2575/423    22  187   55.16)
ramon: poll                 wall=2.003s usage=1.968s mem=57460KiB load=0.99 rootload=1.00
(smt.stats   19   2346  67498  89525  3438/3075/427    2793/436    23  190   55.35)
(sat.ddfw       1      1   26.9063    220001      1078          6            1       23)
(smt.stats   20   2507  72168 100867  3497/3209/428    3048/481    24  191   55.35)
(smt.stats   21   2608  74186 107655  3511/3232/433    2802/553    26  548   55.57)
(smt.stats   22   2719  74675 108672  3664/3262/433    2930/555    26  548   55.66)
(sat.ddfw       1      1   23.7772    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=2.964s mem=58172KiB load=1.00 rootload=1.00
(smt.stats   23   2841  75857 110946  3933/3445/433    3174/556    26  548   55.78)
(smt.stats   24   2975  77175 113468  4200/3686/433    3422/556    26  548   55.87)
(smt.stats   25   3122  84248 129508  4351/4037/434    3870/558    26  548   55.97)
(sat.ddfw       1      1   20.8551    370001      1813          8            1       38)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748164
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748166
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1729989187329018630 := 288520647221444723 << 2
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748164
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748166
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1729989187329018630 := 288520647221444723 << 2
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748164
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748164
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&606930418748166
shl: (shl[64] (bv2int %0) (mod (+ #110 #909) 64)) 1729989187329018630 := 288520656482467810 << 2
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 2 := 2&70369817936228
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910ramon: poll                 wall=4.000s usage=3.894s mem=58492KiB load=0.93 rootload=0.92
 64))) 2 := 2&70369817936228
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 2&70369817936228
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 606930418748163 := 17592454484057 << 2
(smt.stats   26   3283  89233 147475  4481/4100/434    4191/637    27  553   55.97)
(smt.stats   27   3460  92323 154533  4843/4236/451    4749/724    28  561   56.46)
(smt.stats   28   3561  95593 161148  4904/4624/453    4924/724    28  561   56.46)
(smt.stats   29   3672 102399 181585  4915/4635/453    5269/906    29  566   56.46)
(smt.stats   30   3794 109574 204248  4919/4639/453    5479/906    29  566   56.58)
(sat.ddfw       1      1   18.8521    460001      2254          9            1       47)
(smt.stats   31   3928 117273 230104  4943/4641/453    5639/908    29  566   56.58)
ramon: poll                 wall=5.003s usage=4.878s mem=58952KiB load=0.98 rootload=0.98
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075 124381 247833  4945/4665/453    5829/908    29  566   56.58)
(smt.stats   33   4236 131140 275655  4996/4716/454    6421/1280    30  566   56.70)
(smt.stats   34   4413 135449 288428  5220/4717/455    6883/1281    30  566   56.80)
(sat.ddfw       1      1    17.298    560001      2745         10            1       57)
ramon: poll                 wall=6.003s usage=5.865s mem=59392KiB load=0.99 rootload=0.99
(smt.stats   35   4607 146710 311735  5343/5056/455    7150/1282    30  566   57.18)
(smt.stats   36   4708 151979 318421  5348/5065/455    7247/1322    31  570   57.18)
(smt.stats   37   4819 158270 344477  5380/5076/455    7683/1323    31  570   57.18)
(smt.stats   38   4941 163683 355774  5402/5111/455    8444/1326    31  570   57.40)
(smt.delete-inactive-clauses  :num-deleted-clauses 37)
(smt.stats   39   5075 168073 367202  5415/5135/456    8791/1627    32  575   57.40)
(smt.stats   40   5222 172135 379916  5435/5153/456    9407/1627    32  575   57.40)
(sat.ddfw       1      1   15.8069    670001      3284         11            1       68)
ramon: poll                 wall=7.000s usage=6.814s mem=59652KiB load=0.95 rootload=0.95
(smt.stats   41   5383 174900 390658  5617/5157/456    9628/1628    32  575   57.69)
ramon: poll                 wall=8.000s usage=7.706s mem=60660KiB load=0.89 rootload=0.89
(sat.ddfw       1      1   14.4213    790001      3872         12            1       80)
ramon: poll                 wall=9.003s usage=8.677s mem=61692KiB load=0.97 rootload=0.97
(smt.stats   42   5560 175720 393163  6132/5420/456    9980/1631    32  575   58.57)
(sat.ddfw       1      1   13.5445    920001      4509         13            1       93)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 1&288239172513615872
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1 := 288239172513615872&1
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 0 := 1&288239172513615872
band: (band[59] (shl[59] (bv2int %0) (mod #110 59)) (if (= #637 58) 1 (if #639 2 #753))) 1 := 288239172513615872&1
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   43   5754 179546 417743  6497/5927/457   10652/2015    33  578   58.70)
ramon: poll                 wall=10.003s usage=9.661s mem=61972KiB load=0.98 rootload=0.98
(smt.stats   44   5967 187747 467058  6548/6266/458   11255/2399    34  580   58.79)
(smt.stats   45   6068 191730 474733  6556/6274/458   11430/2399    34  580   58.79)
(smt.stats   46   6179 195302 494440  6736/6341/459   11895/2403    34  580   58.89)
(sat.ddfw       1      1   12.7621   1060001      5196         14            1      108)
ramon: poll                 wall=11.000s usage=10.655s mem=62228KiB load=1.00 rootload=1.00
(smt.stats   47   6301 197538 509656  6932/6458/459   12287/2724    35  580   59.08)
(smt.stats   48   6435 200881 522115  7243/6742/459   12697/2726    35  580   59.25)
(smt.stats   49   6582 204715 534984  7277/6971/459   13753/2727    35  580   59.34)
(smt.stats   50   6743 210041 552117  7430/7103/460   14261/3101    36  580   59.81)
ramon: poll                 wall=12.000s usage=11.656s mem=62740KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.0608   1210001      5931         15            1      123)
(smt.stats   51   6920 213712 571138  7805/7157/460   14780/3105    36  580   60.00)
ramon: poll                 wall=13.003s usage=12.662s mem=62740KiB load=1.00 rootload=1.00
(smt.stats   52   7114 219971 587733  7929/7532/461   15057/3261    37  584   60.00)
(smt.stats   53   7327 225079 597449  8278/7730/461   15394/3262    37  584   60.22)
ramon: poll                 wall=14.000s usage=13.655s mem=62740KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.4204   1370001      6715         16            1      139)
(smt.stats   54   7561 233274 628231  8567/8227/461   16066/3271    37  584   60.22)
(smt.stats   55   7662 240294 652930  8574/8292/461   16181/3271    37  584   60.34)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 144115188075855872&287693763739256290
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 144115188075855872&287693763739256290
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 64 := 144115188075855872&287693763739256290
(smt.stats   56   7773 243966 665159  8676/8293/461   16327/3275    37  584   60.34)
(smt.stats   57   7895 245868 678813  9007/8425/471   16583/3437    38  586   60.64)
band: (band[59] (if (or #769 #770 #771 #772 #773 #774) 0 (if #775 1 #889)) (shl[64] (bv2int %0) (mod #910 64))) 17179870212 := 144115188075855872&287693763739256288
(smt.stats   58   8029 249531 695334  9140/8801/471   17500/3439    38  586   60.64)
ramon: poll                 wall=15.003s usage=14.662s mem=63252KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.8439   1540001      7549         17            1      156)
(smt.stats   59   8176 254510 708556  9387/8866/478   17874/3645    39  595   60.83)
ramon: poll                 wall=16.000s usage=15.595s mem=63536KiB load=0.94 rootload=0.93
(smt.stats   60   8337 260069 752068  9801/9245/478   18527/3648    39  595   60.93)
(smt.stats   61   8514 264627 783818 10037/9552/478   19661/3973    40  595   61.02)
ramon: poll                 wall=17.000s usage=16.587s mem=63600KiB load=0.99 rootload=1.00
(smt.stats   62   8708 273442 887229 10061/9779/478   20417/3973    40  595   61.15)
(sat.ddfw       1      1   10.3057   1720001      8431         18            1      174)
(smt.stats :restarts :decisions   :clauses/bin/units            :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   63   8921 282124 955149 10267/9789/479   21384/4477    41  601   61.32)
ramon: poll                 wall=18.019s usage=17.646s mem=64000KiB load=1.04 rootload=1.03
(smt.stats   64   9155 289014 991830 10332/10040/481   22183/4690    42  605   61.42)
(smt.stats   65   9412 306426 1077819 10343/10057/481   22522/4690    42  605   61.42)
(smt.stats   66   9513 309520 1107371 10366/10074/481   22868/4690    42  605   61.54)
ramon: poll                 wall=19.000s usage=18.573s mem=64228KiB load=0.94 rootload=0.95
(smt.stats   67   9624 314358 1148364 10473/10084/481   23230/4692    42  605   62.14)
(sat.ddfw       1      1   9.77316   1910001      9362         19            1      193)
(smt.stats   68   9746 319582 1219819 10632/10235/482   23495/5232    43  607   62.24)
ramon: poll                 wall=20.000s usage=19.523s mem=64456KiB load=0.95 rootload=0.95
ramon: end                  Fri Nov  1 22:15:16 2024
ramon: root.execname        z3
ramon: root.utime           19.510s
ramon: root.stime           0.010s
ramon: group.total          19.537s
ramon: group.utime          19.521s
ramon: group.stime          0.016s
ramon: group.mempeak        64712KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              0.98
