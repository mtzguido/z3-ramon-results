ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 17:57:09 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28358 MiB
ramon: sys.mem.avail        61764 MiB
ramon: sys.nprocs           1273
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/F4nE1YhitMix.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             4138248
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   1760    471   709/637/112      96/39     9   28   18.69)
(smt.stats    1    202   2536    958  1039/843/112     224/52     9   28   18.98)
(smt.stats    2    313   4282   2791  1257/1135/113     442/93    10   28   18.98)
(smt.stats    3    414   5700   5580  1333/1242/114     609/139    11   30   18.98)
(smt.stats    4    525   6910   8362  1484/1380/118     906/156    12   36   19.07)
(smt.stats    5    647   8492  12391  1543/1412/125    1101/178    13   41   19.17)
(smt.stats :restarts  :decisions   :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    748   9428  14657  1593/1440/125    1229/187    14   46   19.17)
(smt.stats    7    859  10756  18364  1669/1537/128    1383/204    15   51   19.17)
(smt.stats    8    981  11815  22398  1737/1620/132    1622/240    16   52   19.17)
(smt.stats    9   1115  12931  25030  1762/1632/132    1965/241    16   52   19.26)
(smt.stats   10   1217  13448  27737  1789/1668/132    2017/280    17  224   19.36)
(smt.stats   11   1328  14330  32855  1834/1682/132    2209/283    17  224   19.36)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  15025  37652  1869/1722/132    2396/286    17  224   19.36)
(smt.stats   13   1584  15408  41343  1880/1753/138    2545/300    18  272   19.46)
(smt.stats   14   1731  15886  45660  1952/1773/138    2701/301    18  272   19.56)
(smt.stats   15   1832  16281  50544  1993/1849/138    2813/303    18  272   19.56)
(smt.stats   16   1943  17018  55418  1998/1881/138    3017/303    18  272   19.56)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65524 := 65524&65527
shl: (shl[32] (bv2int %1) (mod (+ #115 #419 #415) 32)) 196596 := 65525 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 0&65527
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 65526 := 65524 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 0&65527
shl: (shl[32] (bv2int %1) (mod (+ #115 #419 #415) 32)) 131072 := 3 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 0&65527
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 1 := 65526 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 0&65527
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 1 := 65524 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 0&65527
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 65523 := 65524 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 1 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 1 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 2 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 4 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 16 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 32 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 64 := 65536&65527
(smt.stats   17   2065  17704  58826  2046/1909/167    3185/328    19  275   19.85)
(smt.stats   18   2199  18699  64271  2169/1952/169    3378/333    19  275   19.85)
(smt.stats   19   2346  19831  69715  2225/2057/169    3541/355    20  315   19.85)
ramon: poll                 wall=1.000s usage=0.945s mem=20984KiB load=0.95 rootload=0.94
(smt.stats   20   2507  20570  76441  2278/2152/172    3796/366    21  324   19.94)
(smt.stats   21   2608  21204  81345  2315/2165/172    3974/367    21  324   19.94)
(smt.stats   22   2719  21863  87445  2391/2217/172    4148/373    21  324   19.94)
(smt.stats   23   2841  22747  93037  2443/2285/172    4318/379    21  324   20.04)
(smt.stats   24   2975  23660  98545  2532/2373/172    4512/384    21  324   20.04)
(smt.stats   25   3122  24255 106464  2556/2419/172    4770/385    21  324   20.13)
(smt.stats   26   3283  25146 115337  2636/2434/175    5002/448    22  329   20.13)
(smt.stats   27   3460  25776 124132  2729/2538/175    5322/448    22  329   20.13)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65524 := 65528&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65528&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8193 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65521 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65521 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65523 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65523 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65523 := 65535&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65527 := 65535&65527
shl: (shl[32] (bv2int %1) (mod (+ #115 #419 #415) 32)) 327679 := 1 << 16
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65523 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65523 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65522 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65524 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65520 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 65504 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 16384 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 32768 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8192 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 16384 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 16384 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 16384 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 32768 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 32768 := 65536&65527
(smt.stats   28   3561  26542 131204  2819/2664/248    5479/481    23  334   20.36)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8194 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8195 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8195 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8194 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8195 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8266 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8266 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8266 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8267 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8283 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8283 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8298 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8299 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8298 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8299 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8298 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8299 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8378 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8379 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8379 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8315 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8315 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8314 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8315 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8314 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8315 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8315 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8314 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8314 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8315 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8379 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8378 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8379 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8571 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8699 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8442 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8443 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8443 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8443 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8443 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8443 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8187 := 65535&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 8187 := 65535&32763
(smt.stats   29   3672  27803 141853  2977/2742/320    5687/547    24  368   21.13)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 26 := 33282&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 33282&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 33298&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 34322&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 34322&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 34834&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 35858&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 35858&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 35858&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 35858&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 35858&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 35858&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 35346&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 35346&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 34834&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 34834&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 34834&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 34834&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 34834&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 34834&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 36882&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 36882&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 36882&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 36882&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 36882&32763
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 18 := 36882&32763
(smt.stats   30   3794  29253 155391  3199/2870/346    5972/568    24  368   21.32)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 82 := 116754&32763
(smt.stats   31   3928  30883 166485  3318/3143/404    6331/643    25  386   21.42)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4075  33802 182503  3392/3253/406    7071/717    26  388   21.42)
(smt.stats   33   4236  36586 199073  3428/3263/406    7306/1049    27  390   21.59)
(smt.stats   34   4413  37784 217704  3449/3313/406    7593/1049    27  390   21.59)
ramon: poll                 wall=2.000s usage=1.944s mem=23204KiB load=1.00 rootload=0.99
(smt.stats   35   4607  41462 231414  3546/3412/409    8646/1198    28  396   21.98)
(smt.stats   36   4708  43930 246567  3708/3520/409    8859/1199    28  396   22.11)
(smt.stats   37   4819  46074 263915  3743/3569/409    9016/1515    29  404   22.11)
(smt.stats   38   4941  49262 283709  3772/3617/410    9557/1565    30  405   22.20)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   39   5075  52158 300613  3787/3632/422   10326/1811    31  491   22.30)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 256 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 128 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 32 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 512 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 1024 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 2048 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 4096 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 32768 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 1 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 2 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 16384 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 16380 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 16 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 32 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 64 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 128 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 256 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 512 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 1024 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 2048 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 4096 := 65536&65527
(smt.stats   40   5222  53445 307173  4007/3651/422   10697/1815    31  491   22.90)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8256 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8224 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8224 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8320 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8320 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8320 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8192 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8192 := 65536&65527
(smt.stats   41   5383  55374 332923  4086/3860/523   11226/1820    31  491   22.90)
(smt.stats   42   5560  58656 352280  4301/3969/523   11789/1987    32  512   23.09)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8476 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 9246 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 9246 := 65536&65527
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 65536&65527
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 9244 := 65536&65527
(smt.stats   43   5754  60719 366337  4585/4210/523   12234/2005    32  512   23.31)
(smt.stats   44   5967  62753 410681  4928/4749/532   13130/2273    34  518   23.51)
(smt.stats   45   6068  65090 422383  5006/4764/532   13691/2274    34  518   23.60)
ramon: poll                 wall=3.000s usage=2.943s mem=24912KiB load=1.00 rootload=1.00
(smt.stats   46   6179  68072 442103  5023/4830/532   14253/2275    34  518   23.70)
(smt.stats   47   6301  72461 478503  5084/4847/532   14966/2279    34  518   23.80)
(smt.stats   48   6435  74736 502933  5150/4969/533   15706/2590    35  525   23.89)
(smt.stats   49   6582  79034 537424  5158/4975/534   16932/2592    35  525   24.18)
(smt.stats   50   6743  83612 577457  5421/5155/537   17627/2924    36  534   24.18)
ramon: poll                 wall=4.000s usage=3.943s mem=25724KiB load=1.00 rootload=1.00
(smt.stats   51   6920  86863 603140  5509/5317/538   18377/2995    37  544   24.37)
(smt.stats   52   7114  92240 641634  5676/5343/538   19770/3001    37  544   24.59)
(smt.stats   53   7327  98292 708639  5878/5522/538   20698/3662    38  545   24.88)
ramon: poll                 wall=5.000s usage=4.942s mem=26368KiB load=1.00 rootload=1.00
(smt.stats   54   7561 103819 755996  6198/5997/541   22144/3883    39  555   25.07)
(smt.stats   55   7662 106714 784690  6290/6029/541   22680/3889    39  555   25.17)
(smt.stats   56   7773 110439 821841  6428/6143/541   23447/4222    40  572   25.17)
(smt.stats   57   7895 114475 864772  6570/6334/542   24252/4399    41  572   25.36)
(smt.stats   58   8029 116683 885581  6617/6422/542   25140/4399    41  572   25.36)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 1 := 5121&31
shl: (shl[32] (bv2int %1) (mod (+ #115 #419 #415) 32)) 16651265 := 131071 << 5
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 1 := 5121&31
shl: (shl[32] (bv2int %1) (mod (+ #115 #419 #415) 32)) 267265 := 131071 << 5
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 1 := 5121&31
shl: (shl[32] (bv2int %1) (mod (+ #115 #419 #415) 32)) 267265 := 131071 << 5
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   59   8176 121087 916902  6675/6484/550   26998/4820    42  578   25.56)
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 131040&31
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 131039 := 131071 << 5
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 131040&31
shl: (shl[17] (bv2int %1) (mod (bv2int %0) 17)) 131039 := 131071 << 5
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 131040&31
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 16 := 131040&31
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 131040&31
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8 := 131040&31
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 131040&31
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 8 := 131040&31
band: (band[17] (shl[32] (bv2int %1) (mod #420 32)) (if (= #440 31) 0 (if #442 1 #515))) 0 := 131040&31
band: (band[17] (shl[17] (bv2int %1) (mod #115 17)) (if (= #364 16) 1 (if #366 3 #407))) 1 := 131040&31
(smt.stats   60   8337 123878 953450  6755/6564/568   27588/4822    42  578   25.85)
ramon: poll                 wall=6.000s usage=5.942s mem=27420KiB load=1.00 rootload=0.99
(smt.stats   61   8514 127894 1002669  6874/6653/572   29612/5014    43  609   26.15)
(smt.stats   62   8708 135125 1062731  7098/6740/572   30488/5019    43  609   26.34)
(smt.stats   63   8921 142336 1117357  7339/7094/574   31397/5468    44  616   26.53)
ramon: poll                 wall=7.000s usage=6.942s mem=28112KiB load=1.00 rootload=1.00
(smt.stats   64   9155 150399 1161286  7505/7128/574   33091/5476    44  616   26.82)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9412 158170 1222580  7747/7318/574   34132/5717    45  628   27.04)
(smt.stats   66   9513 160609 1242323  7780/7551/575   34901/5718    45  628   27.14)
(smt.stats   67   9624 166022 1279666  7901/7558/575   35428/5851    46  633   27.23)
ramon: poll                 wall=8.000s usage=7.942s mem=28776KiB load=1.00 rootload=1.00
(smt.stats   68   9746 170617 1316434  8179/7709/575   36068/5857    46  633   27.33)
(smt.stats   69   9880 172833 1338359  8198/7968/575   36666/5857    46  633   27.43)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 176074 1377748  8232/7996/576   38803/6232    47  636   27.62)
(smt.stats   71  10188 181383 1440026  8416/8011/576   39383/6235    47  636   27.81)
(smt.stats   72  10365 184858 1506134  8588/8213/576   40004/6235    47  636   27.90)
ramon: poll                 wall=9.000s usage=8.942s mem=29484KiB load=1.00 rootload=1.00
(smt.stats   73  10559 188382 1562492  8704/8475/579   41782/6656    48  640   28.27)
(smt.stats   74  10772 190730 1611379  8775/8486/579   43105/6656    48  640   28.64)
(smt.stats   75  11006 194922 1654333  9039/8751/582   45811/6656    48  640   29.54)
ramon: poll                 wall=10.000s usage=9.941s mem=31388KiB load=1.00 rootload=1.00
(smt.stats   76  11263 206436 1729466  9142/8771/582   47605/6938    49  643   29.92)
(smt.stats   77  11545 212955 1779805  9230/8862/582   49190/6942    49  643   30.21)
(smt.stats   78  11646 216543 1803629  9256/8945/582   49526/6943    49  643   30.21)
(smt.stats   79  11757 219756 1830309  9284/8994/585   50409/7317    50  646   30.21)
ramon: poll                 wall=11.000s usage=10.941s mem=31848KiB load=1.00 rootload=1.00
(smt.stats   80  11879 224080 1862778  9302/9002/585   51157/7317    50  646   30.31)
(smt.stats   81  12013 227689 1917723  9325/9035/587   52376/7317    50  646   30.50)
(smt.stats   82  12160 232305 1984452  9378/9036/587   52696/7319    50  646   30.50)
(smt.stats   83  12321 237223 2018328  9477/9166/588   53373/7424    51  668   30.69)
(smt.stats   84  12498 240242 2054259  9549/9202/588   53701/7427    51  668   30.69)
ramon: poll                 wall=12.000s usage=11.941s mem=32312KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   85  12692 245479 2109229  9721/9280/588   54471/7430    51  668   30.88)
(smt.stats   86  12905 248753 2150761  9807/9485/588   55420/7432    51  668   30.97)
(smt.stats   87  13139 254430 2193927  9880/9552/589   58475/7599    52  671   31.26)
(smt.stats   88  13396 260015 2231200 10014/9619/589   59146/7603    52  671   31.35)
ramon: poll                 wall=13.000s usage=12.941s mem=32944KiB load=1.00 rootload=1.00
(smt.stats   89  13678 265641 2332159 10101/9788/592   61242/7964    53  704   31.54)
(smt.stats   90  13988 268530 2367916 10176/9829/592   62060/7965    53  704   31.86)
(smt.stats   91  14089 272545 2408436 10208/9891/595   63023/7968    53  704   31.95)
ramon: poll                 wall=14.000s usage=13.941s mem=33416KiB load=1.00 rootload=1.00
(smt.stats   92  14200 276628 2446938 10349/9982/595   63531/7969    53  704   32.05)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   93  14322 280118 2482396 10422/10088/595   64319/7973    53  704   32.14)
(smt.stats   94  14456 284071 2529128 10500/10155/595   65077/8282    54  768   32.33)
(smt.stats   95  14603 289265 2573793 10596/10250/597   66384/8285    54  768   32.74)
ramon: poll                 wall=15.000s usage=14.939s mem=34108KiB load=1.00 rootload=1.00
(smt.stats   96  14764 294949 2625874 10661/10314/597   66937/8290    54  768   32.74)
(smt.stats   97  14941 300386 2679135 10811/10425/597   67666/8295    54  768   32.84)
(smt.delete-inactive-clauses  :num-deleted-clauses 121)
ramon: poll                 wall=16.000s usage=15.939s mem=34336KiB load=1.00 rootload=1.00
(smt.stats   98  15135 303823 2719290 10970/10596/598   68605/8527    55  797   32.93)
(smt.stats   99  15348 308088 2777381 11164/10863/600   69357/8532    55  797   33.15)
(smt.stats  100  15582 312331 2834235 11284/10914/600   70606/8534    55  797   33.24)
ramon: poll                 wall=17.005s usage=16.944s mem=34756KiB load=1.00 rootload=1.00
(smt.stats  101  15839 319662 2921424 11476/11018/600   71722/8534    55  797   33.63)
(smt.stats  102  16121 325005 2978548 11613/11252/600   73083/8816    56  843   33.72)
ramon: poll                 wall=18.000s usage=17.939s mem=35296KiB load=1.00 rootload=1.00
(smt.stats  103  16431 331064 3045627 11788/11340/600   74257/8818    56  843   33.92)
ramon: poll                 wall=19.000s usage=18.939s mem=35648KiB load=1.00 rootload=1.00
(smt.stats  104  16771 338702 3112152 12022/11538/600   76358/8829    56  843   34.12)
(smt.stats  105  16872 341264 3145789 12138/11793/600   77090/8830    56  843   34.22)
(smt.stats  106  16983 342969 3171495 12184/11894/604   78937/9153    57  844   34.52)
(smt.stats  107  17105 346189 3186033 12211/11895/605   79854/9157    57  844   34.61)
ramon: poll                 wall=20.000s usage=19.938s mem=36260KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 17:57:29 2024
ramon: root.execname        z3
ramon: root.utime           19.980s
ramon: root.stime           0.010s
ramon: group.total          19.998s
ramon: group.utime          19.982s
ramon: group.stime          0.016s
ramon: group.mempeak        36772KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.060s
ramon: loadavg              1.00
