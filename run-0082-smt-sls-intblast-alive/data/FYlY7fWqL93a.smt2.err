ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:04:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28842 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/FYlY7fWqL93a.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             715628
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   59.8802     10000        49          0            1        2)
(sat.ddfw       1      1   32.5765     20001        98          1            1        3)
(smt.stats    0    101   4262    287  1306/1172/101      98/12     7   21   52.15)
(sat.ddfw       1      1   34.3643     40001       196          2            1        5)
(smt.stats    1    202   6707    985  2168/1895/101     218/13     7   21   52.24)
(smt.stats    2    313   7383   2381  2283/2083/102     344/21     8   22   52.34)
(smt.stats    3    414  10296   3680  2686/2446/107     476/53    10   24   52.53)
(smt.stats    4    525  12450   5216  2800/2556/109     601/95    11   29   52.63)
(sat.ddfw       1      1   32.8228     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.848s mem=55040KiB load=0.85 rootload=0.83
(smt.stats    5    647  18157   8032  2828/2576/109     725/103    12   32   52.73)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 1&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 1&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 2&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 2&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855870&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855868&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855868&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855864&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855864&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 2&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 4&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 16&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 32&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855856&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 12&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 32&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 64&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 63 := 64&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 62 := 64&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 60 := 64&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 64&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 128&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 128&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 256&1023
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  20860  11078  2916/2614/146     867/141    14   39   53.05)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 12&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 12&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 12&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 4 := 12&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 4 := 12&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 8 := 12&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 4&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 4&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 4 := 12&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 4 := 12&1023
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 4 := 12&1023
(smt.stats    7    859  22109  13113  3086/2677/210     989/143    15   52   53.15)
(smt.stats    8    981  22774  14613  3390/3141/219    1110/147    16   56   53.34)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 1 := 26&1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 26&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 288230376151711770 := 144115188075855808 << 1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 1 := 26&1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 26&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 288230376151711770 := 144115188075855808 << 1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 26&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 144115188075855898 := 144115188075855808 << 1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855744&1
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 144115188075855807 := 144115188075855808 << 1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855744&1
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 144115188075855745 := 144115188075855808 << 1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 1 := 144115188075855744&1
(smt.stats    9   1115  28293  17823  3431/3162/231    1263/174    18   62   53.73)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855744&1
band: (band[57] (shl[57] (bv2int %0) (mod #100 57)) (if (= #622 56) 1 (if #624 3 #784))) 1 := 144115188075855744&1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855744&1
band: (band[57] (shl[57] (bv2int %0) (mod #100 57)) (if (= #622 56) 1 (if #624 3 #784))) 1 := 144115188075855744&1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855744&1
band: (band[57] (shl[57] (bv2int %0) (mod #100 57)) (if (= #622 56) 1 (if #624 3 #784))) 1 := 144115188075855744&1
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855744&1
band: (band[57] (shl[57] (bv2int %0) (mod #100 57)) (if (= #622 56) 1 (if #624 3 #784))) 1 := 144115188075855744&1
(smt.stats   10   1216  32887  20685  3499/3226/237    1387/178    19   63   53.82)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 24 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 26 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 42 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 74 := 144115188075855850&18014398509481983
(smt.stats   11   1327  39359  25886  3518/3238/247    1501/188    20   66   53.94)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 40 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 42 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 42 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 42 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 42 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 42 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 26 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 138 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 138 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 106 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 106 := 144115188075855850&18014398509481983
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 18014398509481962 := 144115188075855850&18014398509481983
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 288230376151711722 := 144115188075855861 << 54
(smt.stats   12   1449  41093  30712  3570/3305/286    1705/236    22   82   54.24)
(sat.ddfw       1      1   29.5639    110001       539          4            1       12)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 8 := 8&36028797018963967
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 3602879701896396808 := 144115188075855862 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 8 := 9&36028797018963967
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 8 := 8&36028797018963967
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 4035225266123964424 := 144115188075855862 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 8 := 8&36028797018963967
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 4035225266123964424 := 144115188075855862 << 55
(smt.stats   13   1583  43508  35873  3668/3363/287    1959/279    23   93   54.33)
(smt.stats   14   1730  49565  44673  3692/3407/292    2129/292    24   94   54.61)
(smt.stats   15   1831  53036  51208  3692/3407/293    2278/300    25   94   54.61)
(smt.stats   16   1942  56912  57494  3696/3411/294    2453/313    26   97   54.61)
(smt.stats   17   2064  57887  59789  3732/3416/294    2687/342    27   99   54.70)
(sat.ddfw       1      1    26.343    160000       784          5            1       17)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 150 := 144115188075855760&255
ramon: poll                 wall=2.000s usage=1.848s mem=57024KiB load=1.00 rootload=1.00
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 228 := 144115188075855856&255
(smt.stats   18   2198  61443  65100  3807/3456/296    2916/352    27   99   54.70)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   19   2345  64395  70174  3946/3550/296    3136/379    28  111   54.99)
(sat.ddfw       1      1   23.5575    220001      1078          6            1       23)
(smt.stats   20   2506  66882  78015  3988/3699/297    3430/422    29  114   54.99)
(smt.stats   21   2607  68706  82482  4009/3711/297    3597/423    29  114   55.09)
(smt.stats   22   2718  70433  86008  4028/3736/297    3807/424    29  114   55.09)
ramon: poll                 wall=3.000s usage=2.847s mem=57384KiB load=1.00 rootload=1.00
(smt.stats   23   2840  72218  92344  4067/3780/302    3996/527    30  115   55.09)
(sat.ddfw       1      1   21.1225    290001      1421          7            1       30)
(smt.stats   24   2974  74489 100367  4097/3805/314    4294/603    31  158   55.19)
(smt.stats   25   3121  80246 115811  4124/3820/314    4559/604    31  158   55.19)
(smt.stats   26   3282  87387 133181  4143/3844/314    4766/655    32  187   55.31)
ramon: poll                 wall=4.001s usage=3.851s mem=57896KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.9888    370001      1813          8            1       38)
(smt.stats   27   3459  91969 143031  4249/3952/319    5132/695    33  191   55.51)
(smt.stats   28   3560  95059 146643  4338/4018/320    5259/707    34  196   55.73)
ramon: poll                 wall=5.000s usage=4.847s mem=58176KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   17.3044    460001      2254          9            1       47)
(smt.stats   29   3671  98298 149396  4583/4163/320    5405/708    34  196   55.82)
(smt.stats   30   3793 102618 157491  4715/4341/320    5562/710    34  196   55.92)
ramon: poll                 wall=6.001s usage=5.851s mem=58272KiB load=1.00 rootload=1.00
(smt.stats   31   3927 105352 165058  4829/4440/321    5721/727    35  199   55.92)
(smt.stats   32   4074 107524 177265  4870/4536/322    6144/728    35  199   56.01)
(sat.ddfw       1      1   15.8303    560001      2745         10            1       57)
(smt.stats   33   4235 110445 191620  4993/4589/322    6673/768    36  202   56.21)
(smt.stats   34   4412 112497 198511  5020/4695/322    6919/770    36  202   56.45)
ramon: poll                 wall=7.000s usage=6.847s mem=58692KiB load=1.00 rootload=1.00
(smt.stats   35   4606 115158 208722  5108/4716/322    7266/773    36  202   56.45)
(smt.stats   36   4707 116830 213076  5236/4841/322    7442/774    36  202   56.57)
(sat.ddfw       1      1   14.6179    670001      3284         11            1       68)
(smt.stats   37   4818 120359 230668  5245/4934/322    7650/774    36  202   56.57)
(smt.stats   38   4940 123422 242154  5252/4941/322    7951/774    36  202   56.66)
(smt.delete-inactive-clauses  :num-deleted-clauses 26)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   39   5074 126985 254339  5262/4951/323    8324/900    37  216   56.66)
ramon: poll                 wall=8.000s usage=7.846s mem=59044KiB load=1.00 rootload=1.00
(smt.stats   40   5221 131765 274720  5273/4962/323    8729/900    37  216   56.78)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 3 := 144115188075855831&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 12682136550675316695 := 144115188075855695 << 2
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 3 := 144115188075855831&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 12682136550675316695 := 144115188075855695 << 2
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 2 := 144115188075855710&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 144115188075855710 := 144115188075855695 << 2
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 2 := 144115188075855710&3
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 144115188075855710 := 144115188075855695 << 2
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855164&3
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 144115188075855695 << 2
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855164&3
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 1 := 144115188075855695 << 2
(smt.stats   41   5382 134803 285402  5335/4968/323    9097/904    37  216   56.87)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855164&3
band: (band[57] (shl[57] (bv2int %0) (mod #100 57)) (if (= #622 56) 1 (if #624 3 #784))) 2 := 144115188075855164&3
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855164&3
band: (band[57] (shl[57] (bv2int %0) (mod #100 57)) (if (= #622 56) 1 (if #624 3 #784))) 2 := 144115188075855164&3
(smt.stats   42   5559 139289 303514  5360/5036/333    9548/1015    38  218   57.23)
(smt.stats   43   5753 146056 329856  5373/5054/344    9914/1070    39  220   57.23)
(smt.stats   44   5966 152410 353348  5387/5068/345   10371/1075    40  226   57.33)
(sat.ddfw       1      1   13.5947    790001      3872         12            1       80)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6067 154230 361143  5407/5072/345   10745/1114    41  228   57.33)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 176 := 144115188075855748 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 180 := 144115188075855748 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 188 := 144115188075855748 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 184 := 144115188075855748 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 192 := 144115188075855748 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 172 := 144115188075855748 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 204 := 144115188075855748 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 200 := 144115188075855748 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 208 := 144115188075855748 << 55
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 0&36028797018963967
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 208 := 144115188075855748 << 55
(smt.stats   46   6178 155888 368731  5504/5096/345   10942/1118    41  228   57.42)
ramon: poll                 wall=9.000s usage=8.846s mem=59580KiB load=1.00 rootload=1.00
(smt.stats   47   6300 157929 379630  5530/5199/352   11195/1171    42  235   57.52)
(smt.stats   48   6434 161135 388427  5558/5233/353   11436/1172    42  235   57.52)
(smt.stats   49   6581 164219 395958  5577/5245/353   11734/1173    42  235   57.52)
ramon: poll                 wall=10.000s usage=9.846s mem=59960KiB load=1.00 rootload=0.99
(smt.stats   50   6742 167323 408347  5679/5265/353   11988/1265    43  240   57.62)
(smt.stats   51   6919 172450 427937  5694/5365/354   12295/1267    43  240   57.62)
(sat.ddfw       1      1   12.6693    920001      4509         13            1       93)
(smt.stats   52   7113 176778 436094  5849/5380/355   12717/1296    44  242   57.82)
ramon: poll                 wall=11.000s usage=10.940s mem=60244KiB load=1.09 rootload=1.10
(smt.stats   53   7326 182123 452825  6016/5588/355   13356/1303    44  242   57.91)
(sat.ddfw       1      1   11.9413   1060001      5196         14            1      108)
(smt.stats   54   7560 188198 473856  6111/5776/357   13934/1377    45  246   58.01)
ramon: poll                 wall=12.000s usage=11.937s mem=60516KiB load=1.00 rootload=1.00
(smt.stats   55   7661 191832 486112  6213/5792/357   14144/1412    46  251   58.20)
(smt.stats   56   7772 194746 496621  6367/5909/357   14582/1413    46  251   58.20)
ramon: poll                 wall=13.000s usage=12.941s mem=60940KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.1807   1210001      5931         15            1      123)
(smt.stats   57   7894 197772 511683  6473/6061/357   14995/1414    46  251   58.29)
(smt.stats   58   8028 199771 521775  6522/6183/357   15448/1414    46  251   58.29)
ramon: poll                 wall=14.000s usage=13.937s mem=60980KiB load=1.00 rootload=1.00
(smt.stats   59   8175 203062 538280  6597/6206/359   16020/1609    47  269   58.29)
(smt.stats   60   8336 207378 563167  6705/6352/361   16684/1694    48  294   58.39)
(smt.stats   61   8513 211858 582642  6780/6455/363   17235/1735    49  329   58.84)
(smt.stats   62   8707 217920 610950  6875/6459/364   18021/1740    49  329   58.93)
ramon: poll                 wall=15.000s usage=14.937s mem=61420KiB load=1.00 rootload=1.00
(smt.stats   63   8920 223471 633754  6938/6568/364   18543/1833    50  331   59.07)
(sat.ddfw       1      1   10.5242   1370001      6715         16            1      139)
(smt.stats   64   9154 231222 664666  7003/6635/364   19126/1835    50  331   59.16)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 2 := 144115188075855586&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 17149707381026848482 := 72057594037927935 << 3
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 2 := 144115188075855586&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 17149707381026848482 := 72057594037927935 << 3
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 2 := 144115188075855586&7
shl: (shl[64] (bv2int %0) (mod (+ #100 #395) 64)) 18446744073709551330 := 72057594037927935 << 3
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855864&7
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 72057594037927935 := 72057594037927935 << 3
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855864&7
shl: (shl[57] (bv2int %0) (mod (bv2int %0) 57)) 72057594037927935 := 72057594037927935 << 3
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 0 := 144115188075855864&7
band: (band[57] (shl[57] (bv2int %0) (mod #100 57)) (if (= #622 56) 1 (if #624 3 #784))) 4 := 144115188075855864&7
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   65   9411 234501 684852  7094/6704/364   19479/1839    50  331   59.46)
(smt.stats   66   9512 237314 694915  7105/6775/384   19679/1903    51  335   59.84)
(smt.stats   67   9623 242583 712981  7152/6791/384   19874/1906    51  335   59.84)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 136 := 72057594037927808&9007199254740991
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 128 := 72057594037927808&9007199254740991
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 128 := 72057594037927808&9007199254740991
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 128 := 72057594037927808&9007199254740991
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 128 := 72057594037927808&9007199254740991
ramon: poll                 wall=16.000s usage=15.931s mem=62288KiB load=0.99 rootload=0.99
(smt.stats   68   9745 247181 724946  7283/6828/384   20174/1906    51  335   60.05)
(smt.stats   69   9879 251288 736323  7495/7000/394   20498/1945    52  337   60.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 626)
(smt.stats   70  10026 254290 746893  7534/7199/395   20682/1946    52  337   60.24)
(smt.stats   71  10187 262584 769163  7595/7200/395   21107/1951    52  337   60.24)
ramon: poll                 wall=17.000s usage=16.931s mem=62520KiB load=1.00 rootload=1.00
(smt.stats   72  10364 266501 778808  7703/7268/395   21448/2173    53  340   60.25)
(sat.ddfw       1      1   9.93455   1540001      7549         17            1      156)
band: (band[57] (shl[64] (bv2int %0) (mod #396 64)) (if (= #803 63) 0 (if #805 1 #934))) 1024 := 144115188075855424&2251799813685247
(smt.stats   73  10558 270577 794391  7771/7389/395   21921/2176    53  340   60.35)
(smt.stats   74  10771 280695 843885  7992/7657/396   22778/2366    54  343   60.54)
ramon: poll                 wall=18.000s usage=17.931s mem=63076KiB load=1.00 rootload=1.00
(smt.stats   75  11005 285691 873515  8052/7677/397   23356/2366    54  343   60.63)
ramon: poll                 wall=19.000s usage=18.931s mem=63292KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.40881   1720001      8431         18            1      174)
(smt.stats   76  11262 290408 895180  8175/7721/397   24061/2368    54  343   60.73)
ramon: poll                 wall=20.000s usage=19.927s mem=63400KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 22:04:22 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.986s
ramon: group.utime          19.966s
ramon: group.stime          0.020s
ramon: group.mempeak        63464KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.059s
ramon: loadavg              1.00
