ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:13:55 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28737 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1372
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/K5tgV1KgOeFz.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             750600
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 88&268435456
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 88 := 89 >>l 31
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 1 := 89 >>l 31
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 1 := 89 >>l 31
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 1 := 89 >>l 31
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 1 := 89 >>l 31
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 1 := 89 >>l 31
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 288230376151711743 := 2147483671 >>l 31
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 2147483670 := 2147483671 >>l 31
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1 := 1&268435456
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1 := 1&268435456
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 2 := 4294967253 >>l 31
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 134217726 := 4294967253 >>l 31
(smt.stats    0    102   5510    828  1303/1175/108      99/11     6   16   52.25)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
band: (band[58] (lshr[58] (bv2int %0) (mod #109 58)) (if (= #512 57) 288230376151711744 (if #514 144115188075855872 #626))) 1 := 1&268435456
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
band: (band[58] (lshr[58] (bv2int %0) (mod #109 58)) (if (= #512 57) 288230376151711744 (if #514 144115188075855872 #626))) 1 := 1&268435456
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   54.3478     10000        49          0            1        2)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 1&268435456
band: (band[58] (lshr[58] (bv2int %0) (mod #109 58)) (if (= #512 57) 288230376151711744 (if #514 144115188075855872 #626))) 1 := 1&268435456
(smt.stats    1    203   7923   2854  2379/2139/120     187/14     8   19   52.44)
(smt.stats    2    314  11908   5055  2398/2169/130     290/14    11   24   52.54)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 0&16777216
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 288230376151711744 := 4294967257 >>l 35
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 0&16777216
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 288230376151711744 := 151 >>l 35
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 0&16777216
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 288230376151711744 := 151 >>l 35
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 0&16777216
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 288230376151711744 := 209 >>l 35
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2 := 2&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4 := 4&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8 := 8&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 16 := 22&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 32 := 51&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 64 := 80&16777216
(sat.ddfw       1      1   29.0727     20001        98          1            1        3)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 128 := 243&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 128 := 156&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 128 := 156&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 128 := 156&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 64 := 68&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 64 := 64&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 256 := 8589934597&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 512 := 8589934597&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1024 := 8589934597&16777216
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4 := 8589934597&16777216
(smt.stats    3    415  13763   6528  2565/2265/132     397/18    13   26   52.83)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1024 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2048 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4096 := 288230376151711743&1048576
(smt.stats    4    526  16029   8960  2733/2457/193     484/37    15   47   53.02)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2048 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2048 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8192 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 16384 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 32768 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 65536 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 131072 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 262144 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 524288 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1048576 := 288230376151711743&1048576
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 576460752303423487 := 2147483679 >>l 39
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 524288 := 288230376151711743&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1048576 := 288230376151711743&1048576
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 576460752303423487 := 2147483737 >>l 39
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1048576 := 288230376151711743&1048576
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 576460752303423487 := 2147483737 >>l 39
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1048576 := 4294967205&1048576
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 288230380446678949 := 4294967203 >>l 39
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1048576 := 1048583&1048576
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 288230376152760327 := 4294967203 >>l 39
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1048576 := 1048583&1048576
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 288230376152760327 := 4294967203 >>l 39
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 0&1048576
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 3 := 2147483737 >>l 39
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 0&1048576
lshr: (lshr[58] (bv2int %0) (mod (bv2int %0) 58)) 3 := 2147483737 >>l 39
(smt.stats    5    648  18906  11598  2831/2548/252     630/67    17   69   53.22)
(sat.ddfw       1      1   32.4675     40001       196          2            1        5)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 256 := 262&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 256 := 262&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 256 := 256&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 128 := 128&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 128 := 128&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 278528 := 278528&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 294912 := 294918&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 327680 := 327686&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 327680 := 327686&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 294912 := 294918&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 294912 := 294918&1048576
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 294912 := 294918&1048576
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  21567  15138  2878/2579/263     790/77    18   70   53.45)
(sat.ddfw       1      1   31.4795     70001       343          3            1        8)
ramon: poll                 wall=1.000s usage=0.798s mem=55972KiB load=0.80 rootload=0.78
(smt.stats    7    860  22490  16021  2977/2619/288     913/115    19   75   53.84)
(smt.stats    8    982  24775  18598  3111/2846/291    1077/115    19   75   53.84)
(smt.stats    9   1116  30927  25367  3157/2865/295    1196/160    22   95   54.02)
(sat.ddfw       1      1   28.5919    110001       539          4            1       12)
(smt.stats   10   1217  33982  29747  3257/2910/295    1319/160    22   95   54.02)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 262144 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 131072 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 65536 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1048576 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2097152 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4194304 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8388608 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 16777216 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4194304 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8388608 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 16777216 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 33554432 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 67108864 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 134217728 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 268435456 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 536870912 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1073741824 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2147483648 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4294967296 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8589934592 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 67108864 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 67108864 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 67108864 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 67108864 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 16777216 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 33554432 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 33554432 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 16777216 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 16777216 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 33554432 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 33554432 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 268435456 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1073741824 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2147483648 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4294967296 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8589934592 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 17179869184 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8589934592 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 17179869184 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 34359738368 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 68719476736 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 137438953472 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8589934592 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8589934592 := 180149001616621572&36028797018963968
(smt.stats   11   1328  37078  35897  3426/3141/425    1570/237    24  119   54.42)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 7516192768 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 6442450944 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2147483648 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4294967296 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1073741824 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1073741824 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 536870912 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 134217728 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4194304 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8388608 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4194304 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2097152 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2097152 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 2097152 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1048576 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 1048576 := 180149001616621572&36028797018963968
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 524288 := 180149001616621572&36028797018963968
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  40055  42879  3483/3211/488    1829/349    27  150   54.63)
ramon: poll                 wall=2.000s usage=1.794s mem=57280KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   25.4837    160000       784          5            1       17)
(smt.stats   13   1584  43514  48458  3594/3238/490    1970/402    28  178   54.99)
(sat.ddfw       1      1   22.7794    220001      1078          6            1       23)
(smt.stats   14   1731  44638  50997  3871/3370/490    2126/414    29  178   55.27)
ramon: poll                 wall=3.003s usage=2.803s mem=57648KiB load=1.01 rootload=1.01
(smt.stats   15   1832  45767  53742  3995/3644/490    2229/416    29  178   55.75)
(sat.ddfw       1      1   20.5218    290001      1421          7            1       30)
(smt.stats   16   1943  46622  54868  4265/3889/490    2348/416    29  178   55.86)
(smt.stats   17   2065  50605  63892  4440/4150/494    2644/495    30  191   55.86)
ramon: poll                 wall=4.000s usage=3.795s mem=58480KiB load=0.99 rootload=0.99
(smt.stats   18   2199  55614  76444  4449/4159/496    2836/534    32  199   56.05)
(smt.stats   19   2346  60629  90204  4457/4167/497    3016/557    33  200   56.05)
(sat.ddfw       1      1   18.6916    370001      1813          8            1       38)
(smt.stats   20   2507  64353 101377  4474/4184/507    3411/588    34  203   56.15)
(smt.stats   21   2608  70572 110254  4481/4191/508    3578/588    34  203   56.24)
(smt.stats   22   2719  76552 124976  4538/4197/508    3781/710    35  238   56.24)
ramon: poll                 wall=5.003s usage=4.914s mem=58580KiB load=1.12 rootload=1.12
(sat.ddfw       1      1   17.6609    460001      2254          9            1       47)
(smt.stats   23   2841  79896 132950  4708/4253/508    3998/716    35  238   56.44)
ramon: poll                 wall=6.000s usage=5.912s mem=58728KiB load=1.00 rootload=1.00
(smt.stats   24   2975  82640 137023  4881/4486/508    4187/719    35  238   56.53)
(sat.ddfw       1      1   16.0565    560001      2745         10            1       57)
(smt.stats   25   3122  86910 145600  4959/4624/511    4458/918    36  244   56.63)
(smt.stats   26   3283  91412 158933  5066/4738/512    4748/957    37  246   56.72)
ramon: poll                 wall=7.000s usage=6.912s mem=59240KiB load=1.00 rootload=0.99
(smt.stats   27   3460  94799 168466  5140/4783/512    5133/962    37  246   56.99)
(smt.stats   28   3561 100197 174874  5299/4972/512    5321/962    37  246   57.18)
(sat.ddfw       1      1   14.7177    670001      3284         11            1       68)
(smt.stats   29   3672 108084 198202  5309/4973/512    5549/962    37  246   57.29)
ramon: poll                 wall=8.000s usage=7.909s mem=59752KiB load=1.00 rootload=1.00
(smt.stats   30   3794 114987 214908  5383/4984/512    5732/963    37  246   57.38)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3928 120447 232368  5410/5083/514    5981/1285    38  256   57.38)
(smt.stats   32   4075 125817 249581  5430/5103/518    6174/1345    39  263   57.38)
(smt.stats   33   4236 135299 271387  5440/5113/518    6373/1345    39  263   57.49)
(sat.ddfw       1      1   13.6534    790001      3872         12            1       80)
ramon: poll                 wall=9.000s usage=8.988s mem=60060KiB load=1.08 rootload=1.08
(smt.stats   34   4413 145942 296539  5511/5117/518    6754/1347    39  263   57.78)
(smt.stats   35   4607 154348 316010  5526/5199/521    7113/1467    40  271   57.88)
(smt.stats   36   4708 157816 323936  5528/5201/521    7317/1521    41  275   57.88)
ramon: poll                 wall=10.000s usage=10.044s mem=60316KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   12.9456    920001      4509         13            1       93)
(smt.stats   37   4819 162550 337014  5533/5201/521    7457/1521    41  275   57.97)
(smt.stats   38   4941 167734 350471  5540/5213/521    7676/1521    41  275   57.97)
(smt.delete-inactive-clauses  :num-deleted-clauses 838)
(smt.stats   39   5075 173745 361066  5552/5225/522    7059/1628    42  281   57.97)
(smt.stats   40   5222 180494 384205  5570/5230/524    7260/1641    43  304   58.06)
ramon: poll                 wall=11.000s usage=11.044s mem=60828KiB load=1.00 rootload=1.00
(smt.stats   41   5383 186364 400415  5585/5251/526    7525/1643    43  304   58.14)
(smt.stats   42   5560 190969 415510  5609/5282/527    7792/1734    44  324   58.14)
(sat.ddfw       1      1   12.0389   1060001      5196         14            1      108)
(smt.stats   43   5754 199924 437398  5619/5292/527    8038/1778    45  330   58.23)
ramon: poll                 wall=12.003s usage=12.049s mem=60828KiB load=1.00 rootload=1.00
(smt.stats   44   5967 207693 455023  5720/5295/527    8378/1781    45  330   58.70)
(smt.stats   45   6068 211623 473415  5737/5410/528    8566/1839    46  333   58.70)
(smt.stats   46   6179 217178 489864  5740/5413/528    8733/1839    46  333   58.70)
ramon: poll                 wall=13.000s usage=12.991s mem=61188KiB load=0.94 rootload=0.94
(smt.stats   47   6301 223068 508562  5744/5417/528    8924/1839    46  333   58.80)
(sat.ddfw       1      1   11.2461   1210001      5931         15            1      123)
(smt.stats   48   6435 227665 525052  5752/5425/530    9130/1922    47  341   58.80)
(smt.stats   49   6582 231715 534048  5760/5433/531    9328/1922    47  341   58.80)
ramon: poll                 wall=14.000s usage=13.958s mem=61204KiB load=0.97 rootload=0.97
(smt.stats   50   6743 238418 551547  5770/5443/531    9542/1922    47  341   58.89)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   51   6920 243569 566542  5886/5448/531    9902/1943    48  347   58.89)
ramon: poll                 wall=15.000s usage=14.962s mem=61204KiB load=1.00 rootload=1.00
(smt.stats   52   7114 252899 590325  5894/5567/532   10508/1987    49  353   58.99)
(sat.ddfw       1      1    10.527   1370001      6715         16            1      139)
(smt.stats   53   7327 267779 645634  5911/5570/532   10774/1988    49  353   59.08)
ramon: poll                 wall=16.007s usage=16.050s mem=61484KiB load=1.08 rootload=1.08
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8 := 17&144115188075855872
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 8 := 17&144115188075855872
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 6 := 16&144115188075855872
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 6 := 18&144115188075855872
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4 := 16&144115188075855872
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4 := 18&144115188075855872
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4 := 18&144115188075855872
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 4 := 18&144115188075855872
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 9&144115188075855872
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 9 := 10995116277750 >>l 2
(smt.stats   54   7561 272169 665283  5963/5593/534   11121/2079    50  363   59.08)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 10&144115188075855872
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 10 := 9457144510486 >>l 2
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 0 := 10&144115188075855872
lshr: (lshr[64] (bv2int %0) (mod (+ #109 #634) 64)) 10 := 9457144510486 >>l 2
(smt.stats   55   7662 274565 676954  6044/5648/559   11246/2081    50  363   59.08)
(smt.stats   56   7773 278415 688302  6045/5714/559   11375/2170    51  373   59.08)
(smt.stats   57   7895 285319 711907  6047/5716/559   11516/2170    51  373   59.18)
(smt.stats   58   8029 290380 723345  6052/5721/562   11685/2342    52  383   59.18)
(sat.ddfw       1      1   10.0437   1540001      7549         17            1      156)
ramon: poll                 wall=17.000s usage=17.044s mem=61740KiB load=1.00 rootload=1.01
(smt.stats   59   8176 298244 750228  6054/5723/562   11935/2342    52  383   59.27)
ramon: poll                 wall=18.000s usage=18.065s mem=62252KiB load=1.02 rootload=1.02
(smt.stats   60   8337 303958 766334  6120/5726/562   12176/2373    53  397   59.47)
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 83900416 := 83900416&536870912
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 83900416 := 83900416&536870912
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 83900416 := 83900416&536870912
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 83900416 := 83900416&536870912
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 83900416 := 83900416&536870912
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 83900416 := 83900416&536870912
band: (band[58] (lshr[64] (bv2int %0) (mod #635 64)) (if (= #645 63) 36893488147419103232 (if #647 18446744073709551616 #771))) 83900416 := 83900416&536870912
(sat.ddfw       1      1   9.52633   1720001      8431         18            1      174)
(smt.stats   61   8514 308957 783410  6280/5945/569   12566/2482    54  409   59.56)
ramon: poll                 wall=19.000s usage=19.066s mem=62252KiB load=1.00 rootload=1.00
(smt.stats   62   8708 315424 806033  6325/5954/570   12916/2486    54  409   60.17)
(smt.stats   63   8921 322302 836319  6369/6033/572   13255/2590    55  413   60.27)
ramon: poll                 wall=20.000s usage=20.063s mem=62508KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:14:15 2024
ramon: root.execname        z3
ramon: root.utime           20.070s
ramon: root.stime           0.010s
ramon: group.total          20.089s
ramon: group.utime          20.077s
ramon: group.stime          0.012s
ramon: group.mempeak        62764KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.029s
ramon: loadavg              1.00
