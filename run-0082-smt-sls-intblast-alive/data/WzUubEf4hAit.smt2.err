ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:39:20 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27976 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1380
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/WzUubEf4hAit.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             837044
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   108.696     10000        49          0            1        2)
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 44 := 1048576&44
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 44 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 44 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 44 := 1048576&44
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 44 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 44 := 1048576&44
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 44 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&44
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 8796093022252 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 21 := 22 << 21
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 46137344 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 21 := 22 << 21
(sat.ddfw       1      1   51.8187     20001        98          1            1        3)
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 45 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 0 := 22 << 21
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 46137344 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 0 := 22 << 21
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&45
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 45 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 1 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 2 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 2 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 4 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 8 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 16 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 32 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 64 := 1048576&46137344
(smt.stats    0    101   4223    384  1247/1035/103      96/11    10   23   52.07)
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 32 := 1048576&46137343
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 16 := 1048576&46137343
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137343
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137342
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&44040192
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 44040192 := 44 << 20
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 1 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 2 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 4 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 8 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 1048576 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 1 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 4 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 1048576 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 1048572 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 1048568 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 1048560 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 32 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 64 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 128 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 256 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 512 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 1024 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 2048 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 4096 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 8192 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 16384 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 32768 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 65536 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 131072 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 262144 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 524288 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 131072 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 131072 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 262144 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 262144 := 1048576&46137344
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 1048576&46137344
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 1048576 := 1048576&46137344
(smt.stats    1    202   6044   1420  1836/1672/268     230/48    15   60   52.79)
(smt.stats    2    313   8505   3392  2425/2204/271     382/122    17   65   53.07)
(sat.ddfw       1      1   49.7512     40001       196          2            1        5)
(smt.stats    3    414  11179   5850  2534/2308/280     515/169    19   67   53.17)
(sat.ddfw       1      1   41.7827     70001       343          3            1        8)
(smt.stats    4    525  13583   7335  2572/2340/285     637/177    20   84   53.26)
ramon: poll                 wall=1.000s usage=0.949s mem=55616KiB load=0.95 rootload=0.93
(smt.stats    5    647  17537  10839  2638/2380/290     776/219    22  100   53.56)
(sat.ddfw       1      1   35.7462    110001       539          4            1       12)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions     )
(smt.stats    6    748  19710  12780  2796/2565/291     872/225    23  114   53.56)
(sat.ddfw       1      1   32.4669    160000       784          5            1       17)
(smt.stats    7    859  23907  16217  2839/2582/292    1028/228    23  114   53.65)
ramon: poll                 wall=2.002s usage=2.010s mem=56096KiB load=1.06 rootload=1.06
(sat.ddfw       1      1    27.574    220001      1078          6            1       23)
(smt.stats    8    981  24396  16960  3057/2634/293    1171/236    24  117   53.84)
(smt.stats    9   1115  28261  20513  3180/2907/297    1413/240    24  117   53.93)
(sat.ddfw       1      1   24.1047    290001      1421          7            1       30)
ramon: poll                 wall=3.000s usage=3.006s mem=56352KiB load=1.00 rootload=1.00
(smt.stats   10   1216  32934  26174  3272/3018/298    1556/336    26  131   53.93)
(smt.stats   11   1327  36502  29874  3359/3128/300    1693/336    27  132   53.93)
(smt.stats   12   1449  39068  33692  3453/3222/301    1907/401    29  136   54.03)
(sat.ddfw       1      1   21.4075    370001      1813          8            1       38)
(smt.stats   13   1583  42537  38814  3513/3252/308    2072/429    30  148   54.16)
ramon: poll                 wall=4.000s usage=4.005s mem=56608KiB load=1.00 rootload=1.00
(smt.stats   14   1730  46420  43752  3600/3298/308    2241/435    30  148   54.16)
(smt.stats   15   1831  49336  47811  3750/3396/308    2349/437    30  148   54.25)
(sat.ddfw       1      1   20.2066    460001      2254          9            1       47)
(smt.stats   16   1942  51945  53630  3797/3559/310    2510/460    31  148   54.25)
(smt.stats   17   2064  54636  56890  3858/3576/310    2684/461    31  148   54.38)
(smt.stats   18   2198  57389  63662  3885/3644/310    2938/530    32  150   54.38)
ramon: poll                 wall=5.000s usage=5.406s mem=56556KiB load=1.40 rootload=1.40
(sat.ddfw       1      1   19.2567    560001      2745         10            1       57)
(smt.stats   19   2345  62791  70283  3948/3655/310    3302/537    32  150   54.59)
(smt.stats   20   2506  67484  76585  4146/3791/310    3499/541    32  150   54.59)
ramon: poll                 wall=6.000s usage=6.406s mem=56732KiB load=1.00 rootload=1.00
(smt.stats   21   2607  70125  79715  4223/3937/312    3629/671    33  152   54.69)
(smt.stats   22   2718  75547  90866  4257/4010/313    3769/672    33  152   54.69)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   23   2840  79738 100864  4290/4044/314    3910/712    34  167   54.84)
(sat.ddfw       1      1   17.2983    670001      3284         11            1       68)
(smt.stats   24   2974  83158 110183  4301/4055/318    4239/737    36  183   54.94)
(smt.stats   25   3121  90176 120293  4330/4078/319    4534/737    36  183   55.04)
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&8778913153020
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 8778913153020 := 17592185000044 << 34
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&8778913153020
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 17575006175228 := 17592185000044 << 34
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&8778913153020
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 42 #739 #743) 64)) 17575006175228 := 17592185000044 << 34
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 1 := 17179869184&1855425871872
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022206 := 8796092500022 << 35
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022206 := 8796092500022 << 35
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 8796093022206 := 8796092500022 << 35
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 7700989607936 := 8796092500022 << 35
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
shl: (shl[43] (bv2int %0) (+ 43 (* 8796093022207 #104))) 7700989607936 := 8796092500022 << 35
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 17179869184 := 17179869184&1855425871872
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 17179869184 := 17179869184&1855425871872
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 17179869184 := 17179869184&1855425871872
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 17179869184 := 17179869184&1855425871872
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 17179869184 := 17179869184&1855425871872
band: (band[43] (if (= #332 63) 1 (if #558 2 #732)) (shl[64] (* 2 #102) (mod #747 64))) 0 := 17179869184&1855425871872
band: (band[43] (if (= #108 42) 1 (if #578 2 #660)) (shl[43] (bv2int %0) (+ 43 #663))) 17179869184 := 17179869184&1855425871872
(smt.stats   26   3282  94673 130546  4455/4158/330    4738/804    37  188   55.37)
(smt.stats   27   3459 100429 145181  4483/4215/348    5093/821    39  193   55.47)
(smt.stats   28   3560 100703 147315  4497/4226/348    5199/821    39  193   55.47)
(smt.stats   29   3671 100945 151628  4498/4227/348    5325/821    39  193   55.47)
ramon: poll                 wall=7.000s usage=7.391s mem=57720KiB load=0.99 rootload=0.98
(smt.stats   30   3793 103167 156862  4521/4244/350    5465/833    40  195   55.57)
(smt.stats   31   3927 106303 165835  4761/4490/351    5645/855    41  201   55.66)
(sat.ddfw       1      1   15.6904    790001      3872         12            1       80)
(smt.stats   32   4074 110363 175127  4820/4495/351    5909/858    41  201   55.76)
ramon: poll                 wall=8.000s usage=8.363s mem=58136KiB load=0.97 rootload=0.98
(smt.stats   33   4235 114586 184431  4983/4588/351    6124/860    41  201   55.76)
ramon: poll                 wall=9.000s usage=9.313s mem=58172KiB load=0.95 rootload=0.95
(smt.stats   34   4412 118199 198497  5128/4832/352    6407/914    42  205   55.99)
(sat.ddfw       1      1   14.3774    920001      4509         13            1       93)
(smt.stats   35   4606 122992 213202  5253/4873/353    6752/922    42  205   55.99)
(smt.stats   36   4707 125424 222451  5349/5015/355    6912/957    43  218   56.09)
ramon: poll                 wall=10.000s usage=10.356s mem=58372KiB load=1.04 rootload=1.04
(smt.stats   37   4819 128963 235313  5404/5084/355    7094/958    43  218   56.09)
(smt.stats   38   4941 133022 245613  5442/5138/357    7321/992    44  219   56.19)
(smt.delete-inactive-clauses  :num-deleted-clauses 12)
(sat.ddfw       1      1   13.3156   1060001      5196         14            1      108)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   39   5075 136902 253764  5457/5183/358    7626/1072    45  235   56.29)
(smt.stats   40   5222 140930 264305  5470/5197/359    7851/1072    45  235   56.55)
ramon: poll                 wall=11.000s usage=11.286s mem=58580KiB load=0.93 rootload=0.93
(smt.stats   41   5383 147981 288494  5475/5202/359    8094/1072    45  235   56.55)
(smt.stats   42   5560 150580 299742  5522/5224/359    8318/1112    46  237   56.65)
ramon: poll                 wall=12.000s usage=12.254s mem=58776KiB load=0.97 rootload=0.97
(sat.ddfw       1      1   12.3396   1210001      5931         15            1      123)
(smt.stats   43   5754 154908 313447  5604/5255/359    8625/1114    46  237   56.74)
(smt.stats   44   5967 157759 327977  5648/5341/359    9028/1115    46  237   56.74)
ramon: poll                 wall=13.000s usage=13.253s mem=58900KiB load=1.00 rootload=1.00
(smt.stats   45   6068 161553 336282  5688/5384/359    9160/1117    46  237   56.84)
(smt.stats   46   6179 164876 344151  5781/5436/359    9367/1123    46  237   56.84)
(sat.ddfw       1      1   11.5749   1370001      6715         16            1      139)
(smt.stats   47   6301 168267 356329  5893/5616/360    9595/1234    47  237   56.84)
ramon: poll                 wall=14.000s usage=14.253s mem=59040KiB load=1.00 rootload=1.00
(smt.stats   48   6435 170944 363712  5960/5629/360    9800/1240    47  237   56.94)
(smt.stats   49   6582 174456 375834  6043/5726/360   10014/1242    47  237   56.94)
(smt.stats   50   6743 179040 387035  6125/5790/361   10319/1293    48  239   57.04)
ramon: poll                 wall=15.000s usage=15.379s mem=59252KiB load=1.13 rootload=1.11
(smt.stats   51   6920 184672 406186  6190/5901/361   10610/1293    48  239   57.04)
(smt.stats   52   7114 189574 421891  6241/5965/366   11091/1376    49  244   57.13)
(sat.ddfw       1      1   10.8974   1540001      7549         17            1      156)
ramon: poll                 wall=16.002s usage=16.367s mem=59500KiB load=0.99 rootload=0.99
(smt.stats   53   7327 196982 450034  6338/5991/366   11454/1381    49  244   57.23)
ramon: poll                 wall=17.000s usage=17.364s mem=59676KiB load=1.00 rootload=1.00
(smt.stats   54   7561 202126 459949  6548/6260/367   11746/1406    50  259   57.42)
(sat.ddfw       1      1   10.2892   1720001      8431         18            1      174)
(smt.stats   55   7662 204072 463530  6696/6361/367   11894/1408    50  259   57.42)
(smt.stats   56   7773 207069 470770  6746/6431/367   12039/1410    50  259   57.42)
ramon: poll                 wall=18.000s usage=18.326s mem=60052KiB load=0.96 rootload=0.96
(smt.stats   57   7895 210240 482715  6857/6488/367   12188/1411    50  259   57.95)
ramon: poll                 wall=19.000s usage=19.207s mem=60324KiB load=0.88 rootload=0.88
(smt.stats   58   8029 212265 486213  6960/6631/367   12363/1453    51  259   57.95)
(sat.ddfw       1      1   9.74859   1910001      9362         19            1      193)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   59   8176 214663 493832  7137/6734/367   12588/1453    51  259   58.04)
ramon: poll                 wall=20.000s usage=20.181s mem=60392KiB load=0.97 rootload=0.97
ramon: end                  Fri Nov  1 22:39:41 2024
ramon: root.execname        z3
ramon: root.utime           20.210s
ramon: root.stime           0.020s
ramon: group.total          20.243s
ramon: group.utime          20.219s
ramon: group.stime          0.024s
ramon: group.mempeak        62440KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.063s
ramon: loadavg              1.01
