ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:24:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30397 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1420
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/1y7arXAfizS4.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             221018
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   250/250     0/0  58       0    18.52   0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.84   0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 815 :time 0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.84   0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.84   0.00)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 470218.84 :time 0.00)
(sat.stats    102    745    0   250/250   102/28  58       0    18.84   0.00)
(sat.stats    106    768    1   250/250   106/32  58       0    18.84   0.00)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats        :decisions   :clauses/bin     :units        :memory       )
(sat.stats    109    837    2   250/250   109/35  58       0    18.84   0.00)
(sat.stats    112    928    3   250/250   112/38  58       0    18.84   0.01)
(sat.stats    115   1041    4   250/250   115/41  58       0    18.84   0.01)
(sat.stats    118   1164    5   250/250   118/44  58       0    18.84   0.01)
(sat.stats    121   1311    6   250/250   121/47  58       0    18.84   0.01)
(sat.stats    129   1653    7   250/250   129/53  58       0    18.94   0.01)
(sat.stats    132   1671    8   250/250   132/53  58       0    18.94   0.01)
(sat.stats    135   1712    9   250/250   135/53  58       0    18.94   0.01)
(sat.stats    138   1783   10   250/250   138/53  58       0    18.94   0.01)
(sat.stats    141   1855   11   250/250   141/55  58       0    18.94   0.01)
(sat.stats    144   1949   12   250/250   144/57  58       0    18.94   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    269   6385   19   250/250   269/122  58       0    19.15   0.03)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 2750 :time 0.00)
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 39 >>l 39
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&576460752302374912
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 39 := 39 >>l 39
(sat.stats    400   9279   20   276/275   397/205  77       0    19.64   0.06)
(sat.stats    523  11224   21   283/282   520/238  77       0    19.83   0.09)
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 36 := 36 >>l 36
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&576460752295034880
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 36 := 36 >>l 36
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 1 >>l 1
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&288230376151711744
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 1 := 1 >>l 1
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 4 >>l 4
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&540431955284459520
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 4 := 4 >>l 4
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 7 >>l 7
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&571957152676052992
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 7 := 7 >>l 7
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 9 >>l 9
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&575334852396580864
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 9 := 9 >>l 9
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 6 >>l 6
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&567453553048682496
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 6 := 6 >>l 6
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 8 >>l 8
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&574208952489738240
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 8 := 8 >>l 8
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 2 >>l 2
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&432345564227567616
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 2 := 2 >>l 2
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 3 >>l 3
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&504403158265495552
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 3 := 3 >>l 3
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 0 := 5 >>l 5
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&558446353793941504
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 5 := 5 >>l 5
(sat.stats    802  20167   60  1363/1324   836/321  77       0    21.31   0.16)
 (sat-cleaner :elim-literals 1 :elim-clauses 3 :cost 10354 :time 0.00)
 (sat-cleaner :elim-literals 3 :elim-clauses 1 :cost 10724 :time 0.00)
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 1 := 2&558446353793941504
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 2&558446353793941504
band: (band[59] (if (= #613 63) 5316911983139663473168484167411826688 (if #615 2658455991569831736584242083705913344 #739)) (lshr[64] (bv2int %0) (mod #743 64))) 1 := 558446353793941504&2
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 2&558446353793941504
band: (band[59] (if (= #613 63) 5316911983139663473168484167411826688 (if #615 2658455991569831736584242083705913344 #739)) (lshr[64] (bv2int %0) (mod #743 64))) 2 := 558446353793941504&2
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 2 := 2&558446353793941504
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 1 := 3&558446353793941504
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 4 := 5&558446353793941504
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 8 := 14&558446353793941504
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 14&558446353793941504
band: (band[59] (if (= #613 63) 5316911983139663473168484167411826688 (if #615 2658455991569831736584242083705913344 #739)) (lshr[64] (bv2int %0) (mod #743 64))) 4 := 558446353793941504&14
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 14&558446353793941504
band: (band[59] (if (= #613 63) 5316911983139663473168484167411826688 (if #615 2658455991569831736584242083705913344 #739)) (lshr[64] (bv2int %0) (mod #743 64))) 8 := 558446353793941504&14
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 16 := 16&558446353793941504
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 32 := 38&558446353793941504
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 38&558446353793941504
band: (band[59] (if (= #613 63) 5316911983139663473168484167411826688 (if #615 2658455991569831736584242083705913344 #739)) (lshr[64] (bv2int %0) (mod #743 64))) 16 := 558446353793941504&38
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 38&558446353793941504
band: (band[59] (if (= #613 63) 5316911983139663473168484167411826688 (if #615 2658455991569831736584242083705913344 #739)) (lshr[64] (bv2int %0) (mod #743 64))) 32 := 558446353793941504&38
(sat.stats   1224  46578   68 14408/14369  1611/746 149       0    24.57   0.41)
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 64 := 64&558446353793941504
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 64&558446353793941504
band: (band[59] (if (= #613 63) 5316911983139663473168484167411826688 (if #615 2658455991569831736584242083705913344 #739)) (lshr[64] (bv2int %0) (mod #743 64))) 64 := 558446353793941504&64
ramon: poll                 wall=1.000s usage=0.958s mem=28896KiB load=0.96 rootload=0.95
(sat.stats   1726  65623   78 25610/25570  2280/1080 149       0    30.39   1.28)
 (sat-cleaner :elim-literals 1 :elim-clauses 1 :cost 15269 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 15585 :time 0.00)
 (sat-cleaner :elim-literals 144 :elim-clauses 3 :cost 16184 :time 0.00)
ramon: poll                 wall=2.000s usage=1.955s mem=31192KiB load=1.00 rootload=0.98
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 19986 :time 0.00)
lshr: (lshr[59] (bv2int %0) (mod (bv2int %0) 59)) 576460752303423486 := 54 >>l 54
band: (band[59] (lshr[59] (bv2int %0) (mod #46 59)) (if (= #482 58) 83076749736557241768257565115809792 (if #484 41538374868278620884128782557904896 #598))) 0 := 0&576460752303423456
lshr: (lshr[64] (bv2int %0) (mod (+ #46 #742) 64)) 6 := 54 >>l 54
 (sat-cleaner :elim-literals 259 :elim-clauses 1 :cost 20882 :time 0.00)
ramon: poll                 wall=3.000s usage=2.952s mem=37908KiB load=1.00 rootload=1.00
ramon: poll                 wall=4.000s usage=3.950s mem=47980KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.946s mem=54736KiB load=1.00 rootload=1.00
(sat.stats :conflicts  :restarts          :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin            :units         :memory       )
(sat.stats   3220 169755  137 120204/120161  6814/4280 259       0    54.77   5.04)
ramon: poll                 wall=6.000s usage=5.943s mem=60060KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.942s mem=60860KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.942s mem=61900KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.941s mem=64696KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.941s mem=76744KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.940s mem=80780KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.940s mem=84592KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.939s mem=87340KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.939s mem=90864KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.938s mem=92920KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.938s mem=97308KiB load=1.00 rootload=0.99
ramon: poll                 wall=17.000s usage=16.937s mem=99620KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.937s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.937s mem=101MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.937s mem=103MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:24:22 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.040s
ramon: group.total          19.987s
ramon: group.utime          19.944s
ramon: group.stime          0.044s
ramon: group.mempeak        103MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.051s
ramon: loadavg              1.00
