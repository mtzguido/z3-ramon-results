ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:34:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25365 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1390
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YCI41DPLrQ1o.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             72892
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   2779    459  1191/947/102     101/14     7   17   19.08)
(smt.stats    1    202   4448    710  1719/1532/102     213/22     7   17   19.08)
(smt.stats    2    313   7209   1870  1906/1699/102     338/26     7   17   19.18)
(smt.stats    3    414   8933   2981  2123/1962/106     474/84     8   22   19.28)
(smt.stats    4    525  10157   4103  2172/1997/109     593/121     9   28   19.28)
(smt.stats    5    647  12417   5969  2333/2153/109     712/121     9   28   19.47)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2 := 17179869184&3
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 17179869184&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 3 := 2 << 34
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 17179869184&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 3 := 2 << 34
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 17179869184&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 3 := 2 << 34
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 17179869184&34359738367
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 17179869184&34359738367
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 17179869184&34359738367
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 17179869184&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 34359738369 := 4 << 34
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  13478   7529  2606/2356/124     801/157    12   32   19.76)
(smt.stats    7    859  14042   8360  2864/2458/124     925/157    12   32   19.86)
(smt.stats    8    981  15552  11357  2974/2762/132    1033/171    15   41   19.86)
(smt.stats    9   1115  17865  14144  3004/2768/133    1182/175    16   46   19.96)
(smt.stats   10   1216  19447  16167  3044/2805/133    1287/197    17   48   20.05)
(smt.stats   11   1327  21211  19645  3089/2847/133    1402/198    17   48   20.05)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  23289  22673  3120/2907/135    1530/210    18   50   20.16)
(smt.stats   13   1583  25517  26694  3171/2928/135    1677/211    18   50   20.16)
(smt.stats   14   1730  27627  31927  3181/2964/135    1828/211    18   50   20.16)
(smt.stats   15   1831  29117  35029  3187/2970/135    1930/211    18   50   20.25)
(smt.stats   16   1942  32179  40891  3192/2978/135    2053/211    18   50   20.45)
(smt.stats   17   2064  33256  44701  3202/2988/136    2163/239    19   51   20.45)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 1717986918400 := 100 << 11
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 1717986918400 := 100 << 11
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 1717986918400 := 100 << 11
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 1717986918400 := 112 << 11
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2048 := 2048&34359738367
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 1752346656767 := 116 << 11
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&0
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 34359738367 := 419430400 << 12
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&0
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 34359738367 := 419430400 << 12
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&0
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 34359738367 := 419430400 << 12
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&0
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 34359738367 := 419430400 << 12
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&0
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 419430401 := 419430400 << 12
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2048 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2047 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 4 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 16 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 32 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 64 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 128 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 256 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 512 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 128 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 512 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 1024 := 2048&419536896
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 512 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 128 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 128 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 128 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 128 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 128 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 4 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 16 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 4 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 4 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 16 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 32 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 64 := 2048&4096
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2048&4096
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 419430402 := 419430401 << 12
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 1 := 2048&419536896
(smt.stats   18   2198  36879  51669  3341/3087/220    2311/244    21   64   20.74)
(smt.stats   19   2345  38735  55924  3357/3117/250    2478/260    22   78   20.74)
(smt.stats   20   2506  40766  60753  3393/3175/255    2727/290    24   82   20.84)
(smt.stats   21   2607  42182  66255  3405/3175/255    2843/290    24   82   20.93)
ramon: poll                 wall=1.000s usage=0.921s mem=22132KiB load=0.92 rootload=0.90
(smt.stats   22   2718  44478  70118  3476/3242/255    2982/326    25   82   20.93)
(smt.stats   23   2840  47609  76314  3497/3263/256    3154/352    26   84   21.03)
(smt.stats   24   2974  49388  83844  3525/3285/266    3292/353    27  101   21.03)
(smt.stats   25   3121  50839  89342  3527/3287/266    3466/353    27  101   21.12)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2 := 2097152&33829029859
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 12 := 2097152&33829029869
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 12 := 2097152&12
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8 := 2097152&8
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8 := 2097152&8
(smt.stats   26   3282  53353  98480  3655/3350/273    3690/389    28  109   21.22)
(smt.stats   27   3459  55109 110016  3887/3484/275    4011/404    29  115   21.51)
(smt.stats   28   3560  56995 115848  3912/3673/275    4676/434    30  119   21.51)
(smt.stats   29   3671  59697 126526  3926/3679/278    5241/684    31  133   21.75)
(smt.stats   30   3793  61764 135119  4016/3707/278    5562/684    31  133   21.85)
(smt.stats   31   3927  64258 149530  4295/4050/285    5927/834    33  134   22.04)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  66997 159990  4352/4062/287    6379/837    33  134   22.04)
(smt.stats   33   4235  70054 172771  4452/4124/287    6773/1099    34  149   22.14)
(smt.stats   34   4412  72553 193932  4554/4237/287    7028/1103    34  149   22.14)
(smt.stats   35   4606  77616 212970  4567/4318/288    8463/1179    35  153   22.34)
ramon: poll                 wall=2.003s usage=1.922s mem=23624KiB load=1.00 rootload=1.01
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2147483635 := 2147483648&2147483636
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2147483635 := 2147483648&2147483636
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2147483634 := 2147483648&2147483647
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2147483634 := 2147483648&2147483647
(smt.stats   36   4707  80149 219469  4623/4324/288    8859/1182    35  153   22.44)
(smt.stats   37   4818  81649 225873  4799/4393/288    9090/1183    35  153   22.53)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2147472320 := 2147483648&2147475455
(smt.stats   38   4940  84244 240828  5084/4694/288    9780/1184    35  153   22.63)
(smt.delete-inactive-clauses  :num-deleted-clauses 95)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   39   5074  85650 253567  5106/4859/288   10690/1184    35  153   22.82)
(smt.stats   40   5221  88318 270479  5121/4874/288   11364/1184    35  153   22.82)
(smt.stats   41   5382  93134 297179  5126/4879/288   12082/1184    35  153   22.91)
(smt.stats   42   5559  94922 316389  5147/4900/293   12503/2154    36  212   23.01)
(smt.stats   43   5753  98920 337590  5155/4908/293   12855/2154    36  212   23.11)
(smt.stats   44   5966 105123 373520  5156/4909/293   13051/2265    37  252   23.11)
(smt.stats   45   6067 106608 377959  5175/4910/293   13379/2266    37  252   23.11)
(smt.stats   46   6178 107771 384293  5198/4935/293   13494/2266    37  252   23.11)
(smt.stats   47   6300 109474 403313  5209/4954/293   13815/2266    37  252   23.11)
(smt.stats   48   6434 112643 425533  5213/4966/293   13988/2266    37  252   23.11)
ramon: poll                 wall=3.000s usage=2.918s mem=24648KiB load=1.00 rootload=0.99
(smt.stats   49   6581 115198 440872  5225/4966/293   14196/2266    37  252   23.21)
(smt.stats   50   6742 119283 458760  5236/4985/296   14356/2343    38  260   23.21)
(smt.stats   51   6919 122795 471794  5357/4999/296   14628/2344    38  260   23.21)
(smt.stats   52   7113 125266 485436  5443/5141/296   15109/2347    38  260   23.31)
(smt.stats   53   7326 127405 503737  5570/5235/296   15351/2349    38  260   23.31)
(smt.stats   54   7560 129994 524666  5579/5332/296   15812/2349    38  260   23.40)
(smt.stats   55   7661 133555 548209  5584/5337/297   16110/2518    39  265   23.40)
(smt.stats   56   7772 137941 579206  5584/5337/297   16222/2518    39  265   23.40)
(smt.stats   57   7894 141385 611398  5584/5337/297   16428/2518    39  265   23.40)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 8&32
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 34359738400 := 67645734938 << 3
(smt.stats   58   8028 144589 638195  5588/5341/298   17048/2559    40  283   23.50)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   59   8175 146746 648694  5747/5352/298   17475/2559    40  283   23.60)
ramon: poll                 wall=4.000s usage=3.918s mem=25160KiB load=1.00 rootload=1.00
(smt.stats   60   8336 148067 672634  5794/5544/298   17651/2559    40  283   23.69)
(smt.stats   61   8513 149408 697210  5799/5551/298   18249/2559    40  283   23.83)
(smt.stats   62   8707 154351 717582  5939/5553/298   18788/2562    40  283   23.83)
(smt.stats   63   8920 160483 760349  6269/5740/298   19352/2563    40  283   23.93)
(smt.stats   64   9154 171084 828779  6298/6050/298   19863/2563    40  283   24.02)
ramon: poll                 wall=5.000s usage=4.918s mem=25416KiB load=1.00 rootload=1.00
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8589934592 := 8589934592&17177778303
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 567592177411037311 := 0 << 33
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8589934592 := 8589934592&17177778303
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 567592177411037311 := 0 << 33
(smt.stats   65   9411 180347 911590  6323/6066/298   20878/2565    40  283   24.12)
(smt.stats   66   9512 182258 927027  6374/6088/303   21361/3215    41  284   24.21)
(smt.stats   67   9623 183165 937836  6405/6131/304   21536/3215    41  284   24.21)
(smt.stats   68   9745 185628 953817  6463/6174/304   21932/3217    41  284   24.31)
(smt.stats   69   9879 187987 967737  6497/6214/304   22564/3218    41  284   24.71)
(smt.delete-inactive-clauses  :num-deleted-clauses 1546)
(smt.stats   70  10026 189160 977003  6540/6283/304   21223/3304    42  286   24.71)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   71  10187 193713 1023249  6589/6291/304   21522/3305    42  286   24.71)
(smt.stats   72  10364 198525 1078600  6644/6376/304   21710/3307    42  286   24.71)
ramon: poll                 wall=6.000s usage=5.918s mem=26308KiB load=1.00 rootload=1.00
(smt.stats   73  10558 202014 1105511  6663/6403/304   22225/3307    42  286   24.80)
(smt.stats   74  10771 207275 1136320  6766/6424/304   22481/3319    42  286   24.80)
(smt.stats   75  11005 210131 1152943  6867/6592/304   22758/3319    42  286   24.90)
(smt.stats   76  11262 212683 1167275  6911/6658/305   23044/3521    43  288   24.90)
(smt.stats   77  11544 219302 1201944  7153/6663/305   24084/3524    43  288   25.00)
(smt.stats   78  11645 220992 1212316  7191/6920/305   24229/3525    43  288   25.09)
(smt.stats   79  11756 223065 1234991  7246/6941/305   24379/3527    43  288   25.09)
ramon: poll                 wall=7.000s usage=6.918s mem=26564KiB load=1.00 rootload=1.00
(smt.stats   80  11878 225943 1262321  7254/6993/305   24510/3527    43  288   25.09)
(smt.stats   81  12012 228091 1282296  7299/7012/305   25038/3530    43  288   25.09)
(smt.stats   82  12159 229992 1296851  7435/7059/305   25203/3533    43  288   25.19)
(smt.stats   83  12320 231354 1320445  7458/7201/305   25388/3533    43  288   25.19)
(smt.stats   84  12497 233147 1337609  7473/7213/305   25656/3534    43  288   25.19)
(smt.stats   85  12691 236316 1353028  7485/7229/305   25856/3534    43  288   25.19)
(smt.stats   86  12904 239931 1365536  7515/7237/305   26093/3535    43  288   25.29)
(smt.stats   87  13138 243134 1399306  7549/7288/305   27086/3535    43  288   25.29)
ramon: poll                 wall=8.000s usage=7.918s mem=26820KiB load=1.00 rootload=1.00
(smt.stats   88  13395 246797 1419477  7671/7303/305   27532/3539    43  288   25.60)
(smt.stats   89  13677 251056 1438769  7800/7485/305   27916/3543    43  288   25.60)
(smt.stats   90  13987 258218 1501705  7847/7560/305   28781/3543    43  288   25.70)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   91  14088 262999 1533473  7858/7602/305   29162/3543    43  288   25.80)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8 := 8&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 36037661831462920 := 47278194690 << 3
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8 := 8&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 36037661831462920 := 59039023184 << 3
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8 := 8&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 36037661831462920 := 59039023184 << 3
(smt.stats   92  14199 264770 1541681  7887/7612/305   29317/3545    43  288   25.80)
(smt.stats   93  14321 266872 1549582  7907/7647/311   29447/4192    44  291   25.80)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2 := 2&4095
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 34359742463 := 4294967808 << 1
(smt.stats   94  14455 268324 1561086  7921/7663/313   29600/4192    44  291   25.80)
(smt.stats   95  14602 268972 1578019  7936/7679/318   29814/4192    44  291   25.80)
ramon: poll                 wall=9.000s usage=8.918s mem=27332KiB load=1.00 rootload=1.00
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&15
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 68719476751 := 3221225474 << 18
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 36037593111986177 := 3221225474 << 18
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 1610612738 := 1610612737 << 19
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 1610612738 := 1610612737 << 19
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 1610612738 := 1610612737 << 19
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 34359738367 := 1610612737 << 19
(smt.stats   96  14763 271403 1595240  7989/7685/318   30066/4194    44  291   25.89)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 262144 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 262144 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 262143 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 262142 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 4 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 8 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 16 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 32 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 64 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 128 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 256 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 512 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 1024 := 262144&524288
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 262144&524288
band: (band[35] (if (= #109 34) 1 (if #558 2 #624)) (shl[35] (bv2int %0) (+ 35 #627))) 2048 := 262144&524288
(smt.stats   97  14940 272038 1598378  8156/7756/328   30247/4233    45  300   26.77)
(smt.delete-inactive-clauses  :num-deleted-clauses 72)
(smt.stats   98  15134 277845 1630104  8581/8287/433   30778/4233    45  300   26.67)
(smt.stats   99  15347 286535 1704519  8603/8305/433   31181/4233    45  300   26.67)
(smt.stats  100  15581 292807 1738426  8665/8385/435   31952/4688    46  321   26.77)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2&14214491795
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2&14214491797
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 14214491797 := 56915257342 << 1
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2&14214491794
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2&14214491793
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 14214491793 := 56915257342 << 1
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2&14214491794
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2&14214491792
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 14214491792 := 56915257342 << 1
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2 := 2&15047079952
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2 := 2&15047079952
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 2 := 2&15047079952
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 0 := 2&15047079952
shl: (shl[35] (bv2int %0) (+ 35 (* 34359738367 #105))) 10203174468 := 3761769988 << 2
(smt.stats  101  15838 300055 1772158  8783/8460/436   32351/4693    46  321   26.96)
(smt.stats  102  16120 304144 1802345  8840/8517/450   32955/4803    47  335   27.16)
ramon: poll                 wall=10.000s usage=9.918s mem=28868KiB load=1.00 rootload=0.99
(smt.stats  103  16430 307743 1836416  8859/8547/450   33391/4807    47  335   27.26)
(smt.stats  104  16770 315685 1869336  8987/8576/450   33764/5015    48  352   27.26)
(smt.stats  105  16871 318337 1883238  9026/8689/450   33920/5015    48  352   27.26)
(smt.stats  106  16982 320340 1902294  9053/8741/450   34076/5015    48  352   27.26)
(smt.stats  107  17104 320732 1908128  9061/8759/450   34232/5015    48  352   27.26)
(smt.stats  108  17238 321168 1918672  9061/8760/454   34391/5076    49  353   27.26)
(smt.stats  109  17385 324537 1934355  9064/8762/454   34604/5076    49  353   27.26)
(smt.stats  110  17546 326983 1960367  9105/8769/454   35070/5077    49  353   27.36)
ramon: poll                 wall=11.000s usage=10.918s mem=28868KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  111  17723 330411 1999107  9117/8816/454   35382/5077    49  353   27.36)
(smt.stats  112  17917 333192 2029567  9154/8821/454   35744/5077    49  353   27.55)
(smt.stats  113  18130 340299 2079824  9335/8860/456   36737/5598    50  363   27.74)
(smt.stats  114  18364 346389 2134762  9352/9041/456   37062/5600    50  363   27.74)
(smt.stats  115  18621 352750 2176544  9378/9070/456   37929/5600    50  363   27.84)
ramon: poll                 wall=12.000s usage=11.918s mem=29636KiB load=1.00 rootload=1.00
(smt.stats  116  18903 362787 2229715  9478/9083/456   38596/5604    50  363   27.93)
(smt.stats  117  19213 372130 2339240  9577/9195/457   39482/5982    51  369   28.12)
(smt.stats  118  19553 376282 2419565  9631/9318/457   40096/5983    51  369   28.12)
ramon: poll                 wall=13.000s usage=12.918s mem=29868KiB load=1.00 rootload=1.00
(smt.stats  119  19926 377562 2455879  9638/9336/458   40880/6080    52  369   28.22)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  120  20027 379711 2461122  9730/9337/458   41095/6082    52  369   28.39)
(smt.stats  121  20138 382387 2482059  9899/9483/458   41410/6084    52  369   28.49)
(smt.stats  122  20260 383449 2490797 10012/9683/458   41585/6084    52  369   28.59)
(smt.stats  123  20394 386835 2538773 10055/9753/458   41871/6084    52  369   28.59)
ramon: poll                 wall=14.000s usage=13.917s mem=30208KiB load=1.00 rootload=1.00
(smt.stats  124  20541 387783 2550385 10068/9766/459   42290/6235    53  375   28.59)
(smt.stats  125  20702 390606 2570768 10072/9770/459   42806/6235    53  375   28.68)
(smt.stats  126  20879 397702 2641859 10088/9776/459   43116/6235    53  375   28.68)
(smt.stats  127  21073 401120 2664042 10151/9803/459   43623/6237    53  375   28.78)
(smt.stats  128  21286 405706 2716319 10196/9849/459   43892/6238    53  375   28.78)
ramon: poll                 wall=15.000s usage=14.917s mem=30520KiB load=1.00 rootload=1.00
(smt.stats  129  21520 412718 2777783 10228/9926/460   44690/6441    54  381   28.97)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8388608 := 8388608&8388613
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 27028229202116613 := 7517766018 << 23
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 8388608 := 8388608&8388613
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 34 #703 #707) 64)) 27028229202116613 := 7517766018 << 23
(smt.stats  130  21777 418449 2810457 10367/9972/460   45271/6442    54  381   29.16)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  131  22059 420435 2845124 10399/10081/465   46016/6442    54  381   29.26)
(smt.stats  132  22369 432158 2932711 10479/10082/465   47137/6442    54  381   29.45)
ramon: poll                 wall=16.000s usage=15.917s mem=31044KiB load=1.00 rootload=1.00
(smt.stats  133  22709 441429 3003170 10535/10166/467   47715/6721    55  388   29.45)
(smt.stats  134  23082 451397 3102190 10775/10426/468   48887/6756    56  391   29.64)
(smt.stats  135  23492 463072 3202689 10826/10509/470   49804/6966    57  396   29.74)
ramon: poll                 wall=17.000s usage=16.917s mem=31472KiB load=1.00 rootload=1.00
(smt.stats  136  23593 464602 3227013 10832/10515/470   50590/6966    57  396   29.93)
(smt.stats  137  23704 467164 3261819 10834/10517/470   50851/6966    57  396   29.93)
(smt.stats  138  23826 469409 3303350 10837/10520/470   51007/6966    57  396   30.02)
(smt.stats  139  23960 470127 3322412 10881/10556/470   51149/6966    57  396   30.02)
(smt.stats  140  24107 470702 3349060 10901/10571/472   51325/7118    58  397   30.02)
(smt.stats  141  24268 474472 3383388 10911/10576/472   51633/7118    58  397   30.02)
(smt.stats  142  24445 478234 3433132 10951/10621/477   52178/7142    59  448   30.12)
(smt.stats  143  24639 482212 3459364 11137/10634/480   52754/7145    59  448   30.32)
ramon: poll                 wall=18.000s usage=17.917s mem=32092KiB load=1.00 rootload=1.00
(smt.stats  144  24852 487679 3522083 11413/10867/480   53409/7146    59  448   30.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  145  25086 493816 3578506 11604/11159/484   54248/7147    59  448   30.61)
(smt.stats  146  25343 500820 3663215 11636/11294/484   54601/7397    60  457   30.61)
(smt.stats  147  25625 507230 3727056 11662/11316/484   56691/7397    60  457   30.89)
ramon: poll                 wall=19.000s usage=18.916s mem=32696KiB load=1.00 rootload=1.00
(smt.stats  148  25935 513208 3780918 11668/11326/484   57547/7397    60  457   31.64)
(smt.stats  149  26275 522947 3831518 11717/11343/485   58790/7791    61  468   31.74)
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 1 := 268435456&8589934594
band: (band[35] (if (= #294 63) 1 (if #536 2 #696)) (shl[64] (* 2 #277) (mod #711 64))) 16 := 268435456&8589934594
(smt.stats  150  26648 531666 3924605 11906/11393/485   60180/7795    61  468   32.02)
ramon: poll                 wall=20.000s usage=19.914s mem=33820KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:35:14 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.020s
ramon: group.total          19.999s
ramon: group.utime          19.975s
ramon: group.stime          0.024s
ramon: group.mempeak        35840KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.085s
ramon: loadavg              1.00
