ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:58:03 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40679 MiB
ramon: sys.mem.avail        61707 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/qi624EBycPYK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3090006
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4094   1290  1119/969/98     102/16     4   15   19.06)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255429 := 1038255429&1038255429
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1038255429 := 1038255430 << 30
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255429 := 1038255430&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255428 := 1038255428&1038255429
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1038255428 := 1038255429 << 30
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255428 := 1038255428&1038255429
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1038255428 := 1038255429 << 30
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255429 := 1038255429&1038255429
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1038255429 := 1038255430 << 30
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 2&1038255429
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 2 := 3 << 30
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255429 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255428 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 2 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 1 := 17179869185 << 30
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 1038255429 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 1038255428 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 1038255424 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 2 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 8 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 16 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 32 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 64 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 128 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 256 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 512 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 1024 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 2048 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 4096 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 8192 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1073741824&1038255429
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 16384 := 1073741824&1038255429
(smt.stats    1    202   5650   2070  1786/1425/98     210/20     4   15   19.93)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255424 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255289 := 1073741824&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 98432 := 19327352832&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 98312 := 21474836480&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255424 := 19327352832&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255416 := 19327352832&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255408 := 19327352832&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255360 := 36507222016&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255104 := 36507222016&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038254080 := 36507222016&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038221312 := 36507222016&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255104 := 67645734912&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 98312 := 67645734912&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 98320 := 36507222016&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 98336 := 36507222016&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 98368 := 36507222016&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 98368 := 36507222016&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038255104 := 19327352832&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038254592 := 19327352832&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1038254592 := 19327352832&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 102528 := 19327352832&1038255429
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 102528 := 19327352832&1038255429
(smt.stats    2    313   7676   4109  2046/1764/217     445/67     7   41   20.12)
(smt.stats    3    415  10021   6745  2380/2207/269     765/167    11   59   20.21)
(smt.stats    4    527  12321   8791  2772/2506/275     872/326    13   71   20.41)
(smt.stats    5    649  14297  10786  2968/2583/277    1153/346    14   73   20.59)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    750  17042  13503  3273/2854/277    1435/347    14   73   20.68)
(smt.stats    7    861  19310  18952  3585/3071/277    1894/352    14   73   20.78)
(smt.stats    8    983  21534  23746  3611/3395/285    2281/432    16   85   20.88)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 102400 := 102400&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 102400 := 102400&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 101376 := 101376&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 100352 := 100352&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 100352 := 100352&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 100352 := 100352&132896694980
(smt.stats    9   1117  27109  35374  3757/3425/285    2752/508    17   85   20.98)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 16384 := 102400&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 102400&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 102400&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 106496&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 106496&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 114820&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 114820&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 114819&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 114819&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 102400&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 102400&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 106496&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 131072&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 134912&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 133120&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 139264&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 139264&132896694980
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 8192&132896694980
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 274877915136 := 68719477116 << 37
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 8192&132896694980
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 274877915136 := 68719477116 << 37
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 8192&132896694980
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 274877915136 := 68719477116 << 37
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 8192 := 270336&132896694980
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 274878177280 := 68719477116 << 37
(smt.stats   10   1218  31442  48309  3975/3748/381    2988/777    20  109   21.31)
ramon: poll                 wall=1.000s usage=0.997s mem=22540KiB load=1.00 rootload=0.98
(smt.stats   11   1329  35171  53959  4056/3769/381    3270/780    20  109   21.40)
(smt.stats   12   1451  37931  57195  4181/3898/381    3424/786    20  109   21.50)
(smt.stats   13   1585  41459  63799  4238/3985/386    4066/845    21  127   21.79)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   14   1732  47412  78428  4333/4092/393    4957/1223    23  146   21.98)
(smt.stats   15   1833  52400 101187  4366/4127/395    5350/1828    25  152   22.19)
(smt.stats   16   1944  54947 114131  4529/4252/406    5743/1844    26  161   22.39)
(smt.stats   17   2066  58751 124222  4553/4259/408    6219/2024    27  195   22.48)
(smt.stats   18   2200  64663 142410  4783/4296/408    6602/2031    27  195   22.67)
(smt.stats   19   2347  71052 160180  4859/4517/408    7225/2036    27  195   22.77)
ramon: poll                 wall=2.000s usage=1.997s mem=24204KiB load=1.00 rootload=1.00
(smt.stats   20   2508  74532 172490  5010/4732/410    7926/2240    28  196   22.96)
(smt.stats   21   2609  77537 184703  5045/4733/410    8071/2243    28  196   22.96)
(smt.stats   22   2720  82307 200224  5162/4777/410    8485/2381    29  200   23.06)
(smt.stats   23   2842  87099 217884  5405/4927/410    8892/2387    29  200   23.25)
(smt.stats   24   2976  92547 233853  5577/5171/410    9708/2388    29  200   23.35)
(smt.stats   25   3123  96627 245186  5656/5321/414   11035/2651    30  202   23.56)
ramon: poll                 wall=3.000s usage=2.997s mem=24864KiB load=1.00 rootload=1.00
(smt.stats   26   3284 101132 262223  5886/5449/414   11887/2660    30  202   23.66)
(smt.stats   27   3461 104734 282438  6153/5721/414   12981/3003    31  213   23.95)
(smt.stats   28   3562 107597 292695  6230/5902/418   14041/3209    32  222   24.04)
(smt.stats   29   3673 111525 313396  6337/6059/419   14885/3306    33  223   24.14)
ramon: poll                 wall=4.000s usage=3.996s mem=25516KiB load=1.00 rootload=1.00
(smt.stats   30   3795 115362 326751  6386/6073/419   15307/3309    33  223   24.23)
(smt.stats   31   3929 119303 338413  6534/6156/419   15802/3313    33  223   24.33)
(smt.stats   32   4076 121272 358001  6550/6272/419   16175/3314    33  223   24.33)
(smt.stats   33   4237 122833 379530  6569/6290/419   17612/3314    33  223   24.52)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   34   4414 128926 401870  6651/6372/426   18700/4100    34  236   24.75)
(smt.stats   35   4608 132612 430858  6675/6396/427   19221/4100    34  236   24.75)
(smt.stats   36   4709 135326 446115  6680/6401/427   19277/4182    35  320   24.84)
(smt.stats   37   4820 137540 462328  6717/6438/428   20250/4183    35  320   24.94)
ramon: poll                 wall=5.000s usage=4.996s mem=26320KiB load=1.00 rootload=1.00
(smt.stats   38   4942 141300 491298  6747/6468/430   21442/4533    36  351   25.04)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 4864&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 87136296506112 := 257832255490 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 87136296501248 := 257832255489 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 87136296501248 := 257832255490 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 87136296501248 := 257832255489 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 87136296501248 := 257832255489 << 1
(smt.delete-inactive-clauses  :num-deleted-clauses 299)
(smt.stats   39   5076 143277 504184  6777/6497/437   21534/4537    36  351   25.04)
(smt.stats   40   5223 147028 525238  6815/6510/437   21781/4543    36  351   25.13)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 256&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 375&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 374&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 368&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 360&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 319&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 264&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 264&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 264&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 264&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 296&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 328&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 360&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 318&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 318&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 312&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 312&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 312&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 520&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 1064&495
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 87136296502312 := 257832255489 << 9
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 584&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 616&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 584&495
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 40 := 552&495
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 132216273240616 := 257832255489 << 9
(smt.stats   41   5384 149701 538817  7075/6616/479   22082/4642    37  361   25.32)
(smt.stats   42   5561 153470 570350  7283/7000/485   22636/4647    37  361   25.61)
(smt.stats   43   5755 164976 707324  7292/7010/485   22931/4823    38  389   25.61)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1 := 154618822656&15
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1 := 154618822657&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 154618822657 := 154618822657 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1 := 154618650113&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 154618650113 := 154618822656 << 4
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1 := 154618626049&15
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 154618626049 := 154618822656 << 4
ramon: poll                 wall=6.000s usage=5.996s mem=27152KiB load=1.00 rootload=0.99
(smt.stats   44   5968 170437 762185  7392/7027/489   23146/4857    39  651   25.80)
(smt.stats   45   6069 172067 768912  7463/7157/494   23298/4858    39  651   25.80)
(smt.stats   46   6180 175960 790650  7472/7170/494   23415/4858    39  651   25.80)
(smt.stats   47   6302 176595 794377  7537/7233/494   23540/4955    40  652   26.00)
(smt.stats   48   6436 180186 819272  8030/7672/494   23711/4956    40  652   26.00)
(smt.stats   49   6583 182962 843164  8106/7762/495   24269/4961    40  652   26.00)
(smt.stats   50   6744 186685 865631  8147/7832/495   24652/5163    41  653   26.09)
(smt.stats   51   6921 189790 879215  8229/7873/495   24847/5167    41  653   26.09)
ramon: poll                 wall=7.000s usage=6.995s mem=27720KiB load=1.00 rootload=1.00
(smt.stats   52   7115 194850 909451  8293/7981/495   25131/5168    41  653   26.19)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 1 := 1&16612086872
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1&16612086872
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1099511627777 := 2 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 1&16612086872
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1099511627777 := 2 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 0&16612086872
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1099511627776 := 1 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 0&16612086872
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 1099511627776 := 7 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 17179869184&16612086872
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 8 := 1 << 34
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 17179869184&16612086872
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 8 := 1 << 34
(smt.stats   53   7328 199698 928999  8446/8036/502   25492/5268    42  659   26.44)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   54   7562 204955 941504  8678/8254/507   25941/5269    42  659   26.63)
ramon: poll                 wall=8.000s usage=7.995s mem=28200KiB load=1.00 rootload=1.00
(smt.stats   55   7663 210137 960379  8721/8369/507   26103/5270    42  659   26.73)
(smt.stats   56   7774 214116 973548  8772/8429/508   26388/5346    43  662   26.73)
(smt.stats   57   7896 219581 1008044  8853/8479/508   27155/5347    43  662   26.82)
(smt.stats   58   8030 223855 1024722  8905/8567/508   27539/5498    44  662   26.95)
(smt.stats   59   8177 230022 1042142  8964/8596/508   27719/5498    44  662   26.95)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   60   8338 238134 1071617  9041/8648/508   28161/5499    44  662   27.05)
ramon: poll                 wall=9.000s usage=8.994s mem=28464KiB load=1.00 rootload=1.00
(smt.stats   61   8515 243847 1091531  9106/8729/509   28576/5612    45  665   27.15)
(smt.stats   62   8709 250634 1152376  9179/8805/509   29306/5614    45  665   27.24)
(smt.stats   63   8922 260982 1223466  9207/8886/510   30072/5761    46  680   27.62)
(smt.stats   64   9156 266133 1251559  9244/8900/510   30494/5762    46  680   27.62)
ramon: poll                 wall=10.000s usage=9.994s mem=29112KiB load=1.00 rootload=1.00
(smt.stats   65   9413 272250 1320158  9346/9023/513   30900/5921    47  680   27.62)
(smt.stats   66   9514 274456 1339101  9400/9065/513   31472/5921    47  680   27.72)
(smt.stats   67   9625 278602 1370736  9452/9065/517   31726/5925    47  680   27.72)
(smt.stats   68   9747 282606 1402536  9528/9140/517   31936/6099    48  687   27.81)
(smt.stats   69   9881 286614 1435067  9543/9208/520   32178/6099    48  687   27.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 65)
(smt.stats   70  10028 289465 1460512  9554/9219/520   32408/6113    49  691   27.91)
(smt.stats   71  10189 294183 1532657  9576/9228/520   32611/6114    49  691   28.00)
ramon: poll                 wall=11.002s usage=10.995s mem=29560KiB load=1.00 rootload=1.00
(smt.stats   72  10366 298493 1562481  9669/9262/520   32801/6115    49  691   28.00)
(smt.stats   73  10560 303687 1609124  9733/9344/520   33303/6118    49  691   28.10)
(smt.stats   74  10773 313718 1707521  9760/9421/520   33777/6118    49  691   28.19)
(smt.stats   75  11007 323306 1776841  9781/9446/520   35855/6118    49  691   28.38)
ramon: poll                 wall=12.000s usage=11.993s mem=29936KiB load=1.00 rootload=1.00
(smt.stats   76  11264 330694 1811712  9966/9469/520   36360/6130    49  691   28.48)
(smt.stats   77  11546 335440 1830966 10001/9664/520   36982/6130    49  691   28.48)
(smt.stats   78  11647 341407 1889178 10003/9668/520   37171/6130    49  691   28.58)
(smt.stats   79  11758 346253 1941466 10009/9674/520   37500/6130    49  691   28.58)
ramon: poll                 wall=13.000s usage=12.993s mem=30144KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   80  11880 350663 1965110 10077/9677/520   37873/6130    49  691   28.67)
(smt.stats   81  12014 352415 1989571 10107/9772/522   38284/6743    50  700   28.67)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 192&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 549755814080 := 82168 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 192&1
shl: (shl[64] (bv2int %0) (mod (+ #104 #305) 64)) 549755814080 := 82175 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 192&1
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 265885319360 := 96 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 192&1
shl: (shl[38] (bv2int %0) (mod (bv2int %1) 38)) 265885319360 := 96 << 1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 192&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 1 := 192&1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 322&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 1 := 322&1
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 0 := 322&1
band: (band[38] (shl[38] (bv2int %0) (mod #104 38)) (if (= #572 37) 1 (if #574 3 #677))) 1 := 322&1
(smt.stats   82  12161 355086 2010625 10173/9783/523   38725/6753    50  700   28.86)
(smt.stats   83  12322 357320 2022415 10212/9858/533   38922/6754    50  700   28.96)
(smt.stats   84  12499 361100 2054649 10280/9881/533   39153/6756    50  700   28.96)
ramon: poll                 wall=14.000s usage=13.993s mem=30572KiB load=1.00 rootload=1.00
(smt.stats   85  12693 366053 2075975 10345/9940/533   39464/6795    51  727   29.05)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   86  12906 369660 2099121 10445/10034/533   39788/6798    51  727   29.05)
(smt.stats   87  13140 377292 2167007 10471/10129/535   41640/6798    51  727   29.39)
ramon: poll                 wall=15.000s usage=14.992s mem=31012KiB load=1.00 rootload=1.00
(smt.stats   88  13397 379920 2181478 10617/10129/535   42027/6918    52  753   29.68)
(smt.stats   89  13679 385012 2222001 11206/10676/535   42882/6926    52  753   29.87)
(smt.stats   90  13989 389274 2247605 11287/10927/535   43342/6927    52  753   29.87)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 607 := 649&7921
(smt.stats   91  14090 393025 2261841 11329/10958/535   43815/6929    52  753   29.98)
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 607 := 649&7921
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 607 := 649&7921
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 607 := 649&7921
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 607 := 649&7921
(smt.stats   92  14201 395844 2283526 11403/11023/541   44212/7171    53  754   29.98)
ramon: poll                 wall=16.000s usage=15.992s mem=31608KiB load=1.00 rootload=1.00
(smt.stats   93  14323 399909 2311545 11511/11135/542   44963/7172    53  754   30.08)
(smt.stats   94  14457 402317 2330030 11559/11176/542   45339/7174    53  754   30.17)
(smt.stats   95  14604 406244 2357572 11617/11240/542   45979/7175    53  754   30.27)
(smt.stats   96  14765 407887 2369994 11636/11280/542   46232/7393    54  769   30.27)
(smt.stats   97  14942 411206 2411977 11667/11316/542   46615/7393    54  769   30.69)
(smt.delete-inactive-clauses  :num-deleted-clauses 1144)
(smt.stats   98  15136 417323 2456824 11782/11332/545   46255/7393    54  769   30.69)
ramon: poll                 wall=17.000s usage=16.991s mem=32324KiB load=1.00 rootload=1.00
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 64 := 66084&31685
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 64 := 66084&31685
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 64 := 66100&31685
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 64 := 68658&31685
band: (band[38] (shl[64] (bv2int %0) (mod #306 64)) (if (= #696 63) 0 (if #698 1 #846))) 64 := 68146&31685
(smt.stats   99  15349 421842 2520259 12213/11482/545   46899/7480    55  775   30.79)
(smt.stats  100  15583 426256 2562377 12247/11886/550   48081/7480    55  775   30.98)
(smt.stats  101  15840 434696 2710722 12325/11926/550   48866/7830    56  776   30.98)
ramon: poll                 wall=18.000s usage=17.991s mem=32680KiB load=1.00 rootload=1.00
(smt.stats  102  16122 442429 2779069 12485/12065/552   49705/7945    57  786   31.17)
(smt.stats  103  16432 454502 2857332 12596/12199/553   50541/7948    57  786   31.17)
ramon: poll                 wall=19.000s usage=18.991s mem=32892KiB load=1.00 rootload=1.00
(smt.stats  104  16772 460476 2906828 12679/12274/554   51959/8069    58  786   31.46)
(smt.stats  105  16873 463815 2945341 12699/12350/554   52243/8069    58  786   31.46)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  106  16984 466126 2978566 12706/12357/555   52648/8249    59  849   31.46)
(smt.stats  107  17106 469349 3020595 12742/12363/555   52904/8252    59  849   31.55)
ramon: poll                 wall=20.000s usage=19.990s mem=33224KiB load=1.00 rootload=1.00
(smt.stats  108  17240 474744 3045570 12868/12410/555   53254/8253    59  849   31.55)
ramon: end                  Tue Dec 24 15:58:23 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.999s
ramon: group.utime          19.979s
ramon: group.stime          0.020s
ramon: group.mempeak        33736KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.008s
ramon: loadavg              1.00
