ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:03:56 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27490 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/mSuVWrTQG5rK.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             918286
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   77.5194     10000        49          0            1        2)
(sat.ddfw       1      1    40.004     20001        98          1            1        3)
(smt.stats    0    101   2647    215  1146/1018/109      98/17     5   17   52.05)
(sat.ddfw       1      1   45.7666     40001       196          2            1        5)
(smt.stats    1    202   6049   1277  1669/1508/111     212/34     7   19   52.15)
(smt.stats    2    313   9840   2907  1760/1603/119     315/46    10   25   52.25)
(smt.stats    3    414  12240   4625  2220/2017/120     418/47    11   26   52.46)
(sat.ddfw       1      1   42.0757     70001       343          3            1        8)
(smt.stats    4    525  13387   5788  2358/2147/128     518/80    14   60   52.46)
(smt.stats    5    647  16539   7364  2444/2221/128     646/82    15   61   52.58)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  20902  10348  2449/2229/128     743/82    15   61   52.68)
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 0&2147483647
shl: (shl[64] (bv2int %1) (mod (+ #108 #330) 64)) 4398046511104 := 0 << 31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 0&2147483647
shl: (shl[64] (bv2int %1) (mod (+ #108 #330) 64)) 4398046511104 := 0 << 31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 0&2147483647
shl: (shl[42] (bv2int %1) (mod (bv2int %0) 42)) 2147483648 := 2048 << 31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 2147483647 := 2147483647&2147483647
shl: (shl[64] (bv2int %1) (mod (+ #108 #330) 64)) 4400193994751 := 8589934592 << 31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 0&2147483647
shl: (shl[42] (bv2int %1) (mod (bv2int %0) 42)) 4398046511103 := 8589936640 << 31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 2147483646 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 1 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 2 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 2147483644 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 8 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
shl: (shl[42] (bv2int %1) (mod (bv2int %0) 42)) 4395899027457 := 4389456576511 << 31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 2 := 4395899027456&2147483647
ramon: poll                 wall=1.000s usage=0.845s mem=55132KiB load=0.85 rootload=0.84
(smt.stats    7    859  22638  12155  2501/2262/156     849/87    16   62   52.89)
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4372276707328&2147483647
shl: (shl[42] (bv2int %1) (mod (bv2int %0) 42)) 4372276707329 := 4372276707316 << 31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4372276707328&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 2 := 4372276707328&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 4 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 16 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 32 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 32 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 64 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 128 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 256 := 4395899027456&2147483647
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 0 := 4395899027456&2147483647
band: (band[42] (shl[42] (bv2int %1) (mod #108 42)) (if (= #589 41) 1 (if #591 3 #706))) 512 := 4395899027456&2147483647
(sat.ddfw       1      1   36.9344    110001       539          4            1       12)
(smt.stats    8    981  24064  14004  2710/2477/189     964/90    17   72   53.10)
(smt.stats    9   1115  27416  18099  2749/2525/189    1086/102    18   80   53.20)
(smt.stats   10   1216  30197  21216  2754/2529/189    1191/102    18   80   53.20)
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 7 := 4389456578521&7
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 5 := 4389456578521&7
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 1 := 4389456578521&7
shl: (shl[64] (bv2int %1) (mod (+ #108 #330) 64)) 4389456578521 := 4389456578521 << 3
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 7 := 4389456578504&7
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 4 := 4389456576512&7
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 4 := 4389456576516&7
shl: (shl[64] (bv2int %1) (mod (+ #108 #330) 64)) 4389456576516 := 4389456576516 << 3
(smt.stats   11   1327  32010  23332  2842/2610/205    1292/126    19   83   53.20)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  34261  27491  2867/2638/215    1415/126    19   83   53.29)
(smt.stats   13   1583  37807  32453  2880/2653/217    1532/133    20   85   53.29)
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456580606&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456580606&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456578558&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456578560&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 16 := 4389456578560&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456578560&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456578568&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456578560&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456578568&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 10 := 4389456578560&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 10 := 4389456578560&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456578560&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456578560&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456578568&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456586748&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456582664&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456582656&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456582664&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456584704&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456584712&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456584704&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456584712&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456584712&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456592896&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456592904&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456592904&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456609280&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456609288&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456580608&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456580616&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456580616&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456580616&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456580620&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 8 := 4389456580616&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 9 := 4389456580616&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 9 := 4389456580616&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 9 := 4389456580616&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 9 := 4389456580617&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 9 := 4389456633864&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 9 := 4389456633865&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 9 := 4389456633865&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 11 := 4389456633865&134217727
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 9 := 4389456633865&134217727
(smt.stats   14   1730  41170  37720  3050/2795/317    1724/175    23  114   54.01)
(sat.ddfw       1      1   32.2782    160000       784          5            1       17)
(smt.stats   15   1831  44851  44310  3054/2825/323    1873/185    25  116   54.01)
(smt.stats   16   1942  46958  48682  3065/2837/327    2000/202    26  121   54.01)
ramon: poll                 wall=2.000s usage=1.849s mem=56392KiB load=1.00 rootload=1.00
(smt.stats   17   2064  49671  51536  3110/2843/327    2152/204    26  121   54.11)
(sat.ddfw       1      1    28.504    220001      1078          6            1       23)
(smt.stats   18   2198  52758  56214  3135/2902/327    2348/235    27  123   54.20)
(smt.stats   19   2345  55093  66922  3288/3009/327    2552/235    27  123   54.39)
(smt.stats   20   2506  58346  75805  3337/3063/334    2825/271    29  127   54.49)
(smt.stats   21   2607  63335  85291  3349/3075/335    3026/301    30  149   54.68)
(smt.stats   22   2718  66320  91374  3352/3078/336    3222/301    30  149   54.68)
(smt.stats   23   2840  74071 101634  3354/3080/336    3333/310    31  162   54.92)
(sat.ddfw       1      1   26.0126    290001      1421          7            1       30)
(smt.stats   24   2974  77455 109912  3384/3101/337    3548/323    32  164   54.92)
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 4 := 4063039062021&31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 4 := 4063039062021&31
(smt.stats   25   3121  80122 116419  3494/3114/337    3763/329    32  164   54.92)
ramon: poll                 wall=3.000s usage=3.141s mem=57252KiB load=1.29 rootload=1.28
(smt.stats   26   3282  83341 125495  3584/3224/342    4056/350    33  165   55.12)
(sat.ddfw       1      1   23.8521    370001      1813          8            1       38)
(smt.stats   27   3459  86029 136099  3684/3320/342    4386/352    33  165   55.21)
(smt.stats   28   3560  88816 144902  3707/3423/342    4511/391    34  165   55.21)
ramon: poll                 wall=4.000s usage=4.148s mem=57856KiB load=1.01 rootload=1.01
(smt.stats   29   3671  90614 147807  3794/3436/342    4693/394    34  165   55.42)
(sat.ddfw       1      1   21.4337    460001      2254          9            1       47)
(smt.stats   30   3793  94266 165363  4045/3662/343    5081/403    35  172   55.70)
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 24 := 4389457141770&31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 24 := 4389457109004&31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 24 := 4389457109000&31
band: (band[42] (shl[64] (bv2int %1) (mod #331 64)) (if (= #725 63) 0 (if #727 1 #871))) 24 := 4389457109000&31
(smt.stats   31   3927  96989 177978  4215/3940/351    5528/467    36  182   55.89)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  99384 188899  4245/3947/358    6042/467    36  182   55.89)
ramon: poll                 wall=5.000s usage=5.112s mem=58016KiB load=0.96 rootload=0.97
(sat.ddfw       1      1   19.4515    560001      2745         10            1       57)
(smt.stats   33   4235 104307 200417  4398/3970/359    6414/581    37  246   56.08)
(smt.stats   34   4412 108490 221998  4583/4234/359    6825/584    37  246   56.08)
ramon: poll                 wall=6.000s usage=6.112s mem=58676KiB load=1.00 rootload=1.00
(smt.stats   35   4606 113787 240667  4602/4327/359    7512/584    37  246   56.18)
(sat.ddfw       1      1   17.8862    670001      3284         11            1       68)
(smt.stats   36   4707 116290 251363  4603/4328/359    7615/584    37  246   56.18)
(smt.stats   37   4818 119857 268429  4629/4333/359    7743/584    37  246   56.18)
(smt.stats   38   4940 123421 284525  4635/4360/360    8156/764    38  249   56.27)
(smt.delete-inactive-clauses  :num-deleted-clauses 287)
(smt.stats   39   5074 125339 291461  4650/4364/360    8281/764    38  249   56.27)
(smt.stats   40   5221 130000 313289  4666/4386/360    9610/764    38  249   56.37)
ramon: poll                 wall=7.000s usage=7.112s mem=58832KiB load=1.00 rootload=0.99
(smt.stats   41   5382 134209 333616  4678/4401/360   10292/764    38  249   56.56)
(sat.ddfw       1      1    16.538    790001      3872         12            1       80)
(smt.stats   42   5559 137971 345088  4813/4414/360   10720/771    38  249   56.66)
(smt.stats   43   5753 139624 352898  5269/4646/360   11090/774    38  249   57.05)
ramon: poll                 wall=8.001s usage=8.049s mem=59176KiB load=0.94 rootload=0.94
(smt.stats   44   5966 141997 362965  5677/5130/360   11500/774    38  249   57.24)
(smt.stats   45   6067 145139 377108  5722/5443/360   12592/774    38  249   57.34)
(sat.ddfw       1      1   15.3447    920001      4509         13            1       93)
(smt.stats   46   6178 153985 425174  5727/5448/360   12743/774    38  249   57.34)
(smt.stats   47   6300 160382 465728  5730/5451/360   13108/774    38  249   57.44)
ramon: poll                 wall=9.000s usage=9.087s mem=59580KiB load=1.04 rootload=1.04
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 164456 498451  5748/5465/361   13824/1464    39  254   57.44)
(smt.stats   49   6581 165967 508136  5910/5473/362   14863/1466    39  254   57.73)
(sat.ddfw       1      1   14.3428   1060001      5196         14            1      108)
ramon: poll                 wall=10.000s usage=10.083s mem=60196KiB load=1.00 rootload=1.00
(smt.stats   50   6742 168581 522303  6121/5668/362   15068/1468    39  254   57.82)
(smt.stats   51   6919 171547 540245  6382/5913/362   15486/1637    40  264   57.92)
ramon: poll                 wall=11.000s usage=11.083s mem=60372KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   13.4457   1210001      5931         15            1      123)
(smt.stats   52   7113 174948 552264  6422/6137/364   15990/1640    40  264   58.01)
ramon: poll                 wall=12.000s usage=12.083s mem=60296KiB load=1.00 rootload=1.00
(smt.stats   53   7326 181358 588653  6580/6143/365   16504/1700    41  266   58.25)
(smt.stats   54   7560 185405 620306  6637/6347/366   17462/1861    42  266   58.34)
(sat.ddfw       1      1   12.6652   1370001      6715         16            1      139)
(smt.stats   55   7661 188296 647639  6645/6360/366   17604/1861    42  266   58.34)
ramon: poll                 wall=13.000s usage=13.083s mem=60912KiB load=1.00 rootload=1.00
(smt.stats   56   7772 191699 671771  6691/6365/366   17815/2162    43  268   58.34)
(smt.stats   57   7894 195413 703270  6782/6417/366   18518/2163    43  268   58.50)
(smt.stats   58   8028 198293 719568  6830/6503/366   19097/2163    43  268   58.60)
ramon: poll                 wall=14.000s usage=14.080s mem=60896KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.9676   1540001      7549         17            1      156)
(smt.stats   59   8175 201843 760067  7115/6585/366   19468/2172    43  268   58.69)
(smt.stats   60   8336 204586 790518  7579/6846/366   19877/2180    43  268   58.80)
ramon: poll                 wall=15.000s usage=15.081s mem=61368KiB load=1.00 rootload=1.00
(smt.stats   61   8513 206508 802834  7661/7295/366   20278/2180    43  268   58.89)
(smt.stats   62   8707 212019 856880  7672/7379/366   20538/2180    43  268   59.33)
(sat.ddfw       1      1   11.3429   1720001      8431         18            1      174)
ramon: poll                 wall=16.000s usage=16.076s mem=61416KiB load=0.99 rootload=1.00
(smt.stats   63   8920 216703 883828  7968/7391/366   21349/2191    43  268   59.53)
ramon: poll                 wall=17.000s usage=17.076s mem=61856KiB load=1.00 rootload=1.00
(smt.stats   64   9154 222719 951395  8085/7761/370   22132/2491    44  280   59.62)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   65   9411 228590 1019883  8126/7814/371   22757/2553    45  282   59.62)
(sat.ddfw       1      1   10.7863   1910001      9362         19            1      193)
(smt.stats   66   9512 229530 1032191  8132/7847/374   23975/2797    46  287   59.81)
(smt.stats   67   9623 229849 1037465  8132/7847/374   24339/2797    46  287   59.81)
ramon: poll                 wall=18.000s usage=18.075s mem=62108KiB load=1.00 rootload=1.00
(smt.stats   68   9745 230960 1047657  8134/7849/374   25037/2797    46  287   59.91)
(smt.stats   69   9879 233226 1082760  8142/7853/374   25191/2798    46  287   59.91)
(smt.delete-inactive-clauses  :num-deleted-clauses 105)
(smt.stats   70  10026 236893 1124640  8149/7864/375   26355/3215    47  315   60.00)
(smt.stats   71  10187 239180 1147928  8155/7870/375   26676/3215    47  315   60.00)
ramon: poll                 wall=19.000s usage=19.066s mem=62400KiB load=0.99 rootload=0.99
(smt.stats   72  10364 240828 1168754  8159/7874/375   27395/3546    48  326   60.21)
(smt.stats   73  10558 244586 1207775  8167/7882/375   28244/3546    48  326   60.21)
(sat.ddfw       1      1   10.2659   2110001     10343         20            1      214)
(smt.stats   74  10771 249226 1249621  8226/7887/376   28526/3762    49  329   60.31)
ramon: poll                 wall=20.002s usage=20.066s mem=62360KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 23:04:16 2024
ramon: root.execname        z3
ramon: root.utime           20.130s
ramon: root.stime           0.010s
ramon: group.total          20.148s
ramon: group.utime          20.136s
ramon: group.stime          0.012s
ramon: group.mempeak        62872KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.00
