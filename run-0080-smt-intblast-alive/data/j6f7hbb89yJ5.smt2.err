ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:52:00 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24904 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/j6f7hbb89yJ5.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             128068
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   6647    656  1182/1065/114      86/5     9   21   19.33)
(smt.stats    1    202   9776   2070  2361/2111/119     176/6    13   26   19.43)
(smt.stats    2    313  11955   3959  2384/2160/126     281/9    15   27   19.53)
(smt.stats    3    414  15520   7956  2391/2167/128     378/11    17   31   19.65)
(smt.stats    4    525  16341   9226  2436/2210/132     441/37    19   45   19.65)
(smt.stats    5    648  20884  14123  2444/2216/134     542/36    20   62   19.77)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    749  22739  16677  2472/2243/138     641/39    22   67   19.77)
(smt.stats    7    860  24979  18817  2505/2255/138     762/39    22   67   19.87)
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1 := 2&1
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #352) 64)) 70368744177666 := 0 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #352) 64)) 70368744177666 := 0 << 1
(smt.stats    8    982  27330  21250  2548/2312/147     883/44    23   67   19.87)
(smt.stats    9   1116  28902  24071  2580/2334/147    1028/43    24   74   20.00)
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 3746889 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 3 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 3 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 3 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 3 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 11 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 11 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 192 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 193 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 195 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 203 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 255 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 251 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 203 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 321 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 2 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 3 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 10 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 11 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 74 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 75 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 111 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 75 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 74 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 75 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1130 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1131 := 3746891&3746891
(smt.stats   10   1217  31669  28007  2689/2421/248    1150/55    25   77   20.40)
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1098 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1099 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1099 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1099 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1099 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1099 := 3746891&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 3147 := 3746891&3746891
(smt.stats   11   1328  32758  30091  2889/2477/269    1339/62    26   97   20.78)
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 17482 := 28672&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 17482 := 28674&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 17482 := 28682&3746891
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 17482 := 28746&3746891
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats   12   1450  35979  38310  3026/2741/280    1590/77    27  102   20.97)
(smt.stats   13   1584  40470  47936  3045/2789/283    1994/122    28  103   21.06)
(smt.stats   14   1731  45271  59373  3057/2799/284    2240/196    29  117   21.18)
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3751952&1
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 3751953 := 35184373964808 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3751952&1
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 3751953 := 35184373964808 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3751952&1
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 3751953 := 35184373964808 << 1
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 1 := 3751952&1
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3751952&1
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 1 := 3751952&1
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3751952&1
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 1 := 3751952&1
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3751952&1
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 1 := 3751952&1
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3751954&1
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 1 := 3751954&1
(smt.stats   15   1832  48217  66410  3091/2800/285    2507/275    30  119   21.28)
(smt.stats   16   1943  51578  73706  3129/2839/300    2721/379    31  122   21.28)
ramon: poll                 wall=1.000s usage=0.952s mem=22576KiB load=0.95 rootload=0.94
(smt.stats   17   2065  53942  80744  3198/2929/310    2983/473    33  191   21.39)
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 73728&114
shl: (shl[64] (bv2int %0) (mod (+ #109 #352) 64)) 73728 := 73729 << 7
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 57344&114
shl: (shl[64] (bv2int %0) (mod (+ #109 #352) 64)) 57344 := 35184372088831 << 7
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 57344&114
shl: (shl[64] (bv2int %0) (mod (+ #109 #352) 64)) 57344 := 35184372088831 << 7
(smt.stats   18   2199  56525  88856  3284/3011/316    3200/630    34  192   21.39)
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 40960&114
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 40964 := 320 << 7
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 40960&114
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 70368744177662 := 320 << 7
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 40960&114
shl: (shl[46] (bv2int %0) (mod (bv2int %1) 46)) 40962 := 320 << 7
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 2 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 4 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 8 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 16 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 32 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 64 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 64 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 2 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 2 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 4 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 8 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 16 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3760128&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 32 := 3760128&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3776512&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 2 := 3776512&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3776512&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 4 := 3776512&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3776512&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 8 := 3776512&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3776512&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 16 := 3776512&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3776512&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 16 := 3776512&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3780608&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 2 := 3780608&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3780608&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 2 := 3780608&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3780608&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 16 := 3780608&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3780608&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 16 := 3780608&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 0 := 3780608&114
band: (band[46] (shl[46] (bv2int %0) (mod #109 46)) (if (= #603 45) 1 (if #605 3 #732))) 4 := 3780608&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 4 := 7857800716288&114
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 4 := 7857800716288&114
(smt.stats   19   2346  58058  98063  3409/3124/379    3420/637    34  192   21.80)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   20   2507  61657 112255  3543/3265/393    4177/665    35  209   21.90)
(smt.stats   21   2608  66167 118685  3734/3280/393    4359/939    36  265   22.21)
(smt.stats   22   2719  70191 132428  3800/3505/393    4529/941    36  265   22.21)
(smt.stats   23   2841  79249 162809  3816/3543/394    4851/1065    37  267   22.42)
(smt.stats   24   2975  82029 174323  3832/3559/394    5231/1065    37  267   22.42)
ramon: poll                 wall=2.000s usage=1.952s mem=23756KiB load=1.00 rootload=0.99
(smt.stats   25   3122  84482 179981  3893/3562/394    5458/1069    37  267   22.51)
(smt.stats   26   3283  87327 191194  4011/3668/394    5673/1070    37  267   22.61)
(smt.stats   27   3460  89860 202786  4090/3753/394    6049/1071    37  267   22.61)
(smt.stats   28   3561  91693 210446  4106/3823/394    6240/1072    37  267   22.61)
(smt.stats   29   3672  93078 217769  4122/3847/394    6409/1072    37  267   22.72)
(smt.stats   30   3794  96125 230061  4128/3855/395    6578/1393    38  269   22.72)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   31   3928 100782 248176  4136/3863/396    6790/1447    39  270   22.72)
(smt.stats   32   4075 105419 263045  4149/3874/396    7108/1447    39  270   22.72)
(smt.stats   33   4236 110056 284778  4187/3875/396    7396/1447    39  270   22.83)
(smt.stats   34   4413 112480 303203  4200/3912/396    7617/1448    39  270   22.83)
ramon: poll                 wall=3.000s usage=2.951s mem=24112KiB load=1.00 rootload=1.00
(smt.stats   35   4607 117961 322975  4400/3933/397    8101/1605    40  274   22.83)
(smt.stats   36   4708 120294 332834  4556/4159/397    8391/1608    40  274   22.96)
(smt.stats   37   4819 122790 345067  4611/4293/397    8563/1608    40  274   23.06)
(smt.stats   38   4941 125701 360190  4635/4360/398    8754/1778    41  276   23.06)
(smt.delete-inactive-clauses  :num-deleted-clauses 62)
(smt.stats   39   5075 127338 371446  4641/4366/398    9012/1778    41  276   23.06)
(smt.stats   40   5222 131238 391846  4644/4368/398    9272/1778    41  276   23.16)
(smt.stats   41   5383 137033 418793  4691/4388/398    9532/1778    41  276   23.16)
ramon: poll                 wall=4.000s usage=3.951s mem=24492KiB load=1.00 rootload=1.00
(smt.stats   42   5560 140865 439478  4791/4430/398    9869/1783    41  276   23.27)
(smt.stats   43   5754 147046 472122  4896/4520/398   10359/1793    41  276   23.38)
(smt.stats   44   5967 151030 500244  4925/4641/398   10895/1793    41  276   23.51)
(smt.stats   45   6068 152974 513088  4936/4650/398   11101/1793    41  276   23.51)
(smt.stats   46   6179 155792 533532  4949/4662/398   11331/1793    41  276   23.73)
ramon: poll                 wall=5.000s usage=4.949s mem=25180KiB load=1.00 rootload=1.00
(smt.stats   47   6301 158285 546782  4991/4670/398   11584/1797    41  276   23.82)
(smt.stats   48   6435 161125 561786  5043/4751/398   11762/1798    41  276   23.82)
(smt.stats   49   6582 163650 582364  5060/4774/399   12036/2192    42  284   23.82)
(smt.stats   50   6743 167728 604276  5096/4787/399   12372/2194    42  284   23.92)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   51   6920 172142 630229  5116/4823/399   12628/2195    42  284   23.92)
(smt.stats   52   7114 174708 647691  5117/4836/399   13068/2195    42  284   24.01)
(smt.stats   53   7327 180012 678298  5136/4848/399   13381/2196    42  284   24.01)
ramon: poll                 wall=6.000s usage=5.949s mem=25372KiB load=1.00 rootload=1.00
(smt.stats   54   7561 187583 715878  5172/4873/399   13913/2199    42  284   24.11)
(smt.stats   55   7662 190270 735418  5173/4892/399   14050/2199    42  284   24.11)
(smt.stats   56   7773 194320 763552  5179/4893/399   14234/2200    42  284   24.11)
(smt.stats   57   7895 198255 785601  5300/4907/399   14486/2202    42  284   24.20)
(smt.stats   58   8029 201240 814621  5341/5050/399   14683/2202    42  284   24.20)
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964195730&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964195730&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964195602&457
shl: (shl[64] (bv2int %0) (mod (+ #109 #352) 64)) 1116964195602 := 558482097801 << 9
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964194834&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964194834&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964194834&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964194834&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964194834&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964194834&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 256 := 1116964194834&457
(smt.stats   59   8176 203875 830331  5521/5063/399   14933/2212    42  284   24.20)
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 386 := 1116964196114&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 388 := 1116964196118&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 388 := 1116964196118&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 388 := 1116964196118&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 288 := 1116964196118&457
band: (band[46] (shl[64] (bv2int %0) (mod #353 64)) (if (= #751 63) 0 (if #753 1 #893))) 288 := 1116964196118&457
(smt.stats   60   8337 206769 854375  5852/5361/425   15496/2641    43  287   24.42)
ramon: poll                 wall=7.000s usage=6.948s mem=25812KiB load=1.00 rootload=1.00
(smt.stats   61   8514 208668 869133  5936/5609/425   15921/2641    43  287   24.53)
(smt.stats   62   8708 213141 900282  6001/5653/425   16203/3016    44  290   24.53)
(smt.stats   63   8921 221653 947646  6121/5720/425   16799/3024    44  290   24.65)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9155 229029 1014326  6131/5841/425   17298/3024    44  290   24.65)
ramon: poll                 wall=8.000s usage=7.948s mem=26124KiB load=1.00 rootload=1.00
(smt.stats   65   9412 234775 1060526  6143/5857/425   17941/3024    44  290   24.88)
(smt.stats   66   9513 235534 1066966  6152/5868/425   18264/3024    44  290   24.88)
(smt.stats   67   9624 239281 1101775  6188/5870/425   18568/3024    44  290   25.00)
(smt.stats   68   9746 242256 1128237  6212/5909/425   18814/3024    44  290   25.00)
(smt.stats   69   9880 248856 1172385  6278/5931/425   19194/3028    44  290   25.00)
(smt.delete-inactive-clauses  :num-deleted-clauses 1463)
(smt.stats   70  10027 254616 1207898  6321/6012/425   18098/3031    44  290   25.10)
ramon: poll                 wall=9.000s usage=8.948s mem=26372KiB load=1.00 rootload=1.00
(smt.stats   71  10188 263910 1257616  6334/6048/426   18376/3577    45  290   25.10)
(smt.stats   72  10365 268995 1289572  6578/6063/426   18818/3580    45  290   25.20)
(smt.stats   73  10559 273335 1312994  6707/6398/428   19431/3692    46  294   25.20)
(smt.stats   74  10772 281181 1379129  6724/6436/429   20100/3692    46  294   25.20)
ramon: poll                 wall=10.000s usage=9.948s mem=26816KiB load=1.00 rootload=1.00
(smt.stats   75  11006 285070 1402870  6792/6442/431   20401/3769    47  314   25.30)
(smt.stats   76  11263 289797 1432643  6844/6534/431   21047/3769    47  314   25.30)
(smt.stats   77  11545 298286 1479731  6859/6568/431   21939/3884    48  316   25.42)
(smt.stats   78  11646 301762 1504278  6867/6576/432   22183/4027    49  320   25.42)
(smt.stats   79  11757 305293 1529063  6906/6600/432   22390/4027    49  320   25.53)
ramon: poll                 wall=11.000s usage=10.947s mem=27012KiB load=1.00 rootload=1.00
(smt.stats   80  11879 307947 1549017  7142/6617/432   22708/4035    49  320   25.62)
(smt.stats   81  12013 309351 1560508  7207/6896/432   23064/4036    49  320   25.62)
(smt.stats   82  12160 313234 1579204  7215/6913/432   23352/4036    49  320   25.74)
(smt.stats   83  12321 315525 1601782  7216/6918/432   23519/4036    49  320   25.74)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12498 318907 1627292  7218/6920/432   24173/4036    49  320   25.74)
(smt.stats   85  12692 328627 1671009  7223/6925/432   24508/4036    49  320   25.74)
(smt.stats   86  12905 335759 1735402  7232/6930/432   25174/4036    49  320   26.19)
ramon: poll                 wall=12.000s usage=11.947s mem=27660KiB load=1.00 rootload=1.00
(smt.stats   87  13139 347531 1811108  7236/6938/432   25750/4036    49  320   26.28)
(smt.stats   88  13396 357545 1923887  7255/6951/432   26339/4036    49  320   26.39)
(smt.stats   89  13678 369673 2016149  7335/7017/434   27252/4534    50  321   26.49)
ramon: poll                 wall=13.000s usage=12.947s mem=28016KiB load=1.00 rootload=1.00
(smt.stats   90  13988 385596 2140515  7340/7022/435   28313/4746    52  358   26.72)
(smt.stats   91  14089 388884 2160687  7405/7029/436   28597/4748    52  358   26.91)
(smt.stats   92  14200 391798 2188650  7640/7108/436   28990/4749    52  358   27.01)
ramon: poll                 wall=14.000s usage=13.946s mem=28432KiB load=1.00 rootload=1.00
(smt.stats   93  14322 393554 2206342  7978/7379/436   29252/4749    52  358   27.10)
(smt.stats   94  14456 394972 2220661  8227/7667/436   29699/4781    53  380   27.20)
(smt.stats   95  14603 399295 2251040  8345/7910/436   30554/4786    53  380   27.49)
(smt.stats   96  14764 403692 2284981  8432/8095/436   31252/4787    53  380   27.59)
ramon: poll                 wall=15.000s usage=14.946s mem=29104KiB load=1.00 rootload=1.00
(smt.stats   97  14941 408594 2332157  8587/8129/436   31940/4794    53  380   27.68)
(smt.delete-inactive-clauses  :num-deleted-clauses 1040)
(smt.stats   98  15135 414408 2382569  8627/8292/437   31469/5266    54  383   27.68)
ramon: poll                 wall=16.000s usage=15.946s mem=29264KiB load=1.00 rootload=1.00
(smt.stats   99  15348 422899 2454652  8693/8334/437   31953/5269    54  383   27.78)
(smt.stats  100  15582 428524 2510050  8703/8378/437   32813/5269    54  383   27.78)
(smt.stats  101  15839 435230 2603012  8704/8386/437   33273/5269    54  383   27.89)
(smt.stats  102  16121 439319 2669281  8709/8391/437   34327/5269    54  383   27.89)
ramon: poll                 wall=17.000s usage=16.945s mem=29500KiB load=1.00 rootload=0.99
(smt.stats  103  16431 445106 2744698  8729/8410/439   35306/5676    55  413   28.03)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  104  16771 456651 2847299  8765/8416/442   36039/5678    55  413   28.12)
(smt.stats  105  16872 459415 2877987  8774/8454/442   36126/5878    56  442   28.12)
(smt.stats  106  16983 460103 2892463  8774/8454/442   36306/5878    56  442   28.12)
(smt.stats  107  17105 462896 2931769  8786/8466/444   36593/5878    56  442   28.12)
(smt.stats  108  17239 465919 2983160  8786/8466/444   36672/5899    57  512   28.12)
ramon: poll                 wall=18.000s usage=17.945s mem=29776KiB load=1.00 rootload=1.00
(smt.stats  109  17386 473128 3063315  8827/8497/444   37043/5899    57  512   28.24)
(smt.stats  110  17547 477336 3121056  8830/8500/444   37408/5899    57  512   28.24)
(smt.stats  111  17724 488553 3257547  8832/8502/444   37854/5899    57  512   28.24)
(smt.stats  112  17918 501058 3382035  8839/8509/444   38515/5899    57  512   28.36)
(smt.stats  113  18131 504151 3436807  8842/8512/446   39074/6101    58  566   28.36)
ramon: poll                 wall=19.000s usage=18.945s mem=29956KiB load=1.00 rootload=1.00
(smt.stats  114  18365 511319 3525103  8975/8515/446   39623/6111    58  566   28.45)
(smt.stats  115  18622 517870 3584955  9151/8689/446   40519/6112    58  566   28.55)
ramon: poll                 wall=20.000s usage=19.943s mem=30408KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:52:20 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.995s
ramon: group.utime          19.979s
ramon: group.stime          0.016s
ramon: group.mempeak        32240KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              1.00
