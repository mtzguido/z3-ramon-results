ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 14:21:38 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         42998 MiB
ramon: sys.mem.avail        61716 MiB
ramon: sys.nprocs           1274
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/2HWJKdLN4ijt.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2766869
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 1 := 1&2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 2 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 2 := 3 << 3
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 2&4
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 2 := 3 << 3
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 1 := 1&8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 2&8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 4 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&8
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 4 << 4
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 3 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 3 := 3&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&16
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 5 << 5
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&16
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 5 << 5
(smt.stats    0    101   4182    598  1182/1029/104      93/18     6   20   19.16)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 4 := 4&32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 3 := 3&32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 2&32
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&32
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 6 << 6
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&32
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 6 << 6
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&32
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 6 << 6
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&64
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 7 << 7
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&64
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 7 << 7
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&128
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 8 << 8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&128
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 8 << 8
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 8 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 8 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 8 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 3 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 8&256
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 8&256
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 8 := 9 << 9
(smt.stats    1    202   6211   1389  2206/1937/144     186/38     9   35   19.76)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 1&274877906944
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 1 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&274877906944
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&274877906944
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 38 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 0 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
shl: (shl[43] (bv2int %0) (mod (bv2int %0) 43)) 0 := 39 << 39
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 1 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 2 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 4 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906944 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906944 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906943 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906942 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906940 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 274877906936 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 16 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 32 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 64 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 128 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 256 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 512 := 3848290697216&274877906944
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 1536 := 3848290697216&274877906944
(smt.stats    2    313   7777   2340  2438/2164/248     355/62    12   58   20.44)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 3848290697216&274877906944
band: (band[43] (shl[43] (bv2int %0) (mod #101 43)) (if (= #580 42) 1 (if #582 2 #664))) 13840 := 3848290697216&274877906944
(smt.stats    3    414   9140   4280  2726/2488/256     573/96    14   66   20.63)
(smt.stats    4    525  11482   6451  2765/2526/274     692/120    17   84   20.72)
(smt.stats    5    647  12161   7328  2891/2648/275     801/146    18   99   21.01)
ramon: poll                 wall=1.000s usage=0.998s mem=22168KiB load=1.00 rootload=0.97
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions     )
(smt.stats    6    748  12821   8110  3173/2825/277     922/156    19  103   21.01)
(smt.stats    7    859  13287   8510  3232/2985/277    1035/160    19  103   21.30)
ramon: poll                 wall=2.000s usage=1.998s mem=22524KiB load=1.00 rootload=1.00
(smt.stats    8    981  15221  10259  3662/3335/278    1175/162    19  103   21.30)
(smt.stats    9   1115  18821  17570  3719/3485/291    1343/215    21  111   21.30)
(smt.stats   10   1216  21746  23423  3814/3495/291    1464/216    21  111   21.30)
(smt.stats   11   1327  24542  30717  3915/3618/293    1590/233    22  116   21.39)
ramon: poll                 wall=3.000s usage=2.998s mem=22648KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  27054  38572  4106/3863/298    1733/284    24  133   21.49)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694912&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 549990694912 := 549990694913 << 2
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694912&2
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 549990694912 := 549990694913 << 2
(smt.stats   13   1583  30407  46539  4158/3923/308    1861/305    25  137   21.49)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694911&1
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694911&1
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 549990694910&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 549990694910 := 549990694912 << 1
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 549990694912 << 1
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 0 := 549990694912 << 1
(smt.stats   14   1730  35038  49995  4283/3930/308    2051/307    25  137   21.69)
ramon: poll                 wall=4.000s usage=3.997s mem=23208KiB load=1.00 rootload=1.00
(smt.stats   15   1831  38052  54709  4482/4144/319    2164/324    26  139   21.69)
(smt.stats   16   1942  39657  58342  4626/4335/319    2269/330    27  140   21.79)
(smt.stats   17   2064  42228  63583  4708/4414/319    2455/335    27  140   21.88)
ramon: poll                 wall=5.000s usage=4.997s mem=23220KiB load=1.00 rootload=1.00
(smt.stats   18   2198  46206  70019  4875/4487/321    2627/401    28  144   21.88)
(smt.stats   19   2345  51087  83282  5041/4702/322    2796/439    29  146   21.98)
(smt.stats   20   2506  55631  95430  5137/4834/327    3080/463    30  149   22.08)
ramon: poll                 wall=6.000s usage=5.997s mem=23432KiB load=1.00 rootload=1.00
(smt.stats   21   2607  60423 100662  5195/4902/328    3326/564    31  162   22.17)
(smt.stats   22   2718  64444 108801  5253/4975/328    3496/564    31  162   22.27)
(smt.stats   23   2840  66996 114698  5365/5030/328    3624/567    31  162   22.27)
ramon: poll                 wall=7.000s usage=6.997s mem=23704KiB load=1.00 rootload=1.00
(smt.stats   24   2974  69564 122824  5458/5214/331    3789/731    32  162   22.36)
(smt.stats   25   3121  74773 138545  5478/5230/331    4043/751    33  172   22.46)
(smt.stats   26   3282  80868 154308  5518/5242/333    4193/768    34  175   22.46)
(smt.stats   27   3459  86503 168539  5658/5412/336    4482/819    36  181   22.55)
(smt.stats   28   3560  90987 181540  5667/5419/336    4582/819    36  181   22.55)
ramon: poll                 wall=8.000s usage=7.997s mem=23876KiB load=1.00 rootload=1.00
(smt.stats   29   3671  93936 200294  5737/5466/337    4683/840    38  187   22.65)
(smt.stats   30   3793  95820 204086  5881/5511/337    4828/843    38  187   22.65)
(smt.stats   31   3927  98259 218962  5926/5676/341    4970/862    40  194   22.65)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074 102646 230440  5928/5678/341    5130/862    40  194   22.65)
ramon: poll                 wall=9.000s usage=8.996s mem=24236KiB load=1.00 rootload=1.00
(smt.stats   33   4235 107934 248917  5968/5681/341    5298/883    41  200   22.82)
(smt.stats   34   4412 111466 255630  6127/5791/342    5490/892    42  200   22.91)
ramon: poll                 wall=10.000s usage=9.996s mem=24284KiB load=1.00 rootload=1.00
(smt.stats   35   4606 116621 274710  6184/5919/345    5699/893    42  200   22.91)
(smt.stats   36   4707 118086 279340  6255/5950/345    5794/919    43  209   23.01)
(smt.stats   37   4818 121041 288190  6403/6042/345    5922/922    43  209   23.10)
(smt.stats   38   4940 124087 291671  6579/6243/345    6059/923    43  209   23.10)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
ramon: poll                 wall=11.000s usage=10.996s mem=24652KiB load=1.00 rootload=1.00
(smt.stats   39   5074 127960 299984  6635/6359/346    6200/950    44  210   23.10)
(smt.stats   40   5221 129714 305243  6958/6391/346    6361/952    44  210   23.20)
(smt.stats   41   5382 134063 313881  7128/6785/346    6547/956    44  210   23.29)
ramon: poll                 wall=12.000s usage=11.996s mem=24692KiB load=1.00 rootload=1.00
(smt.stats   42   5559 137446 318585  7283/6971/347    6728/990    45  212   23.29)
(smt.stats   43   5753 145203 333827  7325/7044/347    6945/990    45  212   23.39)
(smt.stats   44   5966 151495 351095  7410/7090/347    7194/990    45  212   23.49)
ramon: poll                 wall=13.000s usage=12.996s mem=25068KiB load=1.00 rootload=1.00
(smt.stats   45   6067 154710 363982  7429/7180/348    7290/1029    46  214   23.68)
(smt.stats   46   6178 160441 386867  7458/7199/348    7411/1030    46  214   23.68)
(smt.stats   47   6300 163430 399294  7549/7208/348    7570/1031    46  214   23.77)
ramon: poll                 wall=14.000s usage=13.988s mem=25248KiB load=0.99 rootload=0.99
(smt.stats   48   6434 165064 408732  7679/7302/348    7724/1032    46  214   23.87)
(smt.stats   49   6581 168003 423218  7847/7580/349    7904/1081    47  217   23.87)
ramon: poll                 wall=15.000s usage=14.988s mem=25468KiB load=1.00 rootload=1.00
(smt.stats   50   6742 170523 433710  7977/7604/349    8088/1091    47  217   23.96)
(smt.stats   51   6919 172511 443739  8404/7905/349    8281/1102    47  217   24.06)
ramon: poll                 wall=16.000s usage=15.988s mem=25568KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   52   7113 176439 458124  8499/8195/349    8499/1103    47  217   24.15)
(smt.stats   53   7326 182015 479229  8524/8259/349    8816/1103    47  217   24.15)
(smt.stats   54   7560 188306 500983  8564/8278/349    9075/1104    47  217   24.15)
(smt.stats   55   7661 191006 510193  8673/8319/349    9207/1105    47  217   24.15)
(smt.stats   56   7772 193454 519681  8728/8459/349    9346/1105    47  217   24.25)
ramon: poll                 wall=17.000s usage=16.988s mem=25652KiB load=1.00 rootload=1.00
(smt.stats   57   7894 197531 538275  8750/8493/349    9519/1105    47  217   24.25)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 1 := 7696145197065&549755813888
(smt.stats   58   8028 200793 556194  8759/8498/349    9875/1105    47  217   24.25)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 7696145197066&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 2 := 7696145197066&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 545460846456 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 545460846456 := 3848290697231&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738408 := 3848290697224&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738400 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738400 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738400 := 3848290697279&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738400 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738400 := 3848290697248&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738400 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738400 := 3848290697279&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738384 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738384 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738384 := 3848290697247&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738368 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738368 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 34359738368 := 3917010173951&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 68719476736 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 137438953472 := 3848290697217&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 274877906944 := 4123168604160&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 274877906944 := 4123168604160&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 274877906944 := 4123168604160&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 68719476736 := 4123168604160&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 68719476736 := 4260607557631&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 137438953472 := 4191888080895&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 137438953472 := 4260607557632&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 549755813888 := 4260607557632&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446739538224087040 := 549890031607 << 40
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 549755813888 := 4123168604160&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446739400785133568 := 549890031607 << 40
(smt.stats   59   8175 204358 577419  8978/8699/412   10134/1295    48  224   24.44)
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 549755813888 := 4123168604160&549755813888
shl: (shl[64] (bv2int %0) (mod (+ #101 #326) 64)) 18446677828133978112 := 549890031607 << 40
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 549755813888 := 7696581394432&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 549755813888 := 7696581394432&549755813888
band: (band[43] (shl[64] (bv2int %0) (mod #327 64)) (if (= #683 63) 0 (if #685 1 #809))) 549755813888 := 7696581394432&549755813888
(smt.stats   60   8336 207911 594456  9302/8722/427   10462/1306    48  224   24.99)
(smt.stats   61   8513 213650 624022  9539/9128/438   10887/1329    49  237   25.09)
ramon: poll                 wall=18.000s usage=17.988s mem=26552KiB load=1.00 rootload=1.00
(smt.stats   62   8707 219851 652741  9667/9276/438   11239/1455    50  237   25.09)
(smt.stats   63   8920 226022 683675  9803/9496/441   11727/1599    51  238   25.28)
ramon: poll                 wall=19.000s usage=18.987s mem=26892KiB load=1.00 rootload=1.00
(smt.stats   64   9154 233645 704986  9944/9556/445   12573/1676    52  238   25.38)
(smt.stats   65   9411 243223 743767 10129/9715/445   13596/1789    53  245   25.57)
(smt.stats   66   9512 244807 752855 10155/9884/446   14061/1855    54  247   25.66)
ramon: poll                 wall=20.000s usage=19.987s mem=27156KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 14:21:58 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.994s
ramon: group.utime          19.970s
ramon: group.stime          0.024s
ramon: group.mempeak        27412KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
