ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:39:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41095 MiB
ramon: sys.mem.avail        61709 MiB
ramon: sys.nprocs           1253
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/e5Zzb8bI2a2k.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3031769
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.79)
(smt.stats    0    101   1951    211  1142/985/114      99/17     6   19   19.17)
(smt.stats    1    202   5285    785  1632/1453/115     201/20     7   21   19.17)
(smt.stats    2    313   6662   1316  1744/1508/115     331/23     7   21   19.26)
ramon: poll                 wall=1.000s usage=0.937s mem=20432KiB load=0.94 rootload=0.93
(smt.stats    3    414   9339   1766  1932/1647/115     444/26     7   21   19.45)
(smt.stats    4    525  11616   2955  1974/1814/131     569/83     9   40   19.55)
(smt.stats    5    647  16237   7566  2204/2018/131     694/100    10   43   19.74)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  19364  12278  2441/2224/133     786/109    11   47   19.85)
(smt.stats    7    859  21342  15167  2686/2444/133     939/113    12   47   19.85)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&1
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&1
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&2
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&160468094501
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&2
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&160468094501
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755813896 := 234 << 38
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&4
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755813896 := 234 << 38
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755813896 := 234 << 38
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755813896 := 234 << 38
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&160468094496
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 160468094503&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549755813896 := 234 << 38
(smt.stats    8    981  23497  18764  2761/2545/187    1125/175    14   62   20.04)
(smt.stats    9   1115  26280  20876  2780/2559/187    1282/175    14   62   20.14)
(smt.stats   10   1216  28135  23367  2785/2566/187    1387/193    15   72   20.14)
(smt.stats   11   1327  31136  26709  2787/2568/187    1502/193    15   72   20.28)
(smt.stats   12   1449  33185  30473  2788/2569/188    1633/194    16   75   20.28)
(smt.stats   13   1583  35937  35179  2789/2570/189    1771/196    17   75   20.28)
(smt.stats   14   1730  39152  39550  2791/2572/189    1917/196    17   75   20.28)
(smt.stats   15   1831  41214  42332  2796/2573/189    2024/196    17   75   20.38)
(smt.stats   16   1942  43415  44909  2799/2578/189    2139/196    17   75   20.57)
(smt.stats   17   2064  45284  47562  2807/2588/189    2271/196    17   75   20.57)
(smt.stats   18   2198  47114  50292  2807/2588/189    2410/196    17   75   20.57)
(smt.stats   19   2345  50300  53117  2812/2588/189    2561/196    17   75   20.57)
ramon: poll                 wall=2.000s usage=1.936s mem=21716KiB load=1.00 rootload=1.00
(smt.stats   20   2506  52798  56643  2816/2597/189    2727/196    17   75   20.57)
(smt.stats   21   2607  54992  59407  2817/2598/189    2835/196    17   75   20.57)
(smt.stats   22   2718  58337  64348  2818/2598/189    2946/196    17   75   20.57)
(smt.stats   23   2840  61280  67663  2824/2602/189    3074/196    17   75   20.57)
(smt.stats   24   2974  63971  72259  2826/2607/189    3209/196    17   75   20.57)
(smt.stats   25   3121  66803  75626  2830/2609/189    3369/196    17   75   20.57)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   26   3282  68654  79275  2834/2615/190    3542/223    18   82   20.67)
(smt.stats   27   3459  70908  85205  2836/2617/190    3745/223    18   82   20.67)
(smt.stats   28   3560  72208  87910  2839/2620/190    3856/223    18   82   20.67)
(smt.stats   29   3671  74134  90504  2871/2638/190    3976/223    18   82   20.76)
(smt.stats   30   3793  75349  93812  2891/2662/190    4119/223    18   82   20.76)
(smt.stats   31   3927  76864  97990  2894/2669/190    4264/223    18   82   20.76)
ramon: poll                 wall=3.000s usage=2.935s mem=21948KiB load=1.00 rootload=1.00
(smt.stats   32   4074  77944 102448  2896/2669/190    4415/223    18   82   20.76)
(smt.stats   33   4235  80267 108312  2902/2677/190    4577/223    18   82   20.76)
(smt.stats   34   4412  81854 112152  2907/2677/190    4774/223    18   82   20.86)
ramon: poll                 wall=4.000s usage=3.935s mem=22000KiB load=1.00 rootload=1.00
(smt.stats   35   4606  84943 118458  2932/2691/190    4975/225    18   82   20.86)
(smt.stats   36   4707  87029 122430  2941/2716/190    5079/225    18   82   20.86)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253656992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253656992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253657088
(smt.stats   37   4818  88755 126844  2951/2717/190    5208/225    18   82   20.86)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253657088
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253658624
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253656992
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253657088
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253658624
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253657088
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253658624
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253670656
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253657088
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253658624
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253703680
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 196608 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 327680 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 589824 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 262144 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 327680 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 1114112 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 589824 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 589824 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 589824 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 98304 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 65536 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 851968 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2686976 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 3735552 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 3735552 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 3735552 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 3735552 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 3735552 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5832704 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5832704 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 35192832 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 37289984 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 49872896 := 1253656988&1253670912
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 45678592 := 1253656988&1253670912
(smt.stats   38   4940  90615 133252  3131/2879/340    5439/265    19   84   21.34)
(smt.delete-inactive-clauses  :num-deleted-clauses 74)
(smt.stats   39   5074  95187 141415  3138/2883/340    5636/265    19   84   21.44)
(smt.stats   40   5221  99713 148789  3116/2887/340    5776/339    20  119   21.44)
(smt.stats   41   5382 103841 156361  3120/2895/340    5958/339    20  119   21.44)
(smt.stats   42   5559 108801 167899  3123/2898/343    6307/397    21  125   21.54)
(smt.stats   43   5753 115346 179559  3135/2901/343    6525/397    21  125   21.75)
(smt.stats   44   5966 120760 192648  3154/2925/353    6826/463    22  130   21.75)
(smt.stats   45   6067 123644 197699  3168/2941/353    6928/463    22  130   21.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   46   6178 126987 203335  3183/2945/353    6986/477    23  238   21.84)
(smt.stats   47   6300 131253 210257  3200/2966/354    7133/477    23  238   21.94)
(smt.stats   48   6434 135930 217913  3202/2975/354    7309/477    23  238   21.94)
(smt.stats   49   6581 140626 227374  3203/2976/354    7491/489    24  241   21.94)
ramon: poll                 wall=5.000s usage=4.935s mem=23192KiB load=1.00 rootload=1.00
(smt.stats   50   6742 147548 241116  3207/2980/354    7661/489    24  241   21.94)
(smt.stats   51   6919 153677 254115  3209/2982/354    7843/489    24  241   22.03)
(smt.stats   52   7113 162290 265749  3209/2982/354    8040/489    24  241   22.03)
(smt.stats   53   7326 170783 285861  3211/2984/354    8279/489    24  241   22.13)
(smt.stats   54   7560 180407 303908  3212/2985/354    8553/489    24  241   22.13)
(smt.stats   55   7661 185244 311733  3214/2985/354    8659/489    24  241   22.13)
(smt.stats   56   7772 190342 320237  3223/2990/354    8771/489    24  241   22.13)
(smt.stats   57   7894 194304 327231  3236/2999/354    8907/489    24  241   22.13)
(smt.stats   58   8028 197289 334685  3242/3012/354    9060/489    24  241   22.22)
(smt.stats   59   8175 202307 344679  3247/3016/354    9216/489    24  241   22.22)
(smt.stats   60   8336 210256 358836  3249/3022/354    9377/489    24  241   22.22)
(smt.stats   61   8513 217107 372946  3249/3022/354    9568/489    24  241   22.22)
ramon: poll                 wall=6.000s usage=5.935s mem=23440KiB load=1.00 rootload=1.00
(smt.stats   62   8707 223390 381888  3251/3022/354    9769/489    24  241   22.22)
(smt.stats   63   8920 233809 397148  3253/3026/354    9992/489    24  241   22.22)
(smt.stats   64   9154 241182 414682  3266/3028/354   10229/490    24  241   22.32)
(smt.stats   65   9411 250297 436249  3276/3041/354   10497/490    24  241   22.32)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas          :deletions     )
(smt.stats   66   9512 252294 442709  3281/3054/355   10591/564    25  255   22.32)
(smt.stats   67   9623 255973 451318  3286/3058/355   10703/564    25  255   22.32)
(smt.stats   68   9745 259684 460787  3292/3058/355   10833/564    25  255   22.42)
(smt.stats   69   9879 264260 469503  3295/3067/355   10981/564    25  255   22.42)
(smt.delete-inactive-clauses  :num-deleted-clauses 583)
(smt.stats   70  10026 268257 479952  3295/3067/355   10563/564    25  255   22.42)
(smt.stats   71  10187 274145 492571  3295/3067/355   10742/564    25  255   22.83)
(smt.stats   72  10364 278874 503512  3368/3124/356   10975/572    26  282   22.93)
(smt.stats   73  10558 285409 518972  3368/3124/356   11237/572    26  282   22.93)
(smt.stats   74  10771 292458 537002  3368/3124/356   11459/572    26  282   23.02)
ramon: poll                 wall=7.000s usage=6.934s mem=24292KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.934s mem=24572KiB load=1.00 rootload=1.00
(smt.stats   75  11005 298281 551365  3376/3128/356   11700/572    26  282   23.21)
(smt.stats   76  11262 304828 567333  3385/3135/356   12051/572    26  282   23.21)
(smt.stats   77  11544 310823 579447  3405/3159/357   12421/604    27  299   23.40)
(smt.stats   78  11645 313736 588095  3407/3163/357   12534/604    27  299   23.40)
(smt.stats   79  11756 318587 598018  3407/3163/357   12679/604    27  299   23.40)
(smt.stats   80  11878 324286 609369  3408/3164/357   12831/604    27  299   23.40)
(smt.stats   81  12012 326820 616832  3413/3169/358   12987/662    28  308   23.50)
ramon: poll                 wall=9.000s usage=8.934s mem=24748KiB load=1.00 rootload=1.00
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 130 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 130 := 4782&27264963
(smt.stats   82  12159 329908 624626  3502/3244/370   13168/671    28  308   23.50)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 123 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 123 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 2 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 131 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 130 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 642 := 4782&27264963
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 549783078851 := 128 << 13
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 642 := 4782&27264963
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 35184399353795 := 128 << 13
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 4778 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 4778 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 4778 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 4778 := 4782&27264963
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 642 := 4782&27264963
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 35184399353795 := 128 << 13
(smt.stats   83  12320 334878 638666  3550/3254/385   13380/681    28  308   23.81)
(smt.stats   84  12497 338493 652973  3560/3314/399   13713/741    29  325   23.90)
(smt.stats   85  12691 340262 663647  3561/3315/399   13959/741    29  325   24.00)
ramon: poll                 wall=10.003s usage=9.937s mem=25292KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas          :deletions     )
(smt.stats   86  12904 342664 671639  3564/3316/399   14172/741    29  325   24.00)
(smt.stats   87  13138 346527 679829  3700/3331/399   14521/754    29  325   24.19)
ramon: poll                 wall=11.000s usage=10.934s mem=25708KiB load=1.00 rootload=1.00
(smt.stats   88  13395 351128 705346  4204/3586/399   15132/760    29  325   24.28)
(smt.stats   89  13677 353861 728641  4266/3985/399   16010/872    30  329   24.47)
(smt.stats   90  13987 359357 768692  4285/4039/400   16897/872    30  329   24.47)
(smt.stats   91  14088 359906 779586  4286/4040/400   17003/1376    31  335   24.47)
(smt.stats   92  14199 362822 795234  4315/4044/400   17472/1377    31  335   24.57)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5252 := 306068&285848
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5250 := 306068&286200
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5249 := 306068&289944
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5248 := 306068&290200
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5248 := 306068&290200
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5248 := 306068&290200
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5256 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5256 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5256 := 306068&294368
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5256 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5256 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5248 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 5248 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 6272 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 8320 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 10368 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 8320 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 10368 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 10368 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 24704 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 18560 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 18560 := 306068&294368
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 18560 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 10368 := 306068&294048
(smt.stats   93  14322 365087 813376  4563/4290/464   17803/1390    31  335   25.05)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264336 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264336 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264400 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264416 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264576 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264576 := 306068&294304
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264608 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264640 := 306068&294048
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 264640 := 306068&294048
(smt.stats   94  14456 366307 823064  4725/4402/490   18180/1399    31  335   25.24)
(smt.stats   95  14603 371630 856628  4714/4468/490   18686/1582    32  357   25.34)
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 2&303240
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 303240 := 150 << 2
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 2&303144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 303144 := 150 << 2
band: (band[39] (if (= #333 63) 0 (if #567 1 #788)) (shl[64] (* 2 #115) (mod #803 64))) 0 := 2&204864
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 38 #795 #799) 64)) 204864 := 150 << 2
(smt.stats   96  14764 375768 874197  4952/4470/490   19288/1588    32  357   25.54)
ramon: poll                 wall=12.000s usage=11.934s mem=26944KiB load=1.00 rootload=1.00
(smt.stats   97  14941 379389 892443  5226/4979/498   20065/1921    33  364   25.73)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15135 383963 906099  5249/4990/500   20848/1923    33  364   25.92)
(smt.stats   99  15348 390588 942076  5375/5015/500   21685/1927    33  364   25.92)
ramon: poll                 wall=13.000s usage=12.934s mem=27468KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.933s mem=27668KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats  100  15582 398960 966913  5583/5235/501   22689/2528    34  385   26.24)
ramon: poll                 wall=15.000s usage=14.933s mem=27784KiB load=1.00 rootload=1.00
(smt.stats  101  15839 407623 1006799  6008/5413/501   23836/2549    34  385   26.43)
ramon: poll                 wall=16.000s usage=15.933s mem=27952KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.933s mem=27972KiB load=1.00 rootload=1.00
(smt.stats  102  16121 418985 1047522  6315/5999/502   24793/2555    34  385   26.63)
ramon: poll                 wall=18.000s usage=17.933s mem=28228KiB load=1.00 rootload=1.00
(smt.stats  103  16431 430941 1098614  6444/6197/503   25710/3470    35  392   26.92)
ramon: poll                 wall=19.000s usage=18.932s mem=28652KiB load=1.00 rootload=1.00
(smt.stats  104  16771 447681 1135022  6848/6311/503   26625/3475    35  392   27.21)
(smt.stats  105  16872 453260 1159631  7060/6613/503   27158/3687    36  400   27.21)
ramon: poll                 wall=20.000s usage=19.932s mem=29020KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:40:07 2024
ramon: root.execname        z3
ramon: root.utime           19.990s
ramon: root.stime           0.000s
ramon: group.total          20.001s
ramon: group.utime          19.993s
ramon: group.stime          0.008s
ramon: group.mempeak        29532KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.069s
ramon: loadavg              1.00
