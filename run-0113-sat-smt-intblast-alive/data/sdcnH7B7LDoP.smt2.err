ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:41:41 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         39978 MiB
ramon: sys.mem.avail        61377 MiB
ramon: sys.nprocs           1326
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/sdcnH7B7LDoP.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3983005
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   119/117     0/0  58       0    18.46   0.00)
(sat.stats    333   3155    0   132/130   333/323  58       0    18.85   0.02)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 140 :time 0.00)
(sat.stats    333   3155    0   134/132   333/323  64       0    18.85   0.02)
(sat.stats    333   3155    0   134/132   333/323  64       0    18.85   0.02)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 329618.85 :time 0.00)
(sat.stats    333   3155    0   123/121   348/337  64       0    18.85   0.03)
(sat.stats    336   3256    1   123/121   351/339  64       0    18.85   0.03)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    339   3326    2   123/121   354/339  64       0    18.85   0.03)
(sat.stats    342   3348    3   129/127   357/339  64       0    18.85   0.03)
(sat.stats    345   3394    4   142/140   360/340  64       0    18.85   0.03)
(sat.stats    348   3399    5   142/140   363/343  64       0    18.85   0.03)
(sat.stats    351   3408    6   142/140   366/345  64       0    18.85   0.03)
(sat.stats    354   3451    7   142/140   369/348  64       0    18.85   0.03)
(sat.stats    357   3468    8   142/140   372/351  64       0    18.85   0.03)
(sat.stats    360   3477    9   142/140   375/354  64       0    18.85   0.03)
(sat.stats    363   3492   10   142/140   378/356  64       0    18.85   0.03)
(sat.stats    366   3512   11   142/140   381/356  64       0    18.85   0.03)
(sat.stats    369   3534   12   144/142   384/356  64       0    18.85   0.03)
(sat.stats    372   3570   13   144/142   387/356  64       0    18.85   0.03)
(sat.stats    375   3597   14   144/142   390/356  64       0    18.85   0.03)
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 0 := 39 << 2
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&156
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 78 := 78 << 1
 (sat-cleaner :elim-literals 46 :elim-clauses 1 :cost 771 :time 0.00)
 (sat-cleaner :elim-literals 4 :elim-clauses 0 :cost 762 :time 0.00)
 (sat-cleaner :elim-literals 57 :elim-clauses 1 :cost 883 :time 0.00)
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 396 := 549755813987 << 3
(sat.stats    588  10553   23   725/719   595/421  83       0    19.33   0.14)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 1013 :time 0.00)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 1311 :time 0.00)
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 2&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 2199023255555 := 0 << 40
(sat.stats    709  12172   24   880/872   714/445  89       0    19.42   0.19)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 1982 :time 0.00)
 (sat-cleaner :elim-literals 5 :elim-clauses 1 :cost 2500 :time 0.00)
(sat.stats :conflicts   :restarts      :learned/bin         :gc          :time)
(sat.stats      :decisions    :clauses/bin        :units        :memory       )
(sat.stats   1106  18207   70  2576/2567  1125/515  93       0    19.80   0.53)
(sat.stats   1597  26268  204  4009/3996  1626/589  93       0    20.37   0.75)
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 0 := 2061584302109 << 5
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&928
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 4123168604218 := 4123168604218 << 4
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 2061584302110 := 2061584302110 << 4
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&480
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 68169720922112 := 4123168604220 << 3
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1099511627832 := 2061584302087 << 27
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&939524096
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 171 := 4123168604174 << 26
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 0 := 2061584302085 << 29
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&2684354560
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 671088640 := 4123168604170 << 28
ramon: poll                 wall=1.000s usage=0.986s mem=22252KiB load=0.99 rootload=0.97
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1649267441775 := 2061584302108 << 6
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&1792
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 8246337208432 := 4123168604216 << 5
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&1099511628024
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 131941395335104 := 4123168604222 << 2
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1924145328257 := 2061584302113 << 1
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1374389563270 := 2061584302081 << 33
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&8589934592
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 16492674416648 := 4123168604162 << 32
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 77309441739 := 2061584302089 << 25
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 2061584332090 := 2061584302096 << 18
(sat.stats   2443  43532  321  5845/5806  2496/707  93       0    21.94   1.11)
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 2061584316639 := 2061584302084 << 30
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 420906794458 := 2061584302097 << 17
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 506806141979 := 2061584302107 << 7
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&3456
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 231928233984 := 4123168604214 << 6
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 3072 := 2061584302104 << 10
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1280 := 2061584302090 << 24
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1408 := 2061584302091 << 23
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1024 := 2061584302088 << 26
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1536 := 2061584302092 << 22
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1664 := 2061584302093 << 21
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1792 := 2061584302094 << 20
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 2304 := 2061584302098 << 16
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 1920 := 2061584302095 << 19
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 2688 := 2061584302101 << 13
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 2432 := 2061584302099 << 15
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 2560 := 2061584302100 << 14
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 2816 := 2061584302102 << 12
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 2944 := 2061584302103 << 11
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 768 := 2061584302086 << 28
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 384 := 2061584302083 << 31
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 256 := 2061584302082 << 32
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 3200 := 2061584302105 << 9
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 3328 := 2061584302106 << 8
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&6656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 38612 := 4123168604212 << 7
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&167772160
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 527765581335040 := 4123168604180 << 23
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&50331648
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 16140901064697184256 := 4123168604184 << 21
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&92274688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 16140901064680407040 := 4123168604182 << 22
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&301989888
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 8646911284589101056 := 4123168604178 << 24
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&536870912
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 8646911284584906752 := 4123168604176 << 25
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&8589934592
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 8646911284559740928 := 4123168604164 << 31
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&6442450944
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 8646911284563935232 := 4123168604166 << 30
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&1610612736
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 8646911284576518144 := 4123168604172 << 27
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&4294967296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 8646911284568129536 := 4123168604168 << 29
(sat.stats   3596  87255  572  7275/7228  3664/762  93       0    24.10   1.62)
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&622592
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 263882790668672 := 4123168604198 << 14
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&1179648
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 263882790668544 := 4123168604196 << 15
ramon: poll                 wall=2.000s usage=1.984s mem=26024KiB load=1.00 rootload=0.99
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&24576
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 13835058056087470080 := 4123168604208 << 9
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&12800
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 2111062325355520 := 4123168604210 << 8
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&47104
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 1055531162676736 := 4123168604206 << 10
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&90112
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 1055531162676224 := 4123168604204 << 11
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&27262976
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 4222124650686464 := 4123168604186 << 20
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&14680064
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 4222124650688512 := 4123168604188 << 19
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&7864320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 4222124650690560 := 4123168604190 << 18
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&4194304
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 4222124650692608 := 4123168604192 << 17
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&2228224
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 4222124650694656 := 4123168604194 << 16
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&327680
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 4222124650700800 := 4123168604200 << 13
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&172032
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 4222124650702848 := 4123168604202 << 12
(sat.stats   5395 145364 1085  8316/8268  4888/816  93       0    25.76   2.29)
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 9663676416 := 2061584302116 << 39
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 540431955293896704 := 4123168604232 << 38
ramon: poll                 wall=3.000s usage=2.979s mem=28468KiB load=0.99 rootload=1.00
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 687865856 := 2061584302121 << 34
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 671088640 := 2061584302120 << 35
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 654311424 := 2061584302119 << 36
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 637534208 := 2061584302118 << 37
(sat.stats   8092 199773 1713 11306/11252  6456/914  93       0    28.18   3.33)
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 620756992 := 2061584302117 << 38
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&704374636544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 2112986470679933 := 4123168604242 << 33
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&1374389534720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 2121782563702191 := 4123168604240 << 34
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&481036337152
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 18409928507401437183 := 4123168604238 << 35
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&1374389534720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 2113261348585472 := 4123168604234 << 37
band: (band[41] (if (or #503 #504 #505 #506 #507 #508 #509 #510 #511 #512 #513 #514 #515 #516 #517 #518 ...) 0 (if #542 1 #544)) (shl[41] (bv2int %0) (+ 41 #696))) 0 := 0&824633720832
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 40 #707 #709) 64)) 18428371784165229440 := 4123168604236 << 36
 (sat-cleaner :elim-literals 13 :elim-clauses 5 :cost 53284 :time 0.00)
ramon: poll                 wall=4.000s usage=3.973s mem=31776KiB load=0.99 rootload=0.99
 (sat-cleaner :elim-literals 182 :elim-clauses 32 :cost 54775 :time 0.00)
ramon: poll                 wall=5.000s usage=4.971s mem=32584KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.967s mem=32948KiB load=1.00 rootload=1.00
(sat.stats :conflicts :restarts         :learned/bin          :gc          :time)
(sat.stats     :decisions    :clauses/bin          :units         :memory       )
(sat.stats  12507 479944 2248 15585/15529  8837/1069 323       0    31.76   6.08)
ramon: poll                 wall=7.000s usage=6.962s mem=33476KiB load=0.99 rootload=0.99
ramon: poll                 wall=8.000s usage=7.960s mem=34240KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.956s mem=34740KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.953s mem=34972KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.950s mem=35600KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.949s mem=36424KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.945s mem=36708KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.942s mem=36836KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.939s mem=37296KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.936s mem=38152KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.934s mem=38520KiB load=1.00 rootload=0.99
shl: (shl[41] (bv2int %0) (+ 41 (* 2199023255551 #50))) 258802217984 := 120764557370 << 40
(sat.stats  18359 811856 2617 56311/56255 11966/1697 326       0    37.56  17.22)
ramon: poll                 wall=18.000s usage=17.930s mem=38940KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.921s mem=39440KiB load=0.99 rootload=0.99
ramon: poll                 wall=20.000s usage=19.915s mem=40168KiB load=0.99 rootload=0.99
ramon: end                  Wed Dec 25 16:42:01 2024
ramon: root.execname        z3
ramon: root.utime           19.910s
ramon: root.stime           0.010s
ramon: group.total          19.931s
ramon: group.utime          19.911s
ramon: group.stime          0.020s
ramon: group.mempeak        40424KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.017s
ramon: loadavg              1.00
