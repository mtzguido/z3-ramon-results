ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:29:53 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41257 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1254
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Y6Gv3m1TX7Ow.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2999968
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3921    412  1132/1020/89      99/2     2   13   19.07)
(smt.stats    1    202   5311   2435  1964/1772/90     196/5     3   13   19.07)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 50239289415793&1
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 50239289415793&1
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 50239289415793&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 2 := 92 << 45
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1 := 50239289415793&2
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 50239289415793&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 70368744177666 := 70368744177752 << 45
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 50239289415793&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 70368744177666 := 70368744177844 << 45
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 524302 := 50239289415793&524303
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1 := 50239289415793&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 70368744177667 := 70368745750584 << 45
(smt.stats    2    313   6292   3658  2026/1831/113     293/13     6   20   19.38)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 524302 := 25119644707896&524302
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 524301 := 25119644707896&524302
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 524300 := 25119644707896&524300
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 25119644707896&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 6403555720167426 := 70368744177846 << 44
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 2 := 25119644707896&2
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1 := 25119644707896&2
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 25119644707896&2
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 6403555720167426 := 70368744177846 << 44
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 8 := 25119644707896&524302
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 8 := 25119644707896&524302
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 8 := 25119644707896&8
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 6403555720167432 := 70368744177846 << 44
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 25119644707896&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 6403555720167428 := 70368744177846 << 44
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 25119644707896&4
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 6403555720167428 := 70368744177846 << 44
(smt.stats    3    414   7522   5322  2236/1978/113     400/14     6   20   19.48)
(smt.stats    4    525   8049   6791  2281/2062/151     460/22     8   32   19.60)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 1&178
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 0 := 35184372088921 << 1
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 1&178
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 0 := 35184372088921 << 1
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 1&178
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 0 := 35184372088921 << 1
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 1&178
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 0 := 35184372088921 << 1
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 1&178
band: (band[46] (if (= #120 45) 1 (if #554 2 #681)) (shl[46] (bv2int %0) (+ 46 #684))) 1 := 1&178
(smt.stats    5    647  10205   9159  2317/2094/168     594/28     9   36   19.70)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1 := 1&178
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 4 := 5&176
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 4 := 5&176
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 4 := 5&176
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 4 := 5&176
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  11846  11468  2340/2108/169     704/29    10   36   19.70)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&180
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&178
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 140737488355506 := 70368744177838 << 2
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&176
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 140737488355504 := 70368744177838 << 2
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&176
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 140737488355504 := 70368744177838 << 2
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&176
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 140737488355504 := 70368744177838 << 2
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&524296
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 140737488879624 := 70368744177838 << 2
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 2 := 5&696
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 2 := 5&696
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 35184372088917 := 35184372088919 << 3
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 35184372088917 := 35184372088919 << 3
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 35184372088917 := 35184372088919 << 3
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
shl: (shl[46] (bv2int %0) (+ 46 (* 70368744177663 #116))) 699 := 35184372088919 << 3
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
band: (band[46] (if (= #120 45) 1 (if #554 2 #681)) (shl[46] (bv2int %0) (+ 46 #684))) 1 := 5&696
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
band: (band[46] (if (= #120 45) 1 (if #554 2 #681)) (shl[46] (bv2int %0) (+ 46 #684))) 1 := 5&696
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
band: (band[46] (if (= #120 45) 1 (if #554 2 #681)) (shl[46] (bv2int %0) (+ 46 #684))) 2 := 5&696
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
band: (band[46] (if (= #120 45) 1 (if #554 2 #681)) (shl[46] (bv2int %0) (+ 46 #684))) 4 := 5&696
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
band: (band[46] (if (= #120 45) 1 (if #554 2 #681)) (shl[46] (bv2int %0) (+ 46 #684))) 4 := 5&696
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
band: (band[46] (if (= #120 45) 1 (if #554 2 #681)) (shl[46] (bv2int %0) (+ 46 #684))) 2 := 5&696
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
band: (band[46] (if (= #120 45) 1 (if #554 2 #681)) (shl[46] (bv2int %0) (+ 46 #684))) 2 := 5&696
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 5&696
band: (band[46] (if (= #120 45) 1 (if #554 2 #681)) (shl[46] (bv2int %0) (+ 46 #684))) 1 := 5&696
(smt.stats    7    859  13091  14624  2441/2194/199     837/45    13   46   20.00)
(smt.stats    8    981  14929  17526  2457/2218/240     965/48    15   56   20.00)
(smt.stats    9   1115  15248  19331  2466/2225/240    1098/48    15   56   20.12)
(smt.stats   10   1216  15583  22140  2461/2226/240    1058/76    16  202   20.12)
(smt.stats   11   1327  17870  25242  2480/2242/240    1160/76    16  202   20.21)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  20297  28676  2512/2277/241    1320/111    17  205   20.31)
(smt.stats   13   1583  23874  31858  2535/2297/241    1454/111    17  205   20.31)
(smt.stats   14   1730  29623  38375  2535/2297/241    1601/111    17  205   20.43)
(smt.stats   15   1831  32867  42385  2541/2303/242    1708/120    18  212   20.43)
(smt.stats   16   1942  35263  46464  2549/2311/243    1840/120    18  212   20.43)
(smt.stats   17   2064  38939  50929  2565/2327/243    1950/125    19  215   20.43)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&52776565473285
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&52776565473287
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&52776565473279
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&52776565473279
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&52776565473279
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&52776563376167
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&70368743129127
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&70368743129101
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&70368743129101
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&70368743129103
(smt.stats   18   2198  41982  55879  2691/2452/266    2111/136    20  218   20.72)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 6279911176974 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049098 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049098 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1048830 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1048590 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1048590 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1048590 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049102 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049102 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049102 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 3145742 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 5242894 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 5242894 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049614 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049614 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1050638 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1050638 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049630 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049646 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049742 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049806 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 1049742 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 9437198 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 19927054 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 19931150 := 6279911176974&70368743129119
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 19924046 := 6279911176974&70368743129119
(smt.stats   19   2345  43647  59338  2941/2567/347    2344/149    20  218   21.30)
(smt.stats   20   2506  45327  62976  3184/2946/374    2804/259    21  243   21.49)
(smt.stats   21   2607  48671  69844  3193/2955/375    3172/259    21  243   21.49)
ramon: poll                 wall=1.000s usage=0.924s mem=23080KiB load=0.92 rootload=0.90
(smt.stats   22   2718  51984  77614  3206/2966/375    3618/449    22  246   21.68)
(smt.stats   23   2840  57438  86699  3294/3030/377    3865/712    23  246   21.68)
(smt.stats   24   2975  61466  97595  3336/3074/381    4266/876    25  251   21.99)
(smt.stats   25   3122  66147 107716  3353/3089/386    4444/876    25  251   21.99)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 2&1048587
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 2 := 2&1048587
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 703687442825227 := 1048704 << 1
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 2 := 2&1048587
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 703687442825227 := 1048612 << 1
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 2 := 2&1048587
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 703687442825227 := 1048612 << 1
(smt.stats   26   3283  69349 114649  3503/3124/386    4665/909    26  277   22.19)
(smt.stats   27   3460  72603 128851  3577/3302/397    5093/940    27  288   22.29)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3561  77706 138495  3598/3323/399    5257/1049    28  306   22.29)
(smt.stats   29   3672  80628 150594  3611/3336/401    5674/1200    29  322   22.38)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 40 := 45&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 18446462598732841000 := 70368744177648 << 5
(smt.stats   30   3794  84228 157933  3642/3353/405    6070/1201    29  322   22.38)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 40 := 45&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 18446462598732841000 := 70368744177648 << 5
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 40 := 45&40
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 45 #875 #877) 64)) 18446462598732841000 := 70368744177648 << 5
ramon: poll                 wall=2.000s usage=1.924s mem=23848KiB load=1.00 rootload=1.00
(smt.stats   31   3928  86548 168986  3704/3427/414    6253/1247    30  368   22.48)
(smt.stats   32   4075  89630 175362  3716/3435/415    6500/1247    30  368   22.48)
(smt.stats   33   4236  94066 188784  3730/3451/415    6761/1248    30  368   22.48)
(smt.stats   34   4413  97098 197635  3866/3460/416    6948/1273    31  397   22.73)
(smt.stats   35   4607 100190 208153  3956/3678/418    7273/1273    31  397   22.83)
(smt.stats   36   4708 101976 217968  3971/3694/418    7427/1329    32  407   22.88)
(smt.stats   37   4819 106290 225077  3988/3697/418    7580/1329    32  407   22.88)
(smt.stats   38   4941 109721 230968  3999/3722/418    7719/1329    32  407   22.97)
(smt.delete-inactive-clauses  :num-deleted-clauses 171)
(smt.stats   39   5075 114221 241147  4002/3725/419    7813/1397    33  408   22.97)
(smt.stats   40   5222 120816 257279  4014/3737/420    8042/1397    33  408   22.97)
ramon: poll                 wall=3.000s usage=2.924s mem=24616KiB load=1.00 rootload=1.00
(smt.stats   41   5384 130347 282890  4022/3745/420    8272/1467    34  416   22.97)
(smt.stats   42   5561 134567 296272  4033/3749/420    8680/1467    34  416   23.10)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 0 := 11&138412041
(smt.stats   43   5755 138868 312641  4224/3764/421    9082/1551    35  418   23.19)
(smt.stats   44   5968 142468 329532  4738/4459/422    9982/1598    36  423   23.38)
(smt.stats   45   6069 145367 340300  4746/4465/422   10413/1598    36  423   23.48)
(smt.stats   46   6180 147613 348213  4755/4478/422   10657/1598    36  423   23.48)
(smt.stats   47   6302 152343 366222  4770/4479/422   11608/1598    36  423   23.57)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6436 156015 379675  4821/4504/422   12206/1599    36  423   23.71)
ramon: poll                 wall=4.000s usage=3.923s mem=25208KiB load=1.00 rootload=1.00
(smt.stats   49   6583 160222 388169  4834/4548/423   12439/2054    37  427   23.80)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 23384 := 23394&2097153
(smt.stats   50   6744 164020 402205  4933/4655/429   12765/2057    37  427   23.80)
(smt.stats   51   6921 169289 426679  4970/4672/429   13265/2157    38  437   23.80)
(smt.stats   52   7115 173652 444972  4983/4702/432   13807/2158    38  437   23.91)
(smt.stats   53   7328 182162 487396  4995/4713/432   14752/2303    39  449   24.01)
(smt.stats   54   7562 187500 511536  5017/4723/432   15233/2304    39  449   24.01)
ramon: poll                 wall=5.000s usage=4.923s mem=25464KiB load=1.00 rootload=1.00
(smt.stats   55   7663 190314 522542  5078/4746/432   15486/2305    39  449   24.10)
(smt.stats   56   7774 192271 528704  5272/4820/432   15697/2305    39  449   24.22)
(smt.stats   57   7896 195442 540895  5367/5014/432   16012/2307    39  449   24.31)
(smt.stats   58   8030 199549 557441  5403/5112/434   16819/2717    40  454   24.41)
ramon: poll                 wall=6.000s usage=5.922s mem=25976KiB load=1.00 rootload=1.00
(smt.stats   59   8177 205602 580416  5528/5125/434   17619/2724    40  454   24.50)
(smt.stats   60   8338 209605 600571  5626/5257/434   18154/2727    40  454   24.50)
(smt.stats   61   8515 213521 630977  5750/5404/436   18593/3072    41  469   24.72)
(smt.stats   62   8709 219757 651508  6062/5482/436   19381/3079    41  469   24.93)
ramon: poll                 wall=7.000s usage=6.921s mem=26488KiB load=1.00 rootload=1.00
(smt.stats   63   8922 224137 667959  6176/5896/439   19957/3174    42  486   25.02)
(smt.stats   64   9156 231941 696592  6280/5914/439   21108/3178    42  486   25.12)
(smt.stats   65   9413 240163 750554  6766/6078/439   22151/3458    43  495   25.30)
ramon: poll                 wall=8.000s usage=7.921s mem=26968KiB load=1.00 rootload=1.00
(smt.stats   66   9514 242478 759259  6787/6497/440   22792/3538    44  499   25.30)
(smt.stats   67   9625 245420 766887  6944/6521/440   23196/3542    44  499   25.40)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   68   9747 248774 787869  7283/6732/440   23624/3544    44  499   25.50)
(smt.stats   69   9881 254637 814312  7378/7015/440   24031/3548    44  499   25.59)
(smt.delete-inactive-clauses  :num-deleted-clauses 1)
(smt.stats   70  10028 257713 825347  7397/7105/440   24281/3550    44  499   25.59)
(smt.stats   71  10189 260724 843848  7733/7124/440   24593/3550    44  499   25.78)
ramon: poll                 wall=9.000s usage=8.921s mem=27480KiB load=1.00 rootload=1.00
(smt.stats   72  10366 262428 857197  8000/7520/441   24917/3858    45  506   26.26)
(smt.stats   73  10560 265252 877035  8544/8231/441   25826/3861    45  506   26.26)
ramon: poll                 wall=10.000s usage=9.921s mem=28052KiB load=1.00 rootload=1.00
(smt.stats   74  10773 271819 910493  8652/8278/441   26534/3868    45  506   26.53)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 84 := 23394&12301
(smt.stats   75  11007 277209 940807  8730/8405/441   27584/3870    45  506   26.72)
(smt.stats   76  11264 286527 976785  8930/8459/441   28233/3875    45  506   26.81)
ramon: poll                 wall=11.000s usage=10.911s mem=28940KiB load=0.99 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11546 294091 1008892  9244/8712/441   29478/3877    45  506   27.14)
(smt.stats   78  11647 298332 1022534  9341/8971/441   29928/3877    45  506   27.24)
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 23955953 := 23955959&24117249
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 23955953 := 23955959&24117249
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 23955953 := 23955959&24117249
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 23955953 := 23955959&25165825
band: (band[46] (if (or #696 #697 #698 #699 #700 #701 #702 #703 #704 #705 #706 #707 #708 #709 #710 #711 ...) 0 (if #714 1 #804)) (shl[64] (* 2 #114) (mod #878 64))) 23955953 := 23955959&25165825
(smt.stats   79  11758 301806 1046084  9454/9070/441   30452/3880    45  506   27.34)
(smt.stats   80  11880 305611 1070993  9636/9185/451   30953/4424    46  508   27.53)
(smt.stats   81  12014 308243 1098580  9699/9379/451   31477/4424    46  508   27.53)
(smt.stats   82  12161 314048 1138022  9729/9425/451   31967/4424    46  508   27.62)
ramon: poll                 wall=12.000s usage=11.910s mem=29200KiB load=1.00 rootload=1.00
(smt.stats   83  12322 318247 1171674  9808/9456/451   33121/4567    47  508   27.72)
(smt.stats   84  12499 320710 1184402  9862/9542/451   33467/4569    47  508   27.81)
(smt.stats   85  12693 324129 1206649  9902/9610/451   34296/4569    47  508   27.81)
(smt.stats   86  12906 328795 1267019  9918/9630/452   34849/4993    48  512   27.91)
(smt.stats   87  13140 335107 1284419  9955/9663/454   35488/4993    48  512   27.91)
ramon: poll                 wall=13.000s usage=12.910s mem=29456KiB load=1.00 rootload=1.00
(smt.stats   88  13397 345927 1375041 10100/9670/454   36287/5118    49  518   28.11)
(smt.stats   89  13679 352556 1412010 10494/9898/454   37486/5121    49  518   28.30)
ramon: poll                 wall=14.000s usage=13.910s mem=29968KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   90  13990 361701 1459067 10871/10229/454   38671/5126    49  518   28.50)
(smt.stats   91  14091 365141 1473586 10956/10605/454   39136/5128    49  518   28.50)
(smt.stats   92  14202 368148 1488756 10976/10684/454   39347/5128    49  518   28.50)
(smt.stats   93  14324 373303 1535636 10982/10690/454   40078/5128    49  518   28.60)
(smt.stats   94  14458 376544 1569476 10986/10694/454   40661/5128    49  518   28.70)
(smt.stats   95  14605 381142 1589625 11030/10704/454   41056/5129    49  518   28.89)
ramon: poll                 wall=15.000s usage=14.910s mem=30480KiB load=1.00 rootload=0.99
(smt.stats   96  14767 386938 1639164 11298/10789/454   42089/5133    49  518   28.99)
(smt.stats   97  14944 392588 1685914 11491/11035/454   42863/5134    49  518   29.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 434)
(smt.stats   98  15138 400617 1738019 11548/11231/454   43093/5134    49  518   29.18)
(smt.stats   99  15351 409744 1795582 11641/11276/454   43959/5136    49  518   29.27)
ramon: poll                 wall=16.000s usage=15.909s mem=31000KiB load=1.00 rootload=1.00
(smt.stats  100  15585 419258 1875026 11682/11388/457   45622/6846    50  521   29.37)
(smt.stats  101  15842 430670 2010096 11696/11398/457   46590/6846    50  521   29.47)
(smt.stats  102  16124 438045 2053598 12057/11432/457   47115/7107    51  523   29.66)
ramon: poll                 wall=17.000s usage=16.909s mem=31256KiB load=1.00 rootload=1.00
(smt.stats  103  16434 448496 2127344 12215/11811/457   48807/7109    51  523   29.86)
(smt.stats  104  16774 459205 2167733 12233/11931/459   49717/7205    52  530   29.86)
(smt.stats  105  16875 462671 2183847 12235/11939/459   49898/7205    52  530   29.96)
(smt.stats  106  16986 466396 2207592 12240/11944/459   50077/7205    52  530   29.96)
(smt.stats  107  17108 472077 2229588 12248/11952/459   50281/7205    52  530   29.96)
ramon: poll                 wall=18.000s usage=17.896s mem=31628KiB load=0.99 rootload=0.99
(smt.stats  108  17242 477270 2285086 12261/11959/460   50710/7342    53  540   29.96)
(smt.stats  109  17389 478701 2292330 12527/11967/460   51135/7353    53  540   30.15)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  110  17550 483364 2315507 12656/12302/460   52303/7355    53  540   30.25)
ramon: poll                 wall=19.000s usage=18.895s mem=31912KiB load=1.00 rootload=1.00
(smt.stats  111  17727 491047 2371525 12668/12372/460   53099/7355    53  540   30.34)
(smt.stats  112  17921 502272 2403226 12722/12376/460   53635/7357    53  540   30.44)
(smt.stats  113  18134 513133 2483438 12757/12439/460   54870/7357    53  540   30.54)
ramon: poll                 wall=20.000s usage=19.895s mem=32168KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:30:13 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.977s
ramon: group.utime          19.953s
ramon: group.stime          0.024s
ramon: group.mempeak        32424KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.082s
ramon: loadavg              0.99
