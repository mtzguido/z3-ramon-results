ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 21:27:47 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         29622 MiB
ramon: sys.mem.avail        62088 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/0l4BUAh1qfMc.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             588541
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   72.9927     10000        49          0            1        2)
(sat.ddfw       1      1   38.6139     20001        98          1            1        3)
(smt.stats    0    101   5549    651  1256/1111/115      87/11    10   23   52.11)
(smt.stats    1    202   7492   2419  2033/1846/121     181/15    12   25   52.31)
(sat.ddfw       1      1   43.7637     40001       196          2            1        5)
(smt.stats    2    313   8361   3259  2355/2068/121     305/18    12   25   52.41)
(smt.stats    3    414   9892   4834  2398/2162/121     414/22    12   25   52.41)
(sat.ddfw       1      1   39.7878     70001       343          3            1        8)
(smt.stats    4    525  10422   6196  2528/2229/126     525/33    14   31   52.51)
ramon: poll                 wall=1.000s usage=0.922s mem=54748KiB load=0.92 rootload=0.91
(smt.stats    5    647  12788   8047  2582/2329/126     663/47    15   33   52.62)
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 0&271
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4887531495603830784 := 1125899906842623 << 9
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 0&271
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4887531495603830784 := 2 << 9
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 0&271
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4887531495603830784 := 2 << 9
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 0&271
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4887531495603830784 := 2 << 9
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 0&271
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4887531495603830784 := 2 << 9
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 2&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842623&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842622&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842620&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842616&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842623&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842622&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842620&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842616&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842608&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842608&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842112&271
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4887531495603830272 := 1125899906842623 << 9
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842112&271
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4887531495603830272 := 1125899906842623 << 9
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 512&271
shl: (shl[50] (bv2int %0) (mod (bv2int %1) 50)) 0 := 2199023255553 << 9
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 512&271
shl: (shl[50] (bv2int %0) (mod (bv2int %1) 50)) 0 := 6597069766657 << 9
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 270 := 1125899906842112&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 1125899906842112&271
shl: (shl[50] (bv2int %0) (mod (bv2int %1) 50)) 0 := 1125899906842623 << 9
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  15322  11765  2662/2413/149     760/70    16   34   52.81)
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 512&271
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 1 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 4 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 8 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 16 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 8 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 16 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 32 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 64 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 128 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 256 := 512&271
(sat.ddfw       1      1    34.904    110001       539          4            1       12)
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 144 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 160 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 192 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 192 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 160 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 160 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 160 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 160 := 512&271
(smt.stats    7    859  15875  12576  2893/2646/212     876/73    17   43   53.97)
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 160 := 24576&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 192 := 1024&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 192 := 1024&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 256 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 256 := 512&271
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 256 := 512&271
(smt.stats    8    981  18083  17124  3242/3001/237     993/102    22   76   53.78)
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 2251799813685248 := 6597069766660 << 1
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 2251799813685248 := 6597069766660 << 1
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 2251799813685248 := 1125899906842623 << 1
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 0&1
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 2251799813685248 := 1125899906842623 << 1
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 4398046511112&1
shl: (shl[50] (bv2int %0) (mod (bv2int %1) 50)) 4398046511113 := 2199023255556 << 1
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 4398046511198&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 4398046511168&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4398046511168 := 2199023255584 << 5
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 4398046511168&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4398046511168 := 2199023255584 << 5
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 4398046511112&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4398046511112 := 2199023255556 << 5
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 4398046511112&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4398046511112 := 2199023255556 << 5
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 4398046511112&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4398046511112 := 2199023255556 << 5
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 4398046511112&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4398046511112 := 2199023255556 << 5
(sat.ddfw       1      1   30.5991    160000       784          5            1       17)
(smt.stats    9   1115  20400  21485  3311/3058/262    1114/121    25   95   53.88)
(smt.stats   10   1216  23046  25410  3376/3098/262    1238/121    25   95   53.88)
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 4398046511113&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 4398046511113 := 2199023255556 << 5
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 70368744177792&16
shl: (shl[50] (bv2int %0) (mod (bv2int %1) 50)) 2048 := 2199023255556 << 5
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 70368744178176&16
shl: (shl[64] (bv2int %0) (mod (+ #109 #372) 64)) 70368744178176 := 2199023255569 << 5
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 70368744177920&16
shl: (shl[50] (bv2int %0) (mod (bv2int %1) 50)) 4096 := 2199023255560 << 5
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 2 := 64&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 2 := 64&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 4 := 256&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 4 := 256&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 16 := 256&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 16 := 448&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 8 := 211106232533248&16
(smt.stats   11   1327  24593  27244  3451/3206/294    1351/154    26  109   54.00)
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 1 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 2 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 4 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 16 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 16 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 15 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 14 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 4 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 8 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 4 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 4 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 16 := 211106232532992&16
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 0 := 211106232532992&16
band: (band[50] (shl[50] (bv2int %0) (mod #109 50)) (if (= #615 49) 1 (if #617 2 #756))) 16 := 211106232532992&16
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  27349  33145  3597/3305/336    1692/167    27  117   54.44)
ramon: poll                 wall=2.000s usage=1.923s mem=56796KiB load=1.00 rootload=1.00
band: (band[50] (shl[64] (bv2int %0) (mod #373 64)) (if (= #775 63) 0 (if #777 1 #913))) 8 := 211106232533124&33
(smt.stats   13   1583  31043  40174  3680/3402/355    2227/419    30  150   54.54)
(sat.ddfw       1      1   27.7269    220001      1078          6            1       23)
(smt.stats   14   1730  34643  48629  3917/3619/356    2605/437    31  151   54.65)
(smt.stats   15   1831  37355  59574  4027/3759/358    2984/460    32  155   54.86)
(smt.stats   16   1942  40387  70220  4078/3810/360    3543/569    34  164   54.95)
(smt.stats   17   2064  42659  73871  4158/3856/360    3720/570    34  164   55.15)
(sat.ddfw       1      1    23.761    290001      1421          7            1       30)
ramon: poll                 wall=3.004s usage=2.911s mem=57524KiB load=0.99 rootload=0.99
(smt.stats   18   2198  44473  80906  4418/4013/361    4007/626    35  164   55.54)
(sat.ddfw       1      1   21.4477    370001      1813          8            1       38)
(smt.stats   19   2345  49114  97829  4523/4145/362    4473/661    36  166   55.63)
ramon: poll                 wall=4.000s usage=3.907s mem=58136KiB load=1.00 rootload=1.00
(smt.stats   20   2506  54739 121881  4552/4266/366    5101/702    37  168   55.63)
(smt.stats   21   2607  56728 126320  4726/4280/366    5338/732    38  186   55.76)
(smt.stats   22   2718  59661 133664  4874/4464/366    5634/735    38  186   56.05)
(sat.ddfw       1      1   19.5185    460001      2254          9            1       47)
(smt.stats   23   2840  63540 142938  5022/4640/366    6086/739    38  186   56.20)
ramon: poll                 wall=5.000s usage=4.906s mem=58560KiB load=1.00 rootload=1.00
(smt.stats   24   2974  66812 154571  5226/4940/368    7162/901    39  194   56.42)
(sat.ddfw       1      1   17.8699    560001      2745         10            1       57)
(smt.stats   25   3121  71262 164541  5324/4948/368    7552/906    39  194   56.52)
ramon: poll                 wall=6.000s usage=5.894s mem=58828KiB load=0.99 rootload=0.98
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282  77089 183842  5402/5107/371    8237/1067    40  196   56.61)
(sat.ddfw       1      1   16.1693    670001      3284         11            1       68)
(smt.stats   27   3459  82766 199317  5561/5266/375    8627/1161    41  200   56.71)
ramon: poll                 wall=7.012s usage=6.847s mem=58968KiB load=0.94 rootload=0.95
(smt.stats   28   3560  85801 208900  5584/5280/375    8858/1233    42  217   56.71)
(smt.stats   29   3671  89626 224890  5697/5313/375    9132/1235    42  217   56.81)
(smt.stats   30   3793  93900 253487  5811/5413/375    9454/1236    42  217   57.03)
(sat.ddfw       1      1     15.31    790001      3872         12            1       80)
(smt.stats   31   3927  98691 281694  5888/5593/376    9777/1388    43  223   57.03)
ramon: poll                 wall=8.004s usage=7.961s mem=59160KiB load=1.12 rootload=1.12
(smt.stats   32   4074 104890 300771  5932/5601/376   10299/1391    43  223   57.13)
(smt.stats   33   4235 111768 326241  5947/5652/376   10578/1391    43  223   57.13)
(smt.stats   34   4412 116402 357013  5983/5658/376   11061/1393    43  223   57.24)
ramon: poll                 wall=9.000s usage=8.957s mem=59480KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   14.2841    920001      4509         13            1       93)
(smt.stats   35   4606 121454 379920  6127/5710/376   12221/1400    43  223   57.33)
(smt.stats   36   4707 124410 405717  6257/5845/377   12569/1808    44  227   57.46)
ramon: poll                 wall=10.004s usage=10.009s mem=59688KiB load=1.05 rootload=1.05
(smt.stats   37   4818 127754 428776  6331/5968/377   12771/1808    44  227   57.46)
(sat.ddfw       1      1    13.428   1060001      5196         14            1      108)
(smt.stats   38   4940 131213 450233  6396/6101/387   13161/1847    45  234   57.56)
(smt.delete-inactive-clauses  :num-deleted-clauses 329)
(smt.stats   39   5074 133839 464198  6432/6106/387   13062/1847    45  234   57.56)
ramon: poll                 wall=11.000s usage=11.078s mem=60160KiB load=1.07 rootload=1.07
(smt.stats   40   5221 139519 510244  6508/6189/389   13313/1950    46  267   57.87)
(smt.stats   41   5382 144760 547166  6697/6231/389   13637/1961    46  267   57.87)
(sat.ddfw       1      1    12.754   1210001      5931         15            1      123)
(smt.stats   42   5559 149968 571509  6811/6416/389   14497/1969    46  267   57.97)
ramon: poll                 wall=12.000s usage=12.076s mem=60232KiB load=1.00 rootload=1.00
(smt.stats   43   5753 155502 601297  7026/6560/389   15059/1973    46  267   58.08)
(smt.stats   44   5966 159465 634380  7114/6822/390   15739/2254    47  267   58.31)
ramon: poll                 wall=13.000s usage=13.079s mem=60552KiB load=1.00 rootload=1.00
(smt.stats   45   6067 162343 642490  7166/6848/390   16018/2254    47  267   58.41)
(sat.ddfw       1      1    12.012   1370001      6715         16            1      139)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6178 165187 656228  7281/6936/391   16446/2255    47  267   58.50)
(smt.stats   47   6300 168387 668926  7340/7017/391   16665/2374    48  267   58.50)
ramon: poll                 wall=14.000s usage=14.076s mem=60752KiB load=1.00 rootload=0.99
(smt.stats   48   6434 172190 689435  7386/7061/391   17128/2377    48  267   58.50)
(smt.stats   49   6581 175582 704336  7438/7102/391   17640/2378    48  267   58.60)
(sat.ddfw       1      1   11.3576   1540001      7549         17            1      156)
ramon: poll                 wall=15.000s usage=15.074s mem=60932KiB load=1.00 rootload=1.00
(smt.stats   50   6742 180100 728231  7652/7154/391   18062/2381    48  267   58.69)
(smt.stats   51   6919 183946 753857  7764/7379/391   18380/2383    48  267   58.81)
ramon: poll                 wall=16.000s usage=16.073s mem=61164KiB load=1.00 rootload=1.00
(smt.stats   52   7113 188474 786245  7864/7520/391   18926/2384    48  267   58.93)
(sat.ddfw       1      1   10.7701   1720001      8431         18            1      174)
ramon: poll                 wall=17.000s usage=17.074s mem=61260KiB load=1.00 rootload=1.00
(smt.stats   53   7326 194167 830676  7930/7587/391   20177/2388    48  267   59.02)
ramon: poll                 wall=18.000s usage=18.071s mem=61524KiB load=1.00 rootload=1.00
(smt.stats   54   7560 201824 893898  8101/7752/392   21595/2820    49  268   59.22)
(smt.stats   55   7661 204968 911932  8268/7849/392   21810/2820    49  268   59.22)
(sat.ddfw       1      1   10.2465   1910001      9362         19            1      193)
(smt.stats   56   7772 208131 932301  8322/7980/392   22281/2820    49  268   59.69)
ramon: poll                 wall=19.000s usage=19.073s mem=61700KiB load=1.00 rootload=1.00
(smt.stats   57   7894 210752 952794  8545/8046/392   22511/2824    49  268   59.79)
(smt.stats   58   8028 213199 967963  8692/8348/392   23015/2824    49  268   59.79)
ramon: poll                 wall=20.000s usage=20.074s mem=61860KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 21:28:07 2024
ramon: root.execname        z3
ramon: root.utime           20.070s
ramon: root.stime           0.000s
ramon: group.total          20.084s
ramon: group.utime          20.076s
ramon: group.stime          0.008s
ramon: group.mempeak        62120KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.014s
ramon: loadavg              1.00
