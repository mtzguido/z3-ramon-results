ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:21:52 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28366 MiB
ramon: sys.mem.avail        62086 MiB
ramon: sys.nprocs           1386
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/NmW7YHQlaVPL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             777245
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   79.3651     10000        49          0            1        2)
(smt.stats    0    101   4111    577  1214/963/103     100/34     8   21   51.94)
(sat.ddfw       1      1   41.3264     20001        98          1            1        3)
(smt.stats    1    202   5924   1424  1859/1662/104     217/39     9   23   52.06)
(smt.stats    2    313   8834   2348  1907/1717/105     329/49    10   23   52.16)
(sat.ddfw       1      1   41.3223     40001       196          2            1        5)
(smt.stats    3    414   9760   3138  2192/1752/105     445/73    10   23   52.26)
(smt.stats    4    525  10907   4503  2300/2093/109     576/106    12   29   52.38)
(smt.stats    5    647  11825   6368  2335/2122/109     705/106    12   29   52.38)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas         :deletions    )
(smt.stats    6    748  12420   7358  2354/2143/109     808/107    12   29   52.48)
(sat.ddfw       1      1    40.107     70001       343          3            1        8)
(smt.stats    7    859  14261   8888  2366/2157/109     919/107    12   29   52.48)
(smt.stats    8    981  16685  11112  2385/2183/118    1033/140    14   35   52.48)
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #283) 64)) 17179869184 := 17179869182 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #283) 64)) 17179869184 := 17179869182 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #283) 64)) 17179869184 := 17179869182 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 0&3
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 17179869183 := 4294967296 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 0&3
shl: (shl[64] (bv2int %1) (mod (+ #103 #283) 64)) 34359738368 := 11453246124 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 0&3
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 17179869183 := 12884901888 << 2
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 12884901889&1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 12884901889&1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 12884901890&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #283) 64)) 47244640258 := 12884901888 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 17179869182&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #283) 64)) 34359738366 := 17179869181 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 17179869183&1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1 := 17179869183&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #283) 64)) 34359738367 := 17179869182 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1 := 17179869183&1
shl: (shl[64] (bv2int %1) (mod (+ #103 #283) 64)) 34359738367 := 17179869182 << 1
(smt.stats    9   1115  20889  14369  2453/2229/133    1160/150    16   42   52.77)
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1 := 2&1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 2&1
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 5 := 1 << 1
ramon: poll                 wall=1.000s usage=0.820s mem=55064KiB load=0.82 rootload=0.81
(smt.stats   10   1216  23637  16997  2519/2294/149    1254/150    16   42   52.77)
(smt.stats   11   1327  24849  20027  2529/2312/154    1362/152    17   47   52.89)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  26550  23217  2544/2325/161    1481/153    18   47   52.89)
(smt.stats   13   1583  29554  30015  2559/2338/170    1585/152    19   74   52.99)
(sat.ddfw       1      1   36.3636    110001       539          4            1       12)
(smt.stats   14   1730  30909  34503  2571/2353/174    1694/169    21  115   52.99)
(smt.stats   15   1831  31608  36474  2579/2358/174    1802/169    21  115   53.09)
(smt.stats   16   1942  35226  40884  2634/2404/176    1937/184    22  117   53.09)
(smt.stats   17   2064  37627  44889  2657/2422/176    2060/184    22  117   53.21)
(smt.stats   18   2198  41603  51466  2669/2435/179    2204/189    24  124   53.33)
(smt.stats   19   2345  45080  56587  2684/2448/179    2361/189    24  124   53.33)
(sat.ddfw       1      1   32.6364    160000       784          5            1       17)
(smt.stats   20   2506  47761  61396  2685/2449/186    2527/198    25  125   53.33)
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 8589934592&1
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 8589934591 := 12884901888 << 1
(smt.stats   21   2607  50404  65804  2689/2449/186    2624/199    26  134   53.45)
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 8589934592&1
shl: (shl[34] (bv2int %1) (mod (bv2int %0) 34)) 8589934591 := 12884901888 << 1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 8589934592&1
band: (band[34] (shl[34] (bv2int %1) (mod #103 34)) (if (= #558 33) 1 (if #560 3 #651))) 1 := 8589934592&1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1 := 8589934592&1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1 := 8589934592&1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1 := 8589934592&1
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 8589934592&1
band: (band[34] (shl[34] (bv2int %1) (mod #103 34)) (if (= #558 33) 1 (if #560 3 #651))) 1 := 8589934592&1
(smt.stats   22   2718  50849  68636  2711/2470/197    2751/203    27  137   53.45)
(smt.stats   23   2840  51076  71541  2719/2480/202    2885/203    27  137   53.45)
(smt.stats   24   2974  52923  74595  2734/2481/202    3026/208    28  138   53.55)
(smt.stats   25   3121  55072  79878  2758/2496/202    3184/208    28  138   53.55)
ramon: poll                 wall=2.000s usage=1.821s mem=55836KiB load=1.00 rootload=1.00
(smt.stats   26   3282  58145  88005  2763/2525/202    3344/208    28  138   53.81)
(sat.ddfw       1      1   29.3691    220001      1078          6            1       23)
(smt.stats   27   3459  60977  96685  2773/2527/202    3537/208    28  138   53.81)
(smt.stats   28   3560  62643 101878  2775/2537/202    3652/208    28  138   53.92)
(smt.stats   29   3671  64626 108036  2786/2546/202    3775/208    28  138   54.18)
(smt.stats   30   3793  68129 115789  2787/2547/202    3906/208    28  138   54.18)
(smt.stats   31   3927  69281 120774  2787/2547/202    4045/208    28  138   54.18)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  71749 128547  2789/2549/202    4206/208    28  138   54.28)
(sat.ddfw       1      1        28    290001      1421          7            1       30)
(smt.stats   33   4235  73648 136647  2790/2550/202    4374/208    28  138   54.28)
(smt.stats   34   4412  75877 149367  2791/2551/202    4557/208    28  138   54.38)
(smt.stats   35   4606  77779 156330  2796/2556/202    4758/208    28  138   54.38)
(smt.stats   36   4707  78378 160135  2805/2561/202    4858/208    28  138   54.38)
(smt.stats   37   4818  79037 163884  2832/2570/202    4978/208    28  138   54.38)
ramon: poll                 wall=3.000s usage=2.974s mem=56524KiB load=1.15 rootload=1.16
(smt.stats   38   4940  79831 168587  2882/2596/202    5105/210    28  138   54.38)
(sat.ddfw       1      1   26.8456    370001      1813          8            1       38)
(smt.delete-inactive-clauses  :num-deleted-clauses 85)
(smt.stats   39   5074  81011 172948  2935/2681/202    5148/210    28  138   54.50)
(smt.stats   40   5221  82594 180053  2965/2715/203    5287/262    29  139   54.50)
(smt.stats   41   5382  85181 189830  2977/2735/203    5444/262    29  139   54.50)
(smt.stats   42   5559  89863 204719  2981/2739/203    5624/262    29  139   54.50)
(smt.stats   43   5753  94124 217329  2985/2743/203    5817/262    29  139   54.72)
(sat.ddfw       1      1   25.7806    460001      2254          9            1       47)
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 8589934588&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 8589934588&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 4 := 8589934588&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 8589934588&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 8589934586&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 8589934588&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 34&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 36&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 38&8589934591
(smt.stats   44   5966  98340 228145  3018/2770/237    6029/277    30  139   55.21)
(smt.stats   45   6067  99223 229655  3033/2774/237    6144/278    30  139   55.21)
(smt.stats   46   6178 101493 236204  3097/2834/237    6263/278    30  139   55.32)
(smt.stats   47   6300 104735 244858  3104/2856/237    6389/278    30  139   55.32)
ramon: poll                 wall=4.000s usage=4.178s mem=57620KiB load=1.20 rootload=1.20
(smt.stats   48   6434 107324 252208  3102/2856/237    6528/293    31  150   55.32)
(smt.stats   49   6581 108998 257138  3130/2882/239    6671/294    31  150   55.32)
(smt.stats   50   6742 112385 267775  3150/2894/239    6837/295    31  150   55.32)
(smt.stats   51   6919 114950 275425  3169/2921/239    7036/304    32  151   55.44)
(sat.ddfw       1      1   23.2558    560001      2745         10            1       57)
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 12884901888&3
band: (band[34] (shl[34] (bv2int %1) (mod #103 34)) (if (= #558 33) 1 (if #560 3 #651))) 2 := 12884901888&3
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 12884901888&3
band: (band[34] (shl[34] (bv2int %1) (mod #103 34)) (if (= #558 33) 1 (if #560 3 #651))) 2 := 12884901888&3
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 12884901888&3
band: (band[34] (shl[34] (bv2int %1) (mod #103 34)) (if (= #558 33) 1 (if #560 3 #651))) 2 := 12884901888&3
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 0 := 12884901888&3
band: (band[34] (shl[34] (bv2int %1) (mod #103 34)) (if (= #558 33) 1 (if #560 3 #651))) 2 := 12884901888&3
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 12884901884&3
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2 := 12884901888&3
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 16 := 12884901884&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 16 := 12884901884&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 20 := 12884901884&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 24 := 12884901884&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 24 := 12884901884&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 24 := 12884901884&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 28 := 12884901884&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 28 := 12884901884&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 24 := 8589934600&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 72 := 8589934600&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 136 := 8589934600&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 264 := 8589934600&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 520 := 8589934600&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 520 := 8589934600&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2056 := 8589935624&33554431
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7113 117004 280411  3294/2970/270    7273/322    33  158   55.73)
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 136 := 8589936960&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 136 := 8589936960&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 136 := 8589937480&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 200 := 8589937480&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 72 := 8589937480&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 72 := 8589937480&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 76 := 8589937480&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 72 := 8589937480&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 72 := 8589938248&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 72 := 8589937992&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 72 := 8589939016&33554431
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 72 := 8589940040&33554431
(smt.stats   53   7326 120750 295071  3630/3269/341    7700/334    33  158   55.92)
(smt.stats   54   7560 126301 316998  3711/3446/349    8352/414    34  175   56.02)
ramon: poll                 wall=5.000s usage=5.155s mem=58216KiB load=0.98 rootload=0.97
(smt.stats   55   7661 128795 328941  3769/3478/349    8486/415    34  175   56.12)
(smt.stats   56   7772 132426 341268  3818/3534/349    8685/659    35  193   56.12)
(sat.ddfw       1      1   20.9924    670001      3284         11            1       68)
(smt.stats   57   7894 135127 348517  3880/3590/350    8887/662    35  193   56.51)
(smt.stats   58   8028 138283 363301  3961/3713/352    9415/804    36  218   56.82)
(smt.stats   59   8175 142800 379084  3994/3730/352    9640/805    36  218   56.82)
(smt.stats   60   8336 147889 397096  4002/3750/352   10147/805    36  218   56.92)
ramon: poll                 wall=6.000s usage=6.259s mem=59296KiB load=1.10 rootload=1.11
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   61   8513 152439 415454  4016/3764/355   10906/1000    37  223   57.02)
(smt.stats   62   8707 156624 429135  4033/3774/355   11430/1002    37  223   57.16)
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 288 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 289 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 289 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 291 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 295 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 303 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 303 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 315 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 319 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 319 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 383 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 383 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 511 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 511 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1023 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2047 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2047 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 2047 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 4095 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 8191 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 4095 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 8191 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 8191 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 12287 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 16383 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 12287 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 16383 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 16383 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 24575 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 32767 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 131071 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 32767 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 24575 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 32767 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 65535 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 65535 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 262143 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 876543 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 884735 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1015807 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 712703 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 589823 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 655359 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 786431 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 917503 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 917503 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1048575 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 524287 := 8589934591&8589934591
band: (band[34] (shl[64] (bv2int %1) (mod #284 64)) (if (= #670 63) 0 (if #672 1 #824))) 1048571 := 8589934591&8589934591
(smt.stats   63   8920 159411 444654  4455/3978/480   11856/1067    38  227   57.97)
(sat.ddfw       1      1   19.1327    790001      3872         12            1       80)
(smt.stats   64   9154 169943 474054  4653/4310/535   12747/1068    38  227   58.37)
ramon: poll                 wall=7.000s usage=7.324s mem=60892KiB load=1.06 rootload=1.05
(smt.stats   65   9411 182829 516281  4727/4359/535   13412/1258    39  262   58.46)
(sat.ddfw       1      1   17.5913    920001      4509         13            1       93)
(smt.stats   66   9512 184541 522188  4735/4453/536   14092/1721    40  270   58.67)
(smt.stats   67   9623 185130 532423  4744/4460/536   14638/1721    40  270   58.76)
(smt.stats   68   9745 190811 551498  4768/4461/536   14990/1721    40  270   58.76)
(smt.stats   69   9879 197010 581412  4778/4490/536   15354/1721    40  270   58.76)
ramon: poll                 wall=8.003s usage=8.380s mem=61268KiB load=1.05 rootload=1.06
(smt.delete-inactive-clauses  :num-deleted-clauses 1214)
(smt.stats   70  10026 198909 594629  4788/4504/541   14683/2076    41  275   58.95)
(smt.stats   71  10187 202614 613801  4789/4505/542   14960/2076    41  275   58.95)
(smt.stats   72  10364 206228 634429  4790/4506/542   15206/2076    41  275   58.95)
(sat.ddfw       1      1   16.3056   1060001      5196         14            1      108)
(smt.stats   73  10558 212417 663966  4793/4509/542   15661/2317    42  330   59.33)
ramon: poll                 wall=9.000s usage=9.361s mem=61692KiB load=0.98 rootload=0.98
(smt.stats   74  10771 216926 688939  4797/4511/542   15975/2317    42  330   59.33)
(smt.stats   75  11005 226831 725119  4804/4516/542   16420/2317    42  330   59.33)
(smt.stats   76  11262 229736 749118  4810/4526/542   16855/2317    42  330   59.44)
(sat.ddfw       1      1   15.1899   1210001      5931         15            1      123)
ramon: poll                 wall=10.000s usage=10.360s mem=61864KiB load=1.00 rootload=1.00
(smt.stats   77  11544 237237 784307  4875/4561/544   17460/2462    43  332   59.54)
(smt.stats   78  11645 240750 798203  4931/4631/544   17747/2463    43  332   59.73)
(smt.stats   79  11756 243119 809390  4946/4650/544   17917/2463    43  332   60.04)
(smt.stats   80  11878 245684 821625  4962/4651/544   18120/2527    44  354   60.33)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   81  12012 247884 837843  4991/4695/549   18680/2527    44  354   60.44)
ramon: poll                 wall=11.000s usage=11.389s mem=62820KiB load=1.03 rootload=1.03
(smt.stats   82  12159 250974 860991  4993/4697/549   19111/2527    44  354   60.54)
(sat.ddfw       1      1   14.2934   1370001      6715         16            1      139)
(smt.stats   83  12320 257148 890386  4995/4699/549   19854/2615    45  398   60.64)
(smt.stats   84  12497 264421 914485  5144/4704/549   20502/2624    45  398   60.73)
ramon: poll                 wall=12.000s usage=12.384s mem=63260KiB load=0.99 rootload=0.99
(smt.stats   85  12691 272935 948212  5198/4901/549   20864/2624    45  398   60.83)
(sat.ddfw       1      1   13.4271   1540001      7549         17            1      156)
ramon: poll                 wall=13.000s usage=13.387s mem=63500KiB load=1.00 rootload=1.01
ramon: poll                 wall=14.000s usage=14.385s mem=63500KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   12.6573   1720001      8431         18            1      174)
ramon: poll                 wall=15.000s usage=15.383s mem=63504KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.9745   1910001      9362         19            1      193)
ramon: poll                 wall=16.000s usage=16.386s mem=63508KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=17.381s mem=63508KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   11.3999   2110001     10343         20            1      214)
ramon: poll                 wall=18.000s usage=18.413s mem=63520KiB load=1.03 rootload=1.03
ramon: poll                 wall=19.000s usage=19.415s mem=63532KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   10.8404   2320001     11372         21            1      235)
ramon: poll                 wall=20.000s usage=20.413s mem=63768KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:22:12 2024
ramon: root.execname        z3
ramon: root.utime           20.450s
ramon: root.stime           0.010s
ramon: group.total          20.470s
ramon: group.utime          20.454s
ramon: group.stime          0.016s
ramon: group.mempeak        65800KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.056s
ramon: loadavg              1.02
