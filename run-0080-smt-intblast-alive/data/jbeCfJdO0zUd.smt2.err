ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:52:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24962 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1392
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/jbeCfJdO0zUd.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             130796
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3616    954  1321/1126/107      99/14     3   16   19.20)
(smt.stats    1    202   6192   1667  1958/1744/108     205/14     4   17   19.49)
(smt.stats    2    313   6713   2062  2667/2361/108     320/14     4   17   19.68)
(smt.stats    3    414   7250   3193  2949/2671/108     437/15     4   17   19.68)
(smt.stats    4    525  10788   4962  3128/2866/113     537/49     7   20   19.77)
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1 := 1&36028797018963967
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 63 #775 #779) 64)) 36028797018963967 := 36028797018963968 >>l 63
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1 := 1&36028797018963967
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 63 #775 #779) 64)) 36028797018963967 := 36028797018963968 >>l 63
(smt.stats    5    647  16360   8791  3171/2920/114     656/54     8   21   19.87)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify   :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    748  17222   9865  3242/2958/119     762/55     9   22   19.99)
ramon: poll                 wall=1.000s usage=0.963s mem=21164KiB load=0.96 rootload=0.95
(smt.stats    7    859  18755  13264  3347/3026/119     877/69    10   22   20.09)
(smt.stats    8    981  19466  15030  3490/3233/121    1026/82    11   23   20.09)
(smt.stats    9   1115  20714  18801  3512/3250/121    1165/82    11   23   20.20)
(smt.stats   10   1216  21802  20990  3836/3400/121    1279/94    12   23   20.30)
(smt.stats   11   1327  23030  25387  3896/3609/121    1396/96    12   23   20.30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  25479  28541  3916/3665/125    1539/113    14   25   20.30)
(smt.stats   13   1583  29638  31569  3966/3665/126    1673/143    15   30   20.48)
(smt.stats   14   1730  33684  35136  4095/3751/126    1822/143    15   30   20.48)
(smt.stats   15   1831  36614  42553  4135/3872/126    1917/143    15   30   20.59)
(smt.stats   16   1942  39496  51257  4181/3891/126    2032/143    15   30   20.79)
(smt.stats   17   2064  41842  58295  4219/3943/126    2159/143    15   30   20.79)
ramon: poll                 wall=2.001s usage=1.963s mem=21952KiB load=1.00 rootload=1.00
(smt.stats   18   2198  44653  64801  4258/3978/126    2296/143    15   30   20.79)
(smt.stats   19   2345  49471  71095  4260/4009/126    2442/143    15   30   20.79)
(smt.stats   20   2506  51469  82097  4279/4016/126    2598/143    15   30   20.79)
(smt.stats   21   2607  52800  91276  4289/4028/126    2699/143    15   30   20.90)
(smt.stats   22   2718  53961  97820  4292/4041/126    2821/143    15   30   20.90)
(smt.stats   23   2840  56165 110774  4312/4041/126    2944/143    15   30   21.12)
(smt.stats   24   2974  58109 119332  4336/4077/126    3091/144    15   30   21.12)
(smt.stats   25   3121  59917 126409  4347/4085/127    3241/188    16   31   21.23)
(smt.stats   26   3282  64139 144363  4352/4101/127    3408/188    16   31   21.23)
(smt.stats   27   3459  67644 156908  4376/4105/127    3581/188    16   31   21.33)
(smt.stats   28   3560  68655 159206  4382/4125/127    3682/188    16   31   21.42)
(smt.stats   29   3671  69963 167285  4386/4131/127    3793/188    16   31   21.42)
(smt.stats   30   3793  71814 176485  4438/4135/127    3919/189    16   31   21.42)
(smt.stats   31   3927  73876 188537  4512/4208/127    4058/189    16   31   21.52)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   32   4074  75379 193698  4526/4270/127    4203/190    16   31   21.93)
(smt.stats   33   4235  80411 204626  4529/4278/127    4361/190    16   31   22.03)
ramon: poll                 wall=3.000s usage=2.959s mem=23444KiB load=1.00 rootload=1.00
(smt.stats   34   4412  84072 221242  4602/4289/127    4537/190    16   31   22.12)
(smt.stats   35   4606  86946 234434  4665/4352/127    4736/190    16   31   22.22)
(smt.stats   36   4707  88596 239898  4708/4419/127    4838/190    16   31   22.31)
(smt.stats   37   4818  90978 250265  4739/4466/127    4952/190    16   31   22.31)
(smt.stats   38   4940  93746 259364  4743/4490/127    5070/190    16   31   22.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074  96074 272157  4748/4491/127    5208/190    16   31   22.50)
(smt.stats   40   5221  98350 288146  4752/4495/127    5379/190    16   31   22.50)
(smt.stats   41   5382 100479 300231  4783/4499/127    5540/190    16   31   22.60)
(smt.stats   42   5559 103808 317801  4803/4546/127    5718/191    16   31   23.43)
(smt.stats   43   5753 108163 340419  4805/4552/127    5910/191    16   31   23.53)
(smt.stats   44   5966 111855 366927  4861/4556/128    6123/244    17   31   23.62)
(smt.stats   45   6067 113906 377437  4889/4612/128    6226/244    17   31   23.62)
(smt.stats   46   6178 115409 387818  4926/4644/128    6339/244    17   31   23.73)
(smt.stats   47   6300 117586 398642  4947/4680/128    6462/244    17   31   23.83)
ramon: poll                 wall=4.000s usage=3.959s mem=25488KiB load=1.00 rootload=1.00
(smt.stats   48   6434 119539 407307  4966/4701/128    6600/244    17   31   23.83)
(smt.stats   49   6581 120976 411163  5023/4714/128    6748/244    17   31   23.92)
(smt.stats   50   6742 123599 420684  5122/4831/128    6913/244    17   31   23.92)
(smt.stats   51   6919 130032 435238  5139/4870/128    7092/244    17   31   24.03)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions    )
(smt.stats   52   7113 132921 447001  5208/4886/128    7286/244    17   31   24.13)
(smt.stats   53   7326 136044 468682  5248/4975/128    7501/244    17   31   24.32)
(smt.stats   54   7560 139456 484437  5281/4995/128    7736/244    17   31   24.42)
(smt.stats   55   7661 141318 490619  5312/5046/128    7837/244    17   31   24.42)
(smt.stats   56   7772 143235 506700  5317/5064/128    7947/244    17   31   24.42)
(smt.stats   57   7894 145550 522466  5317/5064/128    8069/244    17   31   24.51)
(smt.stats   58   8028 147879 534037  5343/5064/128    8203/244    17   31   24.61)
(smt.stats   59   8175 150988 545096  5348/5091/128    8354/244    17   31   24.71)
ramon: poll                 wall=5.000s usage=4.959s mem=26512KiB load=1.00 rootload=1.00
(smt.stats   60   8336 154898 570141  5349/5096/128    8514/244    17   31   26.29)
(smt.stats   61   8513 157221 576550  5602/5097/128    8691/244    17   31   26.47)
(smt.stats   62   8707 160832 605325  5693/5407/128    8886/244    17   31   26.57)
(smt.stats   63   8920 163410 616639  5795/5441/128    9135/244    17   31   26.57)
(smt.stats   64   9154 168012 644708  5797/5544/128    9419/244    17   31   26.67)
(smt.stats   65   9411 174512 661239  5805/5544/128    9684/244    17   31   26.67)
(smt.stats   66   9512 175388 665203  5832/5562/128    9797/244    17   31   26.67)
(smt.stats   67   9623 176855 671805  5875/5583/128    9918/245    17   31   26.76)
ramon: poll                 wall=6.000s usage=5.953s mem=28556KiB load=0.99 rootload=0.99
(smt.stats   68   9745 179466 677010  5889/5626/128   10045/245    17   31   26.76)
(smt.stats   69   9879 180868 686733  5936/5653/128   10177/247    17   31   26.76)
(smt.delete-inactive-clauses  :num-deleted-clauses 117)
(smt.stats   70  10026 183602 691263  5944/5687/128   10211/247    17   31   26.76)
(smt.stats   71  10187 186573 701751  5948/5695/128   10371/247    17   31   26.76)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   72  10364 189899 716813  5951/5697/128   10546/247    17   31   26.76)
(smt.stats   73  10558 194093 729298  5984/5702/128   10742/247    17   31   26.76)
(smt.stats   74  10771 198609 751249  5987/5734/128   10956/247    17   31   26.86)
(smt.stats   75  11005 201686 762593  5996/5735/128   11191/247    17   31   26.95)
(smt.stats   76  11262 206846 774520  6014/5749/128   11455/247    17   31   27.05)
(smt.stats   77  11544 212675 788339  6047/5792/128   11730/247    17   31   27.15)
(smt.stats   78  11645 214757 795355  6065/5807/128   11830/248    17   31   27.15)
(smt.stats   79  11756 216759 799759  6084/5821/128   11938/249    17   31   27.24)
(smt.stats   80  11878 219181 810789  6094/5835/128   12056/249    17   31   27.24)
(smt.stats   81  12012 222448 818885  6102/5847/128   12187/249    17   31   27.34)
(smt.stats   82  12159 227078 827050  6194/5852/128   12329/250    17   31   27.34)
ramon: poll                 wall=7.000s usage=6.952s mem=29324KiB load=1.00 rootload=1.00
(smt.stats   83  12320 230689 830655  6317/5964/128   12492/250    17   31   27.44)
(smt.stats   84  12497 235382 837175  6427/6099/128   12663/251    17   31   27.44)
(smt.stats   85  12691 237990 848774  6502/6196/128   12866/252    17   31   27.54)
(smt.stats   86  12904 240603 856083  6617/6266/129   13079/436    18   33   27.54)
(smt.stats   87  13138 243173 874943  6631/6372/129   13321/436    18   33   27.54)
ramon: poll                 wall=8.000s usage=7.952s mem=29836KiB load=1.00 rootload=1.00
(smt.stats   88  13395 244752 879167  7063/6377/129   13590/436    18   33   27.74)
(smt.stats   89  13677 248240 894134  7142/6874/129   13888/436    18   33   27.84)
(smt.stats   90  13987 254450 917763  7268/6903/129   14212/436    18   33   27.93)
(smt.stats   91  14088 256694 921276  7274/7019/129   14321/436    18   33   27.93)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions    )
(smt.stats   92  14199 259664 925389  7297/7042/129   14446/436    18   33   28.03)
(smt.stats   93  14321 264643 932561  7309/7044/129   14598/436    18   33   28.03)
(smt.stats   94  14455 268243 937639  7311/7056/129   14732/436    18   33   28.03)
(smt.stats   95  14602 270240 951124  7349/7082/129   14878/436    18   33   28.14)
(smt.stats   96  14763 271389 962577  7363/7108/129   15036/436    18   33   28.14)
ramon: poll                 wall=9.000s usage=8.952s mem=30348KiB load=1.00 rootload=1.00
(smt.stats   97  14940 273341 968434  7493/7116/129   15210/436    18   33   28.24)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 276461 982708  7827/7488/129   15418/436    18   33   28.33)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions    )
(smt.stats   99  15347 279360 1005739  7898/7578/129   15632/436    18   33   28.43)
(smt.stats  100  15581 282675 1022627  7936/7648/129   15944/436    18   33   28.43)
(smt.stats  101  15838 285885 1034933  7937/7682/129   16206/436    18   33   28.54)
(smt.stats  102  16120 289504 1050303  8042/7683/129   16504/436    18   33   28.64)
(smt.stats  103  16430 293609 1079140  8058/7789/130   16814/640    19   35   28.86)
(smt.stats  104  16770 299965 1118773  8089/7824/130   17162/640    19   35   28.96)
(smt.stats  105  16871 302009 1141998  8091/7836/130   17263/640    19   35   28.96)
(smt.stats  106  16982 304022 1163626  8091/7836/130   17377/640    19   35   28.96)
ramon: poll                 wall=10.000s usage=9.952s mem=31140KiB load=1.00 rootload=1.00
(smt.stats  107  17104 306054 1168478  8092/7837/130   17499/640    19   35   29.06)
(smt.stats  108  17238 308599 1177490  8101/7844/130   17633/640    19   35   29.15)
(smt.stats  109  17385 310444 1200277  8101/7844/131   17779/649    20   36   29.25)
(smt.stats  110  17546 312005 1213694  8101/7844/131   17940/649    20   36   29.34)
(smt.stats  111  17723 314228 1227924  8109/7844/131   18117/649    20   36   29.34)
(smt.stats  112  17917 317628 1244834  8220/7853/131   18330/649    20   36   29.55)
(smt.stats  113  18130 320269 1261692  8227/7970/131   18555/649    20   36   29.55)
(smt.stats  114  18364 324257 1304379  8228/7971/131   18788/649    20   36   29.55)
(smt.stats  115  18621 327581 1325768  8260/7972/131   19049/649    20   36   29.65)
(smt.stats  116  18903 332823 1344655  8271/8010/131   19332/649    20   36   29.65)
ramon: poll                 wall=11.000s usage=10.945s mem=31908KiB load=0.99 rootload=0.99
(smt.stats  117  19213 337330 1357762  8296/8016/131   19646/649    20   36   29.65)
(smt.stats  118  19553 341993 1385498  8400/8048/131   19988/649    20   36   29.75)
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions    )
(smt.stats  119  19926 348331 1449188  8428/8163/131   20362/649    20   36   29.75)
(smt.delete-inactive-clauses  :num-deleted-clauses 6)
(smt.stats  120  20027 349840 1454216  8428/8171/131   20461/649    20   36   29.75)
(smt.stats  121  20138 353399 1460349  8429/8172/131   20571/649    20   36   29.75)
(smt.stats  122  20260 356809 1467381  8429/8172/131   20693/649    20   36   29.85)
(smt.stats  123  20394 359601 1481257  8432/8175/131   20824/649    20   36   29.85)
(smt.stats  124  20541 360404 1487788  8432/8175/131   20971/649    20   36   29.85)
(smt.stats  125  20702 363304 1497276  8432/8175/131   21132/649    20   36   29.85)
(smt.stats  126  20879 365555 1523310  8432/8175/131   21309/649    20   36   29.85)
(smt.stats  127  21073 366723 1527714  8586/8175/131   21522/649    20   36   29.95)
ramon: poll                 wall=12.000s usage=11.943s mem=32276KiB load=1.00 rootload=1.00
(smt.stats  128  21286 368667 1541949  8627/8366/131   21738/649    20   36   30.04)
(smt.stats  129  21520 371010 1560781  8634/8370/131   21982/649    20   36   30.14)
(smt.stats  130  21777 374553 1598418  8636/8379/131   22242/649    20   36   33.20)
(smt.stats  131  22059 378725 1638675  8644/8380/131   22524/649    20   36   33.29)
(smt.stats  132  22369 382206 1676304  8661/8404/131   22830/649    20   36   33.39)
(smt.stats  133  22709 385331 1705365  9033/8412/131   23175/654    20   36   33.48)
ramon: poll                 wall=13.005s usage=12.951s mem=36196KiB load=1.00 rootload=1.01
(smt.stats  134  23082 390349 1747008  9126/8853/141   23576/817    21   59   33.68)
(smt.stats  135  23492 397132 1767513  9154/8872/141   23990/817    21   59   33.78)
(smt.stats  136  23593 398249 1770841  9176/8899/141   24090/817    21   59   33.78)
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 0 := 4503599627370496&53
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 63 #775 #779) 64)) 9259400833873739829 := 36028797018963968 >>l 11
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 0 := 4503599627370496&53
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 63 #775 #779) 64)) 9259400833873739829 := 36028797018963968 >>l 11
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 0 := 4503599627370496&53
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 63 #775 #779) 64)) 9259400833873739829 := 36028797018963968 >>l 11
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 0 := 4503599627370496&53
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 63 #775 #779) 64)) 9259400833873739829 := 36028797018963968 >>l 11
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 0 := 4503599627370496&53
lshr: (lshr[64] (* 256 (bv2int %1)) (mod (+ 63 #775 #779) 64)) 9259400833873739829 := 14080 >>l 11
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 0 := 4503599627370496&0
lshr: (lshr[55] (bv2int %1) (+ 55 (* 36028797018963967 #121))) 53 := 0 >>l 3
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 0 := 4503599627370496&0
lshr: (lshr[55] (bv2int %1) (+ 55 (* 36028797018963967 #121))) 53 := 0 >>l 3
(smt.stats  137  23705 400791 1775366  9199/8927/141   24202/817    21   59   33.87)
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 0 := 4503599627370496&0
lshr: (lshr[55] (bv2int %1) (+ 55 (* 36028797018963967 #121))) 52 := 0 >>l 3
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 0 := 4503599627370496&0
lshr: (lshr[55] (bv2int %1) (+ 55 (* 36028797018963967 #121))) 52 := 0 >>l 3
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 53 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 52 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 56 := 4503599627370496&56
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 48 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 64 := 4503599627370496&64
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 128 := 4503599627370496&128
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 256 := 4503599627370496&256
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 512 := 4503599627370496&512
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1024 := 4503599627370496&1024
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1024 := 4503599627370496&1024
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 2048 := 4503599627370496&2048
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 4096 := 4503599627370496&4096
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 4096 := 4503599627370496&4096
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8192 := 4503599627370496&8192
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 16384 := 4503599627370496&16384
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 32768 := 4503599627370496&32768
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 65536 := 4503599627370496&65536
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 131072 := 4503599627370496&131072
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 262144 := 4503599627370496&262144
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 524288 := 4503599627370496&524288
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1048576 := 4503599627370496&1048576
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 2097152 := 4503599627370496&2097152
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 4194304 := 4503599627370496&4194304
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8388608 := 4503599627370496&8388608
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 16777216 := 4503599627370496&16777216
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 16777216 := 4503599627370496&16777216
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 33554432 := 4503599627370496&33554432
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 67108864 := 4503599627370496&67108864
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 67108864 := 4503599627370496&67108864
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 134217728 := 4503599627370496&134217728
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 268435456 := 4503599627370496&268435456
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 536870912 := 4503599627370496&536870912
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1073741824 := 4503599627370496&1073741824
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 2147483648 := 4503599627370496&2147483648
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 4294967296 := 4503599627370496&4294967296
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8589934592 := 4503599627370496&8589934592
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 17179869184 := 4503599627370496&17179869184
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 34359738368 := 4503599627370496&34359738368
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 68719476736 := 4503599627370496&68719476736
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 137438953472 := 4503599627370496&137438953472
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 274877906944 := 4503599627370496&274877906944
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 549755813888 := 4503599627370496&549755813888
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1099511627776 := 4503599627370496&1099511627776
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 2199023255552 := 4503599627370496&2199023255552
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 4398046511104 := 4503599627370496&4398046511104
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8796093022208 := 4503599627370496&8796093022208
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 17592186044416 := 4503599627370496&17592186044416
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 524288 := 4503599627370496&524288
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1024 := 4503599627370496&1024
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 511 := 4503599627370496&511
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 510 := 4503599627370496&510
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 508 := 4503599627370496&508
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 504 := 4503599627370496&504
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 496 := 4503599627370496&496
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 480 := 4503599627370496&480
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 256 := 4503599627370496&256
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 223 := 4503599627370496&223
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 2 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 4 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 16 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 64 := 4503599627370496&64
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 128 := 4503599627370496&128
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 31 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 30 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 28 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 24 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 16 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 16 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 64 := 4503599627370496&64
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 2 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 4 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 32 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 8 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 1 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 2 := 4503599627370496&53
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 4 := 4503599627370496&53
(smt.stats  138  23831 403024 1795122  9448/9129/376   24358/868    22   61   35.03)
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 2048 := 4503599627370496&2048
band: (band[55] (if (= #643 63) 9223372036854775808 (if #645 4611686018427387904 #769)) (lshr[64] (* 256 #339) (mod #782 64))) 512 := 4503599627370496&512
(smt.stats :restarts :decisions     :clauses/bin/units          :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions    )
(smt.stats  139  24112 406968 1821831  9466/9147/396   24653/868    22   61   35.13)
(smt.stats  140  24273 410522 1883210  9418/9157/406   24797/923    23  127   35.22)
(smt.stats  141  24450 413130 1898027  9571/9310/409   25024/924    24  127   35.32)
(smt.stats  142  24644 418190 1937623  9572/9311/409   25221/924    24  127   35.41)
ramon: poll                 wall=14.000s usage=13.943s mem=38032KiB load=1.00 rootload=0.98
(smt.stats  143  24857 423777 1975822  9572/9311/409   25432/967    25  133   35.51)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats  144  25091 429555 2004142  9670/9313/409   25695/967    25  133   35.61)
(smt.stats  145  25348 437688 2061988  9689/9409/409   25955/967    25  133   35.61)
(smt.stats  146  25630 444416 2102481  9735/9466/411   26247/996    26  136   35.70)
(smt.stats  147  25940 455136 2195948  9736/9475/411   26563/996    26  136   35.89)
ramon: poll                 wall=15.000s usage=14.943s mem=38800KiB load=1.00 rootload=1.00
(smt.stats  148  26280 462633 2284433  9743/9478/411   26911/1016    27  137   36.10)
(smt.stats  149  26653 472573 2329719  9801/9540/413   27293/1031    28  140   36.31)
(smt.stats  150  27063 485425 2362883  9805/9544/413   27703/1031    28  140   36.64)
ramon: poll                 wall=16.000s usage=15.943s mem=39824KiB load=1.00 rootload=1.00
(smt.stats  151  27513 494288 2427520 10126/9607/414   28153/1032    29  143   37.02)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  152  27614 495954 2450820 10421/10099/417   28264/1032    29  143   37.02)
(smt.stats  153  27725 499752 2504317 10421/10157/417   28375/1032    29  143   37.02)
(smt.stats  154  27847 504672 2546449 10421/10157/417   28491/1033    30  149   37.02)
(smt.stats  155  27981 507137 2560249 10434/10158/417   28635/1033    30  149   37.13)
(smt.stats  156  28128 512428 2575459 10435/10171/417   28784/1033    30  149   37.13)
(smt.stats  157  28289 519898 2598503 10438/10174/417   28942/1033    30  149   37.22)
(smt.stats  158  28466 525235 2625265 10451/10176/417   29135/1033    30  149   37.32)
(smt.stats  159  28660 532764 2659700 10457/10193/417   29328/1033    30  149   37.32)
ramon: poll                 wall=17.000s usage=16.942s mem=40312KiB load=1.00 rootload=1.00
(smt.stats  160  28873 537259 2667765 10625/10193/417   29576/1033    30  149   37.41)
(smt.stats  161  29107 544349 2695923 10698/10430/417   29832/1033    30  149   37.51)
(smt.stats  162  29364 551305 2721073 10718/10439/418   30096/1091    31  150   37.51)
(smt.stats  163  29646 556552 2742198 10726/10462/418   30403/1091    31  150   37.61)
(smt.stats  164  29956 562698 2797708 10777/10462/418   30727/1091    31  150   37.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 639)
ramon: poll                 wall=18.000s usage=17.942s mem=40844KiB load=1.00 rootload=1.00
(smt.stats  165  30296 576262 2822044 10883/10536/418   30555/1091    31  150   37.81)
(smt.stats  166  30669 591235 2861739 10940/10673/419   30955/1267    32  152   38.01)
(smt.stats  167  31079 608462 2968708 10974/10677/419   31365/1267    32  152   38.30)
ramon: poll                 wall=19.000s usage=18.940s mem=41424KiB load=1.00 rootload=1.00
(smt.stats  168  31529 625672 3007152 11221/10725/419   31824/1270    32  152   38.39)
(smt.stats  169  32023 641684 3049101 11347/10964/419   32341/1270    32  152   38.49)
(smt.stats  170  32124 643369 3061135 11377/11097/419   32445/1270    32  152   38.49)
(smt.stats  171  32235 647412 3072917 11378/11114/419   32558/1270    32  152   38.59)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  172  32357 649912 3111291 11392/11123/419   32681/1270    32  152   38.59)
(smt.stats  173  32491 653019 3125954 11444/11131/419   32818/1270    32  152   38.68)
(smt.stats  174  32638 655374 3143195 11447/11183/419   32972/1270    32  152   38.68)
(smt.stats  175  32799 657712 3159107 11447/11183/419   33133/1270    32  152   38.78)
ramon: poll                 wall=20.000s usage=19.940s mem=41764KiB load=1.00 rootload=0.99
ramon: end                  Fri Nov  1 18:53:15 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.020s
ramon: group.total          19.984s
ramon: group.utime          19.960s
ramon: group.stime          0.024s
ramon: group.mempeak        42020KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.042s
ramon: loadavg              1.00
