ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 16:05:30 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40483 MiB
ramon: sys.mem.avail        61705 MiB
ramon: sys.nprocs           1250
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/wQxyDXhndAiO.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3112616
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   5416    895  1323/1194/100      97/8     7   19   19.24)
(smt.stats    1    202   6665   1595  2441/2146/100     202/15     7   19   19.43)
(smt.stats    2    313   8290   2665  2502/2242/100     313/16     7   19   19.43)
(smt.stats    3    417   9651   3932  2628/2391/109     414/21     8   20   19.53)
(smt.stats    4    528  10559   5125  2769/2513/109     524/22     8   20   19.63)
(smt.stats    5    650  12270   7307  2855/2588/113     653/37    10   27   19.73)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts   :propagations          :lemmas        :deletions    )
(smt.stats    6    751  13959   9135  2874/2625/113     787/35    11   30   19.99)
(smt.stats    7    862  18554  14667  2900/2645/114     913/75    12   31   19.99)
(smt.stats    8    984  20757  16588  2911/2656/116    1029/86    13   32   20.09)
(smt.stats    9   1118  23226  18359  2990/2675/118    1147/94    14   38   20.09)
(smt.stats   10   1219  24800  20155  3009/2751/124    1252/100    15   38   20.20)
(smt.stats   11   1330  26178  23114  3010/2757/124    1346/109    16   57   20.36)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1452  27314  25430  3012/2759/124    1469/109    16   57   20.36)
(smt.stats   13   1586  32068  28901  3016/2763/126    1592/105    17   63   20.36)
(smt.stats   14   1733  37015  33642  3018/2765/126    1736/105    18   64   20.36)
(smt.stats   15   1834  39822  37094  3035/2778/126    1838/105    18   64   20.46)
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 65&64
(smt.stats   16   1945  43398  40558  3052/2782/126    1955/105    18   64   20.46)
ramon: poll                 wall=1.000s usage=0.941s mem=21592KiB load=0.94 rootload=0.93
(smt.stats   17   2067  44164  43442  3095/2803/138    2116/120    19   66   20.46)
(smt.stats   18   2201  46236  47942  3172/2854/138    2247/170    20   69   20.46)
(smt.stats   19   2348  50086  50291  3183/2924/138    2392/171    20   69   20.58)
(smt.stats   20   2509  54013  54775  3196/2937/139    2548/180    21   74   20.58)
(smt.stats   21   2610  56438  57716  3196/2937/139    2649/180    21   74   20.58)
(smt.stats   22   2721  58552  60587  3196/2937/139    2760/180    21   74   20.58)
(smt.stats   23   2843  61295  65052  3196/2937/139    2882/180    21   74   20.58)
(smt.stats   24   2977  64026  69940  3198/2939/139    3017/180    21   74   20.58)
(smt.stats   25   3124  67285  74202  3198/2939/139    3165/180    21   74   20.68)
(smt.stats   26   3285  72434  80186  3199/2940/139    3325/180    21   74   20.68)
(smt.stats   27   3462  75562  85402  3201/2942/139    3503/180    21   74   20.90)
(smt.stats   28   3563  77039  88740  3201/2942/139    3604/180    21   74   20.90)
(smt.stats   29   3674  82086  95734  3205/2946/139    3715/180    21   74   20.90)
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 319&32768
shl: (shl[64] (bv2int %0) (mod (+ #100 #405) 64)) 576460752303423807 := 370 << 16
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 0&32768
shl: (shl[64] (bv2int %0) (mod (+ #100 #405) 64)) 576460752303423488 := 370 << 16
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 0&32768
shl: (shl[64] (bv2int %0) (mod (+ #100 #405) 64)) 576460752303423488 := 370 << 16
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 32768 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 576 := 370 << 16
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 32767 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 32766 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 32768 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 32768 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 32767 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 32766 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 32764 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 575 := 370 << 16
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 575 := 370 << 16
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 32768 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 32767 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 32767 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 32766 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 4 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 8 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 16 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 32 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 64 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 128 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 512 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 1 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 32 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 32 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 32 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 16 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 8 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 2 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 256 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 256 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 128 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 128 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 24248320&32768
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 64 := 24248320&32768
(smt.stats   30   3796  83210  98698  3361/3068/245    3877/191    22   76   21.32)
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 1 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 2 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 4 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 8 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 16 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 4 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 8 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 16 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 32 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 64 := 24248320&32768
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 912 := 24248320&32768
(smt.stats   31   3930  83643 100395  3621/3101/255    4158/194    22   76   21.61)
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 2&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #405) 64)) 2 := 355 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 1&1
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 1&1
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #405) 64)) 1 := 355 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 1 := 1&1
shl: (shl[64] (bv2int %0) (mod (+ #100 #405) 64)) 1 := 355 << 1
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4077  85348 106297  3633/3342/304    4339/313    23  118   22.01)
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 710&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 384 := 355 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 710&1
shl: (shl[59] (bv2int %0) (mod (bv2int %0) 59)) 384 := 355 << 1
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 710&1
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 1 := 710&1
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 0 := 710&1
band: (band[59] (shl[59] (bv2int %0) (mod #100 59)) (if (= #627 58) 1 (if #629 2 #743))) 1 := 710&1
band: (band[59] (shl[64] (bv2int %0) (mod #406 64)) (if (= #762 63) 0 (if #764 1 #888))) 1 := 710&1
(smt.stats   33   4238  88483 115128  3760/3457/340    4604/316    23  118   22.29)
ramon: poll                 wall=2.000s usage=1.939s mem=23544KiB load=1.00 rootload=0.99
(smt.stats   34   4415  92326 124729  3874/3579/341    4811/390    24  151   22.29)
(smt.stats   35   4609  95624 133222  3943/3605/341    5151/392    24  151   22.48)
(smt.stats   36   4710  97231 138400  3975/3680/342    5262/498    25  153   22.48)
(smt.stats   37   4821  99746 145475  4083/3749/344    5409/502    25  153   22.48)
(smt.stats   38   4943 102739 154546  4219/3892/347    5604/549    26  162   22.67)
ramon: poll                 wall=3.000s usage=2.933s mem=24204KiB load=0.99 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 30)
(smt.stats   39   5077 105506 160920  4249/3947/349    5793/549    26  162   22.77)
(smt.stats   40   5224 108538 164116  4350/3976/349    5963/558    26  162   22.86)
ramon: poll                 wall=4.000s usage=3.931s mem=24228KiB load=1.00 rootload=0.99
(smt.stats   41   5385 112225 171330  4607/4153/349    6207/569    26  162   22.96)
(smt.stats   42   5562 115070 178107  4723/4373/349    6488/661    27  167   23.05)
ramon: poll                 wall=5.000s usage=4.929s mem=24444KiB load=1.00 rootload=1.00
(smt.stats   43   5756 118300 186474  4981/4463/350    6817/665    27  167   23.15)
ramon: poll                 wall=6.005s usage=5.932s mem=24728KiB load=1.00 rootload=1.00
(smt.stats   44   5969 121724 197589  5186/4897/352    7137/769    28  176   23.34)
(smt.stats   45   6070 123724 202486  5270/4911/352    7282/772    28  176   23.43)
(smt.stats   46   6181 126464 212234  5378/5023/352    7535/775    28  176   23.43)
ramon: poll                 wall=7.000s usage=6.927s mem=25052KiB load=1.00 rootload=1.00
(smt.stats   47   6303 129878 222870  5517/5119/352    7711/778    28  176   23.52)
(smt.stats   48   6437 133527 233240  5668/5375/353    7996/887    29  176   23.62)
(smt.stats   49   6584 136727 240014  5715/5386/353    8295/889    29  176   23.72)
ramon: poll                 wall=8.000s usage=7.927s mem=25180KiB load=1.00 rootload=1.00
(smt.stats   50   6745 140957 247868  5986/5460/354    8633/891    29  176   23.81)
(smt.stats   51   6922 142660 252569  6033/5722/354    9032/891    29  176   23.81)
ramon: poll                 wall=9.000s usage=8.927s mem=25288KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   52   7116 146241 260328  6122/5737/355    9561/991    30  191   23.92)
(smt.stats   53   7329 149607 277031  6323/5931/355   10076/996    30  191   24.02)
(smt.stats   54   7563 154001 294356  6432/6086/358   10640/1106    31  194   24.11)
ramon: poll                 wall=10.000s usage=9.927s mem=25528KiB load=1.00 rootload=1.00
(smt.stats   55   7664 156094 297413  6551/6142/359   10812/1109    31  194   24.21)
(smt.stats   56   7775 157757 303283  6781/6325/359   10936/1111    31  194   24.21)
(smt.stats   57   7897 160392 314493  6848/6544/361   11084/1285    32  219   24.21)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8031 163178 325882  6862/6563/362   11434/1285    32  219   24.21)
(smt.stats   59   8178 167586 347687  6884/6574/362   11671/1286    32  219   24.32)
(smt.stats   60   8339 171638 369921  6893/6592/362   11860/1428    33  249   24.41)
ramon: poll                 wall=11.000s usage=10.923s mem=26040KiB load=1.00 rootload=1.00
(smt.stats   61   8516 174603 382834  6936/6614/363   12300/1428    33  249   24.51)
(smt.stats   62   8710 179336 401066  7011/6634/363   12697/1534    34  251   24.51)
ramon: poll                 wall=12.000s usage=11.923s mem=26040KiB load=1.00 rootload=1.00
(smt.stats   63   8923 184534 413007  7234/6733/363   13144/1541    34  251   24.70)
ramon: poll                 wall=13.000s usage=12.923s mem=26424KiB load=1.00 rootload=1.00
(smt.stats   64   9157 188570 421212  7595/6939/363   13535/1568    34  251   24.89)
(smt.stats   65   9414 192842 438029  7863/7306/363   14064/1570    34  251   25.08)
(smt.stats   66   9515 194531 444976  7908/7588/363   14361/1570    34  251   25.08)
(smt.stats   67   9626 196885 451738  7929/7603/363   14544/1571    34  251   25.08)
(smt.stats   68   9748 197888 457382  7940/7625/363   14788/1572    34  251   25.08)
ramon: poll                 wall=14.000s usage=13.921s mem=26696KiB load=1.00 rootload=0.99
(smt.stats   69   9882 201404 468985  8104/7666/364   15060/1875    35  251   25.08)
(smt.delete-inactive-clauses  :num-deleted-clauses 562)
(smt.stats   70  10029 204546 480410  8266/7838/364   14968/1879    35  251   25.17)
(smt.stats   71  10190 209112 499996  8399/7979/364   15390/1881    35  251   25.17)
ramon: poll                 wall=15.000s usage=14.913s mem=26704KiB load=0.99 rootload=1.00
(smt.stats   72  10367 214770 516965  8560/8155/364   15691/1882    35  251   25.27)
(smt.stats   73  10561 218027 528768  8634/8268/364   16147/1889    35  251   25.37)
(smt.stats   74  10774 222231 554177  8773/8434/365   16927/2048    36  251   25.46)
ramon: poll                 wall=16.000s usage=15.909s mem=26972KiB load=1.00 rootload=0.99
(smt.stats   75  11008 227445 572654  8892/8497/367   17305/2055    36  251   25.56)
(smt.stats   76  11265 234340 603255  9044/8628/367   18234/2116    37  261   25.65)
ramon: poll                 wall=17.000s usage=16.907s mem=27548KiB load=1.00 rootload=1.00
(smt.stats   77  11547 238284 620597  9089/8759/367   18727/2118    37  261   25.75)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations          :lemmas           :deletions     )
(smt.stats   78  11648 240234 626815  9164/8788/367   18923/2120    37  261   25.94)
(smt.stats   79  11759 242839 638452  9361/8948/367   19291/2121    37  261   26.04)
ramon: poll                 wall=18.000s usage=17.907s mem=27804KiB load=1.00 rootload=1.00
(smt.stats   80  11881 246290 654858  9457/9096/368   19539/2491    38  269   26.14)
(smt.stats   81  12015 250270 667662  9574/9209/368   20073/2493    38  269   26.14)
(smt.stats   82  12162 256466 684037  9705/9280/369   20501/2498    38  269   26.23)
ramon: poll                 wall=19.000s usage=18.907s mem=28060KiB load=1.00 rootload=1.00
(smt.stats   83  12323 260188 703842  9872/9464/369   20896/2597    39  271   26.33)
(smt.stats   84  12500 264096 724033 10059/9625/369   21460/2606    39  271   26.42)
(smt.stats   85  12694 269198 748052 10130/9776/369   21803/2606    39  271   26.94)
ramon: poll                 wall=20.000s usage=19.907s mem=28696KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 16:05:50 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.973s
ramon: group.utime          19.961s
ramon: group.stime          0.012s
ramon: group.mempeak        29084KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.064s
ramon: loadavg              1.00
