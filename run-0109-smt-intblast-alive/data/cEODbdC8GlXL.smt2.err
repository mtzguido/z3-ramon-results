ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:36:46 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41141 MiB
ramon: sys.mem.avail        61710 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/cEODbdC8GlXL.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             3022318
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   4883    881  1200/1079/89     100/2     2   13   19.06)
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 4503599627370496 := 9007199254740926 << 16
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 173 := 65536&173
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 173 := 65536&173
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 1 := 174 << 16
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 1 := 70 << 16
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 69 := 65536&69
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 69 := 65536&69
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 69 := 65536&69
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 68 := 65536&68
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 64 := 65536&64
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 1 := 70 << 16
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 1 := 70 << 16
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 69 := 65536&69
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&69
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 69 := 70 << 16
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 1 := 70 << 16
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 1 := 70 << 16
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 65536 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 65535 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&4222257785602048
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #116))) 1 := 4362928712023995 << 17
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&4222257785602048
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #116))) 1 := 4362928712023995 << 17
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&4222257785602048
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #116))) 4222257785602049 := 4362928712023995 << 17
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 65536 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 65534 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 4 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 16 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 32 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 64 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 128 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 256 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 512 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 2048 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 4096 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8192 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 16384 := 65536&4222257785602048
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 32768 := 65536&4222257785602048
(smt.stats    1    202   6492   1840  2029/1668/96     197/9     3   14   19.74)
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 4 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 256 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 256 := 65536&4222257792417792
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 256 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 256 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 256 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 256 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 128 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 128 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 128 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 128 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 64 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 64 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 64 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 32 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 32 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #116))) 4362896498753554 := 4362896498753555 << 17
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 1 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 2 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 65536 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 65532 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 8 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 16 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 32 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 64 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 128 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 256 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 512 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 1024 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 2048 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 4096 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 8192 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 16384 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 32768 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 16384 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 32768 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 16384 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 16384 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 8192 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 128 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 256 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 512 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 1024 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 520 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 528 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 544 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 528 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 544 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 544 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 544 := 65536&2490368
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 65536&2490368
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 520 := 65536&2490368
(smt.stats    2    313   8480   5412  2167/1946/293     340/37     7   60   20.03)
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9007199254740992 := 8725859570532380 << 17
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9007199254740992 := 8725859570532380 << 17
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4222259945799680
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #116))) 4362929785266190 := 4362929785266190 << 18
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4503599627370495
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4503599627370495
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4503599627370495
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4503599627370495
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&131071
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9007199254872063 := 8725859570532380 << 17
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4222259945799680
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #116))) 4362929785266190 := 4362929785266190 << 18
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4222259959431168
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #116))) 4362929785266242 := 4362929785266242 << 18
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4503599626846208
shl: (shl[52] (bv2int %0) (+ 52 (* 4503599627370495 #116))) 4362930858491902 := 4362930858491902 << 18
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4362930331582464
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 520 := 131072&4362930331582464
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4503599626846208
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 528 := 131072&4503599626846208
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4362930331582464
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 528 := 131072&4362930331582464
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 131072&4362930331582464
band: (band[52] (if (= #120 51) 1 (if #565 2 #665)) (shl[52] (bv2int %0) (+ 52 #668))) 131072 := 131072&4362930331582464
(smt.stats    3    439  10868   8178  2294/2084/349     451/67    11   78   20.45)
(smt.stats    4    550  12549  10044  2602/2356/357     600/84    13   86   20.54)
(smt.stats    5    672  18795  16490  2616/2371/359     724/145    15   89   20.68)
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 131072 := 2251799813685248&262144
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 131072 := 2251799813685248&262144
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 262144 := 2251799813685248&262145
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 524288 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1048576 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 2097152 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 4194304 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8388608 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 16777216 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 33554432 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 67108864 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 134217728 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 268435456 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 536870912 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1073741824 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 2147483648 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 4294967296 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8589934592 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 17179869184 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 34359738368 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 68719476736 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 137438953472 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 274877906944 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 549755813888 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1099511627776 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 2199023255552 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 4398046511104 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8796093022208 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 17592186044416 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 35184372088832 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 70368744177664 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 140737488355328 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 562949953421312 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1125899906842624 := 2251799813685248&4503599627239423
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 2251799813685248 := 2251799813685248&4503599627239423
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 22517998136721407 := 0 << 51
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    773  21241  20271  2724/2452/447     843/160    16   91   21.38)
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 137438953472 := 2251799813685248&137438953473
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 34359738368 := 2251799813685248&34359738369
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1073741824 := 2251799813685248&1073741825
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 2147483648 := 2251799813685248&2147483649
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 4294967296 := 2251799813685248&4503599627108352
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8589934592 := 2251799813685248&4503599627108352
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 17179869184 := 2251799813685248&17179869185
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 4294967296 := 2251799813685248&4294967297
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 8589934592 := 2251799813685248&8589934593
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 4294967296 := 2251799813685248&4294967297
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 2147483648 := 2251799813685248&2147614719
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1549041152 := 2251799813685248&1549041153
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1549040640 := 2251799813685248&1549040641
(smt.stats    7    884  22050  22259  2841/2530/491    1014/213    18  124   21.67)
(smt.stats    8   1006  22591  23736  3181/2727/501    1349/213    18  124   21.76)
(smt.stats    9   1140  25235  33473  3496/3234/503    1720/352    19  127   21.96)
(smt.stats   10   1241  29676  39406  3530/3250/505    1859/372    20  131   21.96)
(smt.stats   11   1352  35545  49478  3616/3327/507    2208/559    22  136   22.16)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1474  41147  57270  3625/3337/514    2335/566    24  152   22.25)
(smt.stats   13   1608  49604  70048  3642/3341/516    2543/566    24  152   22.35)
(smt.stats   14   1755  57312  89431  3657/3369/520    2916/777    27  164   22.44)
ramon: poll                 wall=1.000s usage=0.927s mem=23856KiB load=0.93 rootload=0.90
(smt.stats   15   1856  62058  97738  3728/3373/520    3184/782    27  164   22.54)
(smt.stats   16   1967  66299 110029  3861/3573/528    4312/871    28  166   22.63)
(smt.stats   17   2089  70836 120171  3879/3593/534    4522/1546    30  195   22.77)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   18   2223  77016 143506  3893/3604/536    4701/1631    31  210   22.89)
(smt.stats   19   2370  83261 160858  3927/3635/538    4900/1679    32  213   22.99)
(smt.stats   20   2531  88071 179063  3947/3649/538    5279/1680    32  213   23.33)
(smt.stats   21   2632  93245 188289  3949/3655/541    5416/1856    33  218   23.33)
(smt.stats   22   2743  97952 205814  3959/3665/543    5509/1859    34  241   23.33)
(smt.stats   23   2865 102603 220298  3970/3667/543    5733/1860    34  241   23.33)
(smt.stats   24   2999 106516 232941  3981/3687/549    5873/1884    35  248   23.44)
(smt.stats   25   3146 112355 252596  4004/3695/549    6238/1909    36  285   23.64)
(smt.stats   26   3307 121137 271973  4014/3715/549    6428/1910    36  285   23.76)
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 281474976710656&281474976841728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9237164310713729024 := 8866633565085718 << 48
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 281474976710656&281474976841728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9237164310713729024 := 8866633565085718 << 48
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 281474976710656&281474976841728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9237164310713729024 := 8866633565085718 << 48
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 281474976710656&281474976841728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9237164310713729024 := 8866633565089254 << 48
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 281474976710656&281474976841728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9237164310713729024 := 8866633565085718 << 48
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 281474976710656&281474976841728
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9237164310713729024 := 8866633565089254 << 48
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 281474976710656&281474976841727
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 18442521949059022847 := 8866633565089254 << 48
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 281474976710656&281474976710656
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 18442521949058891776 := 8866633565089254 << 48
ramon: poll                 wall=2.000s usage=1.926s mem=25444KiB load=1.00 rootload=1.00
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 281474976710656 := 281474976710656&1688849860263936
(smt.stats   27   3484 124980 276922  4216/3722/550    6620/2098    37  288   23.85)
(smt.stats   28   3585 129061 286645  4312/3992/561    7031/2098    37  288   23.95)
(smt.stats   29   3696 133451 300094  4320/4014/561    7155/2396    38  293   24.04)
ramon: poll                 wall=3.000s usage=2.926s mem=25488KiB load=1.00 rootload=1.00
(smt.stats   30   3818 137552 309008  4365/4021/562    7289/2401    38  293   24.14)
(smt.stats   31   3952 140160 313933  4593/4279/563    7517/2418    39  296   24.24)
ramon: poll                 wall=4.000s usage=3.925s mem=25620KiB load=1.00 rootload=1.00
ramon: poll                 wall=5.000s usage=4.925s mem=25676KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.925s mem=25772KiB load=1.00 rootload=1.00
(smt.stats   32   4099 144905 326474  4685/4286/563    7767/2423    39  296   24.33)
ramon: poll                 wall=7.000s usage=6.925s mem=25776KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.924s mem=25820KiB load=1.00 rootload=1.00
(smt.stats   33   4260 152198 342667  4850/4377/563    8446/2541    40  297   24.43)
(smt.stats   34   4437 158826 356477  4997/4564/563    8950/2543    40  297   24.43)
(smt.stats   35   4631 164885 370372  5008/4694/563    9305/2543    40  297   24.55)
(smt.stats   36   4732 167742 378071  5040/4698/563    9534/2544    40  297   24.55)
ramon: poll                 wall=9.000s usage=8.924s mem=26048KiB load=1.00 rootload=1.00
(smt.stats   37   4843 172023 388564  5301/4797/563    9763/2544    40  297   24.65)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   38   4965 176388 398034  5401/5006/563   10035/2544    40  297   24.78)
(smt.delete-inactive-clauses  :num-deleted-clauses 506)
(smt.stats   39   5099 178644 406257  5428/5115/568    9932/3127    41  311   24.78)
(smt.stats   40   5246 189185 420747  5520/5118/568   10166/3131    41  311   24.90)
ramon: poll                 wall=10.000s usage=9.924s mem=26392KiB load=1.00 rootload=1.00
(smt.stats   41   5407 198494 442978  5671/5339/569   10732/3272    42  311   25.00)
(smt.stats   42   5584 206652 459803  5689/5376/570   11195/3475    43  314   25.00)
(smt.stats   43   5778 218196 490430  5704/5391/571   11782/3476    44  332   25.00)
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634792960
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634792961
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634793984
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 4433314634793984 := 4926155687891026 << 10
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634924031
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 4433314634924031 := 4926155687825506 << 10
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634530817
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634530818
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634924031
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 4433314634924031 := 4926293126778898 << 10
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634924031
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 4433314634924031 := 4926293126778898 << 10
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634531840
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 4433314634531840 := 4926293126778898 << 10
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 1024 := 1024&4433314634924031
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 4433314634924031 := 4926293126778898 << 10
(smt.stats   44   5991 223550 506258  5886/5409/573   12047/3491    44  332   25.21)
ramon: poll                 wall=11.000s usage=10.923s mem=26744KiB load=1.00 rootload=0.99
(smt.stats   45   6092 228733 518074  5903/5588/585   12265/3612    45  348   25.21)
(smt.stats   46   6203 236790 554489  5931/5603/585   12377/3613    45  348   25.21)
(smt.stats   47   6325 243626 593184  6021/5627/585   12491/3620    46  354   25.44)
ramon: poll                 wall=12.000s usage=11.923s mem=26976KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.923s mem=26976KiB load=1.00 rootload=1.00
(smt.stats   48   6459 245800 600172  6247/5932/587   12664/3622    47  354   25.44)
(smt.stats   49   6606 254397 613263  6261/5945/588   12880/3623    47  354   25.53)
ramon: poll                 wall=14.000s usage=13.923s mem=27016KiB load=1.00 rootload=1.00
(smt.stats   50   6767 262531 631601  6379/5956/588   13097/3657    48  359   25.63)
(smt.stats   51   6944 269393 664285  6520/6145/588   13512/3657    48  359   25.63)
(smt.stats   52   7138 276070 687526  6552/6237/589   13942/3823    49  362   25.72)
(smt.stats   53   7351 285332 718619  6575/6256/589   14798/3823    49  362   25.72)
(smt.stats   54   7585 297721 745321  6590/6269/589   15112/3823    49  362   25.72)
(smt.stats   55   7686 302743 760528  6605/6290/590   15330/4297    50  365   25.84)
ramon: poll                 wall=15.000s usage=14.922s mem=27256KiB load=1.00 rootload=1.00
(smt.stats   56   7797 306954 774072  6657/6333/591   15534/4301    50  365   25.84)
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 3073 := 4096&3483328270696448
(smt.stats   57   7919 309843 783915  6728/6352/591   15995/4303    50  365   25.84)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   58   8053 316731 796965  6740/6425/596   16207/4449    51  366   25.95)
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 16&1549008896
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9007200803749888 := 53151268862 << 4
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 16&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9007199255003136 := 53151334382 << 4
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 16&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9007199255003136 := 53151334382 << 4
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 16&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9007199255003136 := 53151350606 << 4
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 16&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9007199255003136 := 53151350606 << 4
band: (band[52] (if (or #680 #681 #682 #683 #684 #685 #686 #687 #688 #689 #690 #691) 0 (if #692 1 #794)) (shl[64] (* 2 #114) (mod #844 64))) 0 := 16&262144
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 51 #841 #843) 64)) 9007199255003136 := 53151350606 << 4
(smt.stats   59   8201 324446 826626  6796/6480/603   16647/4612    52  388   26.05)
(smt.stats   60   8362 330822 841394  6828/6504/603   16845/4613    52  388   26.05)
(smt.stats   61   8539 338723 858509  6837/6518/604   17114/4613    52  388   26.05)
ramon: poll                 wall=16.000s usage=15.922s mem=27604KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.922s mem=27892KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.921s mem=27904KiB load=1.00 rootload=1.00
(smt.stats   62   8733 346949 899583  7187/6520/604   17574/4658    53  389   26.14)
(smt.stats   63   8946 356385 944339  7334/6902/604   18190/4661    53  389   26.33)
ramon: poll                 wall=19.000s usage=18.921s mem=28284KiB load=1.00 rootload=1.00
(smt.stats   64   9180 363931 963383  7395/7023/605   18734/4761    54  391   26.23)
(smt.stats   65   9437 373558 998235  7612/7293/608   19502/4830    55  400   26.42)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   66   9538 377421 1010888  7621/7302/608   19752/4830    55  400   26.42)
(smt.stats   67   9649 382492 1038152  7651/7314/608   20045/4831    55  400   26.42)
ramon: poll                 wall=20.000s usage=19.921s mem=28308KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:37:06 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.020s
ramon: group.total          19.973s
ramon: group.utime          19.945s
ramon: group.stime          0.028s
ramon: group.mempeak        28564KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.053s
ramon: loadavg              1.00
