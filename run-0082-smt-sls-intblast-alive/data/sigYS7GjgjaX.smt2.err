ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 23:12:17 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         27295 MiB
ramon: sys.mem.avail        62083 MiB
ramon: sys.nprocs           1374
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/sigYS7GjgjaX.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             944738
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   68.4932     10000        49          0            1        2)
(smt.stats    0    101   4209   2355  1184/1069/100      90/20     7   17   52.08)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
(sat.ddfw       1      1   32.3657     20001        98          1            1        3)
(smt.stats    1    202   6386   4021  2055/1858/110     177/35    10   25   52.37)
(sat.ddfw       1      1   34.1297     40001       196          2            1        5)
(smt.stats    2    313   8119   5157  2200/1978/111     294/45    11   26   52.46)
(smt.stats    3    414   8762   6695  2594/2362/113     403/72    12   28   52.56)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&134217728
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 281474983329792 >>l 37
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 134217728 := 134217732&134217728
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 134217732 := 281474983329792 >>l 37
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 134217728 := 134217732&134217728
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 134217732 := 281474983329792 >>l 37
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2048 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2048&134217728
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 4294967429 := 4294967397 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2048&134217728
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 4294967008 := 4294967397 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2048&134217728
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 4294967008 := 4294967397 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2 := 2048&134217728
(smt.stats    4    525   9831   8373  2643/2399/135     515/77    14   38   52.76)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17732923532771329 := 0 >>l 16
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17732923532771329 := 0 >>l 16
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17732923532771329 := 0 >>l 16
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 0 >>l 16
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 0 >>l 16
(smt.stats    5    647  11848  10381  2721/2454/137     631/85    15   46   52.76)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 786432&68719476736
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 786432 := 786432 >>l 28
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 786431&68719476736
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 786431 := 786432 >>l 28
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 13&68719476736
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 13 := 786432 >>l 28
ramon: poll                 wall=1.000s usage=0.813s mem=55128KiB load=0.81 rootload=0.80
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  13386  12570  2751/2497/144     736/89    17   48   52.86)
(sat.ddfw       1      1   32.0171     70001       343          3            1        8)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 0 := 131072 >>l 18
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 70368744177665 := 2 >>l 2
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 0 := 131072 >>l 18
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 87 := 2 >>l 2
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 0 := 131072 >>l 18
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 87 := 2 >>l 2
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 131072 >>l 18
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1 := 1&274877906944
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&274877906944
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 655360 >>l 26
(smt.stats    7    860  15393  15493  2797/2546/170     857/93    19   54   52.95)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&549755813888
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 589824 >>l 25
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 12 := 12&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 16 := 16&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 40 := 40&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 32 := 32&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 32 := 32&549755813888
(smt.stats    8    982  17347  17936  2871/2617/191     989/96    20   59   53.07)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 80 := 80&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 96 := 96&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 76 := 76&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 72 := 72&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 64 := 64&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 72 := 72&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 192 := 192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 256 := 256&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1024 := 1024&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2048 := 2048&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8192 := 8192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 16384 := 16384&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 32768 := 32768&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 65536 := 65536&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 131072 := 131072&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 262144 := 262144&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 524288 := 524288&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 262144 := 262144&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 524288 := 524288&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&549755813888
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 0 := 589824 >>l 25
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&549755813888
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 1 := 9 >>l 9
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 64 := 64&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 64 := 64&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 128 := 128&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 128 := 128&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 128 := 128&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 128 := 128&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 256 := 256&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 256 := 256&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2048 := 2048&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8192 := 8192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8192 := 8192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8192 := 8192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 32768 := 32768&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 131072 := 131072&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1024 := 1024&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&549755813888
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 589824 >>l 25
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&549755813888
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 589824 >>l 25
(smt.stats    9   1116  19129  21928  3034/2767/339    1241/143    21   93   53.77)
(smt.stats   10   1217  21327  26173  3089/2828/345    1370/157    22   95   53.87)
(sat.ddfw       1      1   28.4495    110001       539          4            1       12)
(smt.stats   11   1328  24000  29353  3165/2898/346    1550/196    23   95   54.16)
ramon: poll                 wall=2.000s usage=1.814s mem=56548KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   25.1884    160000       784          5            1       17)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  26587  34548  3173/2913/352    1716/280    25  112   54.26)
(smt.stats   13   1584  32045  40634  3189/2916/358    1855/280    25  112   54.35)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048577 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2097156 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2097156 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048648 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048640 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048640 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048576 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4194304 := 4194306&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8388608 := 8388610&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4194304 := 6291456&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 3145728 := 6291456&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 3145728 := 7340032&35184372088832
(smt.stats   14   1731  35231  47139  3375/3105/391    2289/342    27  128   54.45)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 4194304&35184372088832
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17169973583544320 := 281474982150144 >>l 19
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2097152&35184372088832
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17169973581447168 := 281474982150144 >>l 19
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2097152&35184372088832
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17169973581447168 := 281474982150144 >>l 19
(smt.stats   15   1832  39287  54556  3395/3116/401    2459/343    27  128   54.67)
(sat.ddfw       1      1   22.3634    220001      1078          6            1       23)
ramon: poll                 wall=3.000s usage=2.815s mem=56960KiB load=1.00 rootload=0.99
(smt.stats   16   1943  41265  58483  3560/3226/408    2659/541    28  135   55.02)
(smt.stats   17   2065  44391  64738  3731/3442/409    2999/594    29  148   55.02)
(sat.ddfw       1      1   19.9886    290001      1421          7            1       30)
(smt.stats   18   2199  47950  71764  3923/3492/409    3305/727    30  154   55.31)
ramon: poll                 wall=4.000s usage=3.985s mem=57960KiB load=1.17 rootload=1.17
(smt.stats   19   2346  54404  87269  4096/3790/414    3611/829    31  160   55.40)
(sat.ddfw       1      1   19.0476    370001      1813          8            1       38)
(smt.stats   20   2507  59570  97597  4451/4148/417    3981/893    33  182   55.68)
ramon: poll                 wall=5.000s usage=5.047s mem=57960KiB load=1.06 rootload=1.06
(sat.ddfw       1      1   17.1592    460001      2254          9            1       47)
(smt.stats   21   2608  64017 107155  4544/4171/418    4571/900    33  182   56.01)
ramon: poll                 wall=6.000s usage=6.049s mem=58304KiB load=1.00 rootload=1.01
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   22   2719  67511 115036  4701/4337/419    4935/1100    34  185   56.20)
(sat.ddfw       1      1   15.6226    560001      2745         10            1       57)
ramon: poll                 wall=7.000s usage=7.046s mem=58472KiB load=1.00 rootload=0.99
(smt.stats   23   2841  71663 124386  4899/4603/420    5284/1170    35  185   56.29)
(smt.stats   24   2975  75511 133677  4939/4634/422    5546/1316    36  198   56.39)
(sat.ddfw       1      1   14.3173    670001      3284         11            1       68)
(smt.stats   25   3122  85743 152143  5019/4720/424    6018/1390    38  208   56.39)
ramon: poll                 wall=8.000s usage=8.047s mem=58704KiB load=1.00 rootload=1.00
(smt.stats   26   3283  95653 168083  5117/4724/424    6368/1395    38  208   56.80)
(smt.stats   27   3460 104073 197425  5193/4897/427    6961/1584    39  222   56.80)
ramon: poll                 wall=9.000s usage=9.050s mem=58916KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   13.2173    790001      3872         12            1       80)
(smt.stats   28   3561 107090 206598  5279/4911/429    7220/1586    39  222   56.90)
(smt.stats   29   3672 109265 217454  5293/4997/429    7397/1638    40  246   56.90)
ramon: poll                 wall=10.000s usage=9.991s mem=59444KiB load=0.94 rootload=0.93
(smt.stats   30   3794 110603 222003  5411/5000/429    7602/1641    40  246   57.11)
(sat.ddfw       1      1   12.1666    920001      4509         13            1       93)
ramon: poll                 wall=11.000s usage=10.931s mem=59376KiB load=0.94 rootload=0.94
(smt.stats   31   3928 111090 223319  5794/5285/429    7764/1641    40  246   57.20)
(smt.stats   32   4075 116323 238167  6052/5731/434    8577/1719    41  255   57.30)
ramon: poll                 wall=12.000s usage=11.863s mem=59816KiB load=0.93 rootload=0.94
(smt.stats   33   4236 123670 262184  6113/5782/437    9077/1801    42  291   57.40)
(sat.ddfw       1      1   11.3031   1060001      5196         14            1      108)
ramon: poll                 wall=13.000s usage=12.777s mem=60128KiB load=0.91 rootload=0.91
(smt.stats   34   4413 135131 301802  6312/5829/437    9384/1903    43  318   57.49)
(smt.stats   35   4607 140559 320896  6361/6044/440   10131/1964    44  325   57.76)
(smt.stats   36   4708 144586 336961  6405/6072/441   10628/1964    44  325   57.86)
ramon: poll                 wall=14.000s usage=13.710s mem=60440KiB load=0.93 rootload=0.93
(sat.ddfw       1      1   10.5716   1210001      5931         15            1      123)
(smt.stats   37   4819 152519 362567  6514/6115/442   11255/2217    45  343   57.86)
(smt.stats   38   4941 158129 379485  6609/6244/442   11762/2217    45  343   57.98)
ramon: poll                 wall=15.000s usage=14.674s mem=60464KiB load=0.96 rootload=0.97
(smt.delete-inactive-clauses  :num-deleted-clauses 687)
(smt.stats   39   5075 164161 397340  6633/6320/442   11763/2220    45  343   58.07)
(smt.stats   40   5222 172471 414826  6766/6374/443   12034/2847    46  360   58.07)
ramon: poll                 wall=16.000s usage=15.658s mem=60592KiB load=0.98 rootload=0.98
(sat.ddfw       1      1   9.92987   1370001      6715         16            1      139)
(smt.stats   41   5383 174174 420214  7076/6493/443   12312/2851    46  360   58.26)
ramon: poll                 wall=17.000s usage=16.655s mem=60592KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5560 178723 425609  7421/6889/443   12598/2851    46  360   58.36)
ramon: poll                 wall=18.000s usage=17.631s mem=61104KiB load=0.98 rootload=0.97
(smt.stats   43   5754 184831 464675  7462/7166/443   13137/2851    46  360   58.59)
(sat.ddfw       1      1   9.38449   1540001      7549         17            1      156)
(smt.stats   44   5967 186780 480862  7464/7168/444   13631/2956    47  367   58.59)
(smt.stats   45   6068 191861 489923  7494/7174/446   14215/3183    48  388   58.59)
(smt.stats   46   6179 196535 509557  7566/7226/446   14560/3185    48  388   58.59)
ramon: poll                 wall=19.000s usage=18.662s mem=61212KiB load=1.03 rootload=1.04
(smt.stats   47   6301 203395 523443  7683/7291/446   14907/3189    48  388   58.68)
(smt.stats   48   6435 208759 544655  7797/7410/446   15340/3190    48  388   59.16)
ramon: poll                 wall=20.000s usage=19.649s mem=61212KiB load=0.99 rootload=0.98
ramon: end                  Fri Nov  1 23:12:37 2024
ramon: root.execname        z3
ramon: root.utime           19.700s
ramon: root.stime           0.010s
ramon: group.total          19.723s
ramon: group.utime          19.711s
ramon: group.stime          0.012s
ramon: group.mempeak        61468KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.075s
ramon: loadavg              0.98
