ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:14:18 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28575 MiB
ramon: sys.mem.avail        62087 MiB
ramon: sys.nprocs           1384
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/KH7WNHfh8gqo.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             751932
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   89.2857     10000        49          0            1        2)
(smt.stats    0    101   2910    722  1458/978/98      93/55     6   15   51.98)
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #300) 64)) 0 := 6 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #300) 64)) 0 := 6 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #300) 64)) 0 := 6 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[64] (bv2int %0) (mod (+ #100 #300) 64)) 0 := 6 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 1 := 4294967296 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 1 := 4294967296 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 0&63
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 1 := 4294967296 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 2 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 4 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 61 := 274877904640&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 274877904640&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 60 := 274877904640&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 1 := 2048&63
(sat.ddfw       1      1   45.8761     20001        98          1            1        3)
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 62 := 4608&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 60 := 7040&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 56 := 7040&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 16 := 7040&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 32 := 7040&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 12 := 8726280704&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 8 := 8726280704&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 4 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 8 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 4 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 4 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 8726283136&63
shl: (shl[38] (bv2int %0) (mod (bv2int %0) 38)) 8726282765 := 8726282766 << 6
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 4 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 8 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 16 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 1664&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 32 := 1664&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 4 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 8 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 16 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 32 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 32 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 12 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2048&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 8 := 2048&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 8 := 4363139328&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 8 := 4363139328&63
(smt.stats    1    202   5140   1547  1949/1765/186     184/63    13   39   52.46)
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 0 := 2432&63
band: (band[38] (shl[38] (bv2int %0) (mod #100 38)) (if (= #565 37) 1 (if #567 3 #670))) 1 := 2432&63
(sat.ddfw       1      1   47.0588     40001       196          2            1        5)
(sat.ddfw       1      1   40.7056     70001       343          3            1        8)
(smt.stats    2    313   7036   2605  2232/2022/194     302/92    15   42   53.13)
ramon: poll                 wall=1.000s usage=0.918s mem=55540KiB load=0.92 rootload=0.91
(sat.ddfw       1      1   34.7524    110001       539          4            1       12)
(sat.ddfw       1      1   29.8858    160000       784          5            1       17)
(smt.stats    3    414   7509   2769  2429/2199/194     405/93    15   42   53.32)
(smt.stats    4    525  11438   6296  2690/2466/207     585/148    18   56   53.23)
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120433&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120433&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120450&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120433&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120434&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120434&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120436&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120433&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 120434&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 66 := 120434&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 83 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120481&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 129 := 120481&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120449&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120449&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120465&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120497&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120593&17179869183
ramon: poll                 wall=2.000s usage=1.919s mem=55836KiB load=1.00 rootload=0.99
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120657&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 81 := 120657&17179869183
(smt.stats    5    647  14421   9376  2818/2588/278     774/215    19   71   53.42)
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 65 := 17179869156&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869156&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869160&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869160&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869156&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 64 := 17179869156&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 66 := 17179869154&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 34 := 17179869154&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 66 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 66 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 194 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 194 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 1474 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 706 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179869122&17179869183
band: (band[38] (shl[64] (bv2int %0) (mod #301 64)) (if (= #689 63) 0 (if #691 1 #839))) 450 := 17179867586&17179869183
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16688  14234  3014/2788/335     998/267    21   84   53.91)
(smt.stats    7    859  18969  19822  3169/2820/335    1242/269    21   84   54.02)
(smt.stats    8    981  21468  25119  3519/3139/337    1695/320    22   89   54.12)
(sat.ddfw       1      1   26.1442    220001      1078          6            1       23)
(smt.stats    9   1115  28724  35512  3610/3359/342    2276/541    25  104   54.32)
(smt.stats   10   1216  32469  40547  3671/3418/344    2513/575    26  108   54.32)
(smt.stats   11   1327  37954  48401  3805/3557/346    2770/662    28  118   54.42)
ramon: poll                 wall=3.000s usage=2.918s mem=57016KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   23.1405    290001      1421          7            1       30)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  42413  57867  4013/3615/346    3187/676    28  118   54.65)
(sat.ddfw       1      1   20.7308    370001      1813          8            1       38)
ramon: poll                 wall=4.000s usage=3.918s mem=57124KiB load=1.00 rootload=1.00
(smt.stats   13   1583  45902  63617  4108/3813/349    3503/877    29  122   54.94)
(sat.ddfw       1      1   18.7774    460001      2254          9            1       47)
ramon: poll                 wall=5.000s usage=5.028s mem=57728KiB load=1.11 rootload=1.11
(smt.stats   14   1730  49746  65829  4395/3988/349    3751/878    29  122   55.03)
(sat.ddfw       1      1   17.1556    560001      2745         10            1       57)
ramon: poll                 wall=6.000s usage=6.042s mem=57744KiB load=1.01 rootload=1.01
ramon: poll                 wall=7.000s usage=7.040s mem=57504KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   15.7774    670001      3284         11            1       68)
(smt.stats   15   1831  53017  69778  4589/4279/350    3939/977    30  123   55.22)
ramon: poll                 wall=8.000s usage=8.041s mem=57552KiB load=1.00 rootload=1.00
(smt.stats   16   1942  56280  71453  4698/4414/351    4072/980    30  123   55.22)
(sat.ddfw       1      1   14.5932    790001      3872         12            1       80)
(smt.stats   17   2064  58802  75437  4851/4528/351    4548/983    30  123   55.31)
ramon: poll                 wall=9.000s usage=9.040s mem=57716KiB load=1.00 rootload=1.00
(smt.stats   18   2198  61242  82720  5212/4720/351    4786/1038    31  126   55.41)
(sat.ddfw       1      1    13.577    920001      4509         13            1       93)
ramon: poll                 wall=10.000s usage=10.037s mem=58040KiB load=1.00 rootload=1.00
(smt.stats   19   2345  67697  90743  5350/4968/351    5051/1038    31  126   55.66)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   20   2506  71833 100185  5415/5154/353    5509/1124    32  135   55.66)
(smt.stats   21   2607  74999 110895  5529/5214/354    5766/1127    32  135   55.76)
ramon: poll                 wall=11.002s usage=11.042s mem=57972KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   12.6927   1060001      5196         14            1      108)
(smt.stats   22   2718  79245 120671  5623/5306/357    5986/1172    33  138   55.85)
(smt.stats   23   2840  81059 122764  5701/5405/357    6134/1181    34  148   55.85)
ramon: poll                 wall=12.000s usage=12.035s mem=58104KiB load=1.00 rootload=1.00
(smt.stats   24   2974  83888 130911  5915/5666/359    6876/1183    34  148   55.95)
(sat.ddfw       1      1   11.9114   1210001      5931         15            1      123)
ramon: poll                 wall=13.000s usage=13.036s mem=58340KiB load=1.00 rootload=1.00
(smt.stats   25   3121  89946 154134  6169/5672/362    7262/1442    35  151   56.04)
ramon: poll                 wall=14.000s usage=14.033s mem=58448KiB load=1.00 rootload=0.99
(sat.ddfw       1      1   11.2202   1370001      6715         16            1      139)
(smt.stats   26   3282  95257 170309  6420/5978/362    8028/1484    36  157   56.44)
(smt.stats   27   3459  99786 184567  6615/6246/363    8704/1598    37  157   56.53)
ramon: poll                 wall=15.000s usage=15.033s mem=58928KiB load=1.00 rootload=1.00
(smt.stats   28   3560 104709 192627  6681/6370/363    8914/1599    37  157   56.63)
(smt.stats   29   3671 112757 202173  6784/6496/364    9184/1742    38  162   56.63)
ramon: poll                 wall=16.000s usage=16.036s mem=59384KiB load=1.00 rootload=1.01
(sat.ddfw       1      1   10.6045   1540001      7549         17            1      156)
(smt.stats   30   3793 122398 240965  6899/6563/365    9505/1744    38  162   56.63)
(smt.stats   31   3928 129994 253426  6997/6748/368    9818/1837    39  172   56.72)
(smt.stats   32   4075 136905 264049  7037/6758/368   10041/1904    40  195   56.72)
ramon: poll                 wall=17.000s usage=17.036s mem=59224KiB load=1.00 rootload=1.00
(smt.stats   33   4236 144573 303138  7173/6842/369   10765/1943    41  195   57.11)
(sat.ddfw       1      1   10.0514   1720001      8431         18            1      174)
ramon: poll                 wall=18.000s usage=18.051s mem=59412KiB load=1.01 rootload=1.01
(smt.stats   34   4413 150923 317335  7256/6985/371   11164/2244    42  208   57.21)
(smt.stats   35   4607 157030 353087  7275/7024/374   11763/2244    42  208   57.40)
(smt.stats   36   4708 161196 371308  7437/7149/374   12096/2511    43  225   57.61)
ramon: poll                 wall=19.000s usage=19.142s mem=60016KiB load=1.09 rootload=1.09
(smt.stats   37   4819 167289 389273  7482/7150/374   12655/2515    43  225   57.75)
(smt.stats   38   4941 172366 405856  7592/7300/375   13148/2719    44  227   57.85)
(smt.delete-inactive-clauses  :num-deleted-clauses 1035)
(smt.stats   39   5075 178404 425713  7641/7319/375   12514/2719    44  227   57.94)
(sat.ddfw       1      1   9.61247   1910001      9362         19            1      193)
ramon: poll                 wall=20.000s usage=20.148s mem=60200KiB load=1.01 rootload=1.01
ramon: end                  Fri Nov  1 22:14:38 2024
ramon: root.execname        z3
ramon: root.utime           20.180s
ramon: root.stime           0.020s
ramon: group.total          20.214s
ramon: group.utime          20.186s
ramon: group.stime          0.028s
ramon: group.mempeak        60712KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.01
