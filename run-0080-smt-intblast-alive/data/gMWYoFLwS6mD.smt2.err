ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:48:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25056 MiB
ramon: sys.mem.avail        61751 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/gMWYoFLwS6mD.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             115125
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3524    920   994/893/96      98/7     4   14   18.98)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 1&1048575
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 1&1048575
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&1048575
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934592 := 8589934610 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&1048575
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934592 := 17179869128 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&1048575
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934592 := 8589934610 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&1048575
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934592 := 17179869128 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&1048575
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934592 := 8589934610 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&1048575
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934592 := 8589934610 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&1048575
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934592 := 8589934610 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&1048575
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934592 := 8589934610 << 19
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 1048575 := 13631488&1048575
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 1048574 := 13631488&1048575
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 1048572 := 13631488&1048575
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 8589934591 := 13 << 20
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 8589934591 := 13 << 20
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 8589934591 := 13 << 20
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 8589934591 := 13 << 20
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 2 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 4 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 8 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 32 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 64 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 128 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 64 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 128 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 256 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 256 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 512 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1024 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 2048 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 4096 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 8192 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 8192 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16384 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 32768 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 65536 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 131072 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 262144 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 524288 := 1048575&13631488
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 524288 := 13631488&1048575
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 13631487 := 13 << 20
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 13631488&1048575
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 524288 := 1048575&13631488
(smt.stats    1    202   4682   2590  1516/1371/223     209/13    10   44   19.69)
(smt.stats    2    313   7780   5564  1712/1547/231     313/44    13   49   19.88)
(smt.stats    3    414  10896   9664  1836/1664/237     396/47    15   59   19.88)
(smt.stats    4    525  12986  11382  1848/1676/248     488/56    19   87   19.97)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 4&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8&8589934566
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934600 := 8589934782 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8&8589934566
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934600 := 8589934782 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 184&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 184&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8&8589934566
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934600 := 8589934782 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 6 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 6 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 7 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 6 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 70 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 100 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 6 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 6 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 6 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 70 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 102 := 190&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 166 := 190&8589934566
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934782 := 8589934782 << 32
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4 := 58&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 6 := 58&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2 := 58&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 32 := 58&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 32 := 58&8589934566
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 34 := 58&8589934566
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934650 := 8589934650 << 32
(smt.stats    5    647  14954  13311  1942/1740/306     626/72    20  101   20.29)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas       :deletions     )
(smt.stats    6    748  17429  15733  1968/1789/307     725/75    21  108   20.29)
(smt.stats    7    859  20931  19844  1987/1797/307     858/75    21  108   20.29)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8589934450&1
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 8589934451 := 4294967225 << 1
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8589934450&1
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 8589934451 := 4294967225 << 1
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 1 := 8589934450&1
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8589934450&1
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 8589934450 := 4294967225 << 1
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8589934450&1
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1 := 1&8589934450
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8589934450&1
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 8589934449 := 4294967225 << 1
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8589934450&1
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 8589934449 := 4294967225 << 1
(smt.stats    8    981  22770  21979  2018/1838/319    1029/100    22  113   20.49)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4294967258 := 8589934495&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4294967257 := 8589934495&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4294967257 := 8589934495&4294967283
(smt.stats    9   1115  24365  25303  2067/1868/319    1221/103    22  113   20.70)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4294967269 := 8589934501&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4294967226 := 4294967228&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4294967226 := 4294967230&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 4294967226 := 4294967230&4294967283
(smt.stats   10   1216  25846  28301  2261/1904/319    1419/107    22  113   20.80)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2150105122 := 4294967222&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2150105122 := 2150105126&4294967283
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 10740039718 := 8589934520 << 31
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2150105122 := 4294967270&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2150105122 := 4294967270&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2150105122 := 4294967270&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2150105122 := 4294967270&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2150105122 := 4294967270&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2150105122 := 4294967270&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2150105138 := 4294967590&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056546 := 4294967590&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056546 := 4294967590&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056546 := 4294967590&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056546 := 4294967598&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294967598&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294967598&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056562 := 4294967606&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056562 := 4294967606&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056562 := 4294967862&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056562 := 4294967862&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056562 := 4294968374&4294967283
(smt.stats   11   1327  27309  31541  2506/2214/355    1621/149    23  115   20.90)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056674 := 4294967862&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056674 := 4294967862&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294967862&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294967862&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294967862&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294967862&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294967862&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294967990&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294967990&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294973622&4294967283
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 2149056690 := 4294969526&4294967283
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1449  29020  35942  2743/2554/417    1974/184    25  132   21.09)
(smt.stats   13   1583  32068  44606  2799/2564/421    2905/412    27  144   21.39)
(smt.stats   14   1730  35523  50156  2990/2801/425    3305/604    28  153   21.48)
(smt.stats   15   1831  38078  58172  3008/2812/426    3461/605    28  153   21.58)
ramon: poll                 wall=1.000s usage=0.944s mem=22964KiB load=0.94 rootload=0.92
(smt.stats   16   1942  41266  67455  3074/2864/426    3631/618    29  186   21.67)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&67108863
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934592 := 8589934664 << 25
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&67108863
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 17179869184 := 8589934664 << 25
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 0&67108863
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 17179869184 := 8589934664 << 25
(smt.stats   17   2064  43654  76387  3195/2932/430    3980/668    31  204   21.96)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 4294967357 := 4294967332 << 26
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 4296015873 := 4294967332 << 26
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 4296015873 := 4294967332 << 26
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
shl: (shl[33] (bv2int %0) (+ 33 (* 8589934591 #130))) 4296015873 := 4294967332 << 26
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 2 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 2 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16384 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 32768 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16384 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 32768 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 32768 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 32768 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16384 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16384 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16384 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16384 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16384 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 262144 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 262144 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 262144 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1048576 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 2097152 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 4194304 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 8388608 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 16777216 := 67108863&2415919104
(smt.stats   18   2198  46820  86079  3346/2973/435    4339/677    31  204   22.26)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 33554432 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 48234496 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 33554432 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 33554432 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 4194304 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 8388608 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 4194304 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 4194304 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 2097152 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1056768 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1056768 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1056768 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1056768 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1048640 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1048576 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1049088 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1049152 := 67108863&2415919104
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 2415919104&67108863
band: (band[33] (if (= #134 32) 1 (if #545 3 #633)) (shl[33] (bv2int %0) (+ 33 #636))) 1049088 := 67108863&2415919104
(smt.stats   19   2345  48801  91695  3525/3094/501    4640/741    32  215   22.64)
(smt.stats   20   2506  53243 104369  3540/3305/538    5117/849    33  233   22.83)
(smt.stats   21   2607  57566 120415  3564/3328/538    5310/849    33  233   22.93)
(smt.stats   22   2718  62429 134363  3625/3331/538    5549/850    33  233   23.02)
(smt.stats   23   2840  65645 143974  3826/3433/538    5894/855    33  233   23.21)
ramon: poll                 wall=2.000s usage=1.943s mem=24660KiB load=1.00 rootload=1.00
(smt.stats   24   2974  70085 161339  3912/3613/538    6361/856    33  233   23.31)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   25   3121  75198 184220  3949/3679/543    6810/1111    34  236   23.40)
(smt.stats   26   3282  84024 213146  4057/3776/543    7084/1191    35  242   23.40)
(smt.stats   27   3459  89407 239165  4234/3981/544    7627/1243    36  244   23.59)
(smt.stats   28   3560  92220 252206  4245/3993/546    7943/1243    36  244   23.59)
ramon: poll                 wall=3.000s usage=2.942s mem=25200KiB load=1.00 rootload=1.00
(smt.stats   29   3671  97752 274099  4306/4040/546    8227/1292    37  272   23.79)
(smt.stats   30   3793 102010 285425  4319/4048/546    8420/1292    37  272   23.89)
(smt.stats   31   3927 108454 318967  4391/4123/547    9117/1390    38  281   24.09)
(smt.stats   32   4074 115997 342888  4494/4127/551    9883/1394    38  281   24.18)
ramon: poll                 wall=4.000s usage=3.942s mem=25740KiB load=1.00 rootload=1.00
(smt.stats   33   4235 123089 374996  4796/4242/555   10664/1563    39  302   24.38)
(smt.stats   34   4412 129948 406785  5227/4573/555   11663/1662    40  332   24.68)
ramon: poll                 wall=5.003s usage=4.945s mem=26436KiB load=1.00 rootload=1.00
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 64 := 72&1023
(smt.stats   35   4606 135417 428384  5302/4982/563   13191/1987    41  363   24.87)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 64 := 72&1023
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 64 := 72&1023
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 64 := 72&1023
(smt.stats   36   4707 140881 446104  5355/5054/563   13534/1988    41  363   24.87)
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934600 := 7256 << 1
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934600 := 7256 << 1
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934600 := 7256 << 1
band: (band[33] (shl[64] (* 2 #128) (mod #648 64)) (if (or #659 #660 #661 #662 #663 #664 #665 #666 #667 #668 #669 #670 #671 #672 #673 #674 ...) 0 (if #690 1 #754))) 0 := 8&3
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 32 #647 #301 #645) 64)) 8589934600 := 524 << 1
(smt.stats   37   4818 144023 460410  5422/5151/574   13807/2414    42  365   25.07)
(smt.stats   38   4940 146511 470705  5464/5188/575   14224/2414    42  365   25.07)
(smt.delete-inactive-clauses  :num-deleted-clauses 54)
(smt.stats   39   5074 154097 489995  5473/5195/576   14330/2414    42  365   25.16)
(smt.stats   40   5221 164301 549746  5479/5200/576   15110/2503    43  384   25.45)
ramon: poll                 wall=6.000s usage=5.940s mem=27148KiB load=1.00 rootload=0.99
(smt.stats   41   5382 168509 564396  5878/5204/576   15735/2510    43  384   25.64)
(smt.stats   42   5559 173809 599609  6059/5626/576   16581/2515    43  384   25.83)
(smt.stats   43   5753 181405 641033  6302/5795/577   17485/2868    44  389   26.02)
ramon: poll                 wall=7.000s usage=6.933s mem=27668KiB load=0.99 rootload=0.99
(smt.stats   44   5966 188573 680212  6588/6145/578   18644/3058    45  399   26.24)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   45   6067 190710 690377  6658/6318/578   19411/3059    45  399   26.33)
(smt.stats   46   6178 195173 711953  6801/6414/578   20697/3065    45  399   26.53)
(smt.stats   47   6300 198798 729506  6955/6549/578   21817/3074    45  399   26.62)
ramon: poll                 wall=8.003s usage=7.936s mem=28212KiB load=1.00 rootload=1.01
(smt.stats   48   6434 204183 753717  7123/6712/578   22858/3078    45  399   26.81)
(smt.stats   49   6581 211139 793912  7136/6854/578   24149/3078    45  399   26.91)
(smt.stats   50   6742 219625 811473  7238/6875/578   24915/3087    45  399   27.21)
ramon: poll                 wall=9.003s usage=8.934s mem=29024KiB load=1.00 rootload=1.00
(smt.stats   51   6919 227338 838031  7466/7027/578   25930/3090    45  399   27.30)
(smt.stats   52   7113 234311 867254  7592/7204/582   27591/3951    46  410   27.71)
ramon: poll                 wall=10.000s usage=9.931s mem=29688KiB load=1.00 rootload=0.99
(smt.stats   53   7326 242754 914887  7878/7365/582   28515/3960    46  410   28.01)
(smt.stats   54   7560 250462 947650  8118/7628/582   29619/4278    47  452   28.30)
ramon: poll                 wall=11.007s usage=10.936s mem=29948KiB load=1.00 rootload=1.00
(smt.stats   55   7661 254383 969460  8302/7882/582   30200/4284    47  452   28.40)
(smt.stats   56   7772 257169 983156  8497/8052/582   30869/4286    47  452   28.49)
(smt.stats   57   7894 260408 994010  8601/8248/582   31410/4287    47  452   28.59)
ramon: poll                 wall=12.003s usage=11.930s mem=30256KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   58   8028 263062 1007849  8736/8402/582   32515/4288    47  452   28.78)
(smt.stats   59   8175 267491 1032347  8879/8463/582   33331/4291    47  452   28.87)
(smt.stats   60   8336 273635 1061581  9018/8607/582   34678/4294    47  452   28.97)
ramon: poll                 wall=13.003s usage=12.929s mem=30908KiB load=1.00 rootload=1.00
(smt.stats   61   8513 279788 1108286  9050/8758/582   38401/4294    47  452   29.26)
(smt.stats   62   8707 289477 1158145  9185/8779/582   40304/4296    47  452   29.65)
ramon: poll                 wall=14.000s usage=13.925s mem=31408KiB load=1.00 rootload=1.00
(smt.stats   63   8920 298485 1224060  9471/8942/582   42918/4313    47  452   30.02)
ramon: poll                 wall=15.000s usage=14.925s mem=31804KiB load=1.00 rootload=1.00
(smt.stats   64   9154 310751 1332579  9519/9204/582   45230/4316    47  452   30.21)
(smt.stats   65   9411 318901 1411533  9687/9245/582   47155/4318    47  452   30.50)
(smt.stats   66   9512 321108 1427596  9764/9443/582   47717/4320    47  452   30.71)
ramon: poll                 wall=16.003s usage=15.926s mem=32376KiB load=1.00 rootload=1.00
(smt.stats   67   9623 326026 1468854  9829/9502/582   49653/4320    47  452   30.81)
(smt.stats   68   9745 331673 1509531  9985/9557/582   50732/4325    47  452   31.00)
ramon: poll                 wall=17.000s usage=16.923s mem=32728KiB load=1.00 rootload=0.99
(smt.stats   69   9879 335737 1541133 10339/9736/582   51200/4326    47  452   31.09)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   70  10026 339762 1576692 10420/10136/583   52638/6854    48  456   31.28)
ramon: poll                 wall=18.000s usage=17.921s mem=32960KiB load=1.00 rootload=1.00
(smt.stats   71  10187 347037 1618356 10637/10145/583   53503/6861    48  456   31.28)
(smt.stats   72  10364 353311 1673347 10736/10394/583   54565/6872    48  456   31.48)
(smt.stats   73  10558 361378 1716598 10863/10512/583   56133/6875    48  456   31.62)
ramon: poll                 wall=19.000s usage=18.920s mem=33516KiB load=1.00 rootload=1.00
(smt.stats   74  10771 370254 1787479 11056/10642/584   57190/7286    49  456   31.91)
(smt.stats   75  11005 374447 1825998 11252/10845/584   58483/7288    49  456   32.20)
(smt.stats   76  11262 384030 1904727 11526/11033/585   59604/7297    49  456   32.29)
ramon: poll                 wall=20.003s usage=19.923s mem=34116KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 18:48:22 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.020s
ramon: group.total          19.981s
ramon: group.utime          19.957s
ramon: group.stime          0.024s
ramon: group.mempeak        34632KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.061s
ramon: loadavg              1.00
