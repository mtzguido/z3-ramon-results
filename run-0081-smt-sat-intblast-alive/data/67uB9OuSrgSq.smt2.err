ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:36:02 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         30152 MiB
ramon: sys.mem.avail        62092 MiB
ramon: sys.nprocs           1397
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/67uB9OuSrgSq.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=true
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             257017
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   222/222     0/0  58       0    18.44   0.00)
(sat.stats    101    633    0   222/222   101/35  58       0    18.74   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 505 :time 0.00)
(sat.stats    101    633    0   222/222   101/35  58       0    18.74   0.01)
(sat.stats    101    633    0   222/222   101/35  58       0    18.74   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 0 :time 0.00)
 (sat-probing :cost 435218.74 :time 0.00)
(sat.stats    101    633    0   222/222   101/35  58       0    18.74   0.01)
(sat.stats    280   3624    1   222/222   280/159  58       0    18.93   0.01)
(sat.stats :conflicts    :restarts     :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    283   3747    2   222/222   283/161  58       0    18.93   0.01)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 2387 :time 0.00)
(sat.stats    373   5009    3   227/227   371/197  62       0    19.31   0.12)
(sat.stats    376   5027    4   227/227   374/197  62       0    19.31   0.12)
(sat.stats    379   5035    5   227/227   377/197  62       0    19.31   0.12)
(sat.stats    382   5078    6   227/227   380/197  62       0    19.31   0.12)
(sat.stats    385   5142    7   227/227   383/197  62       0    19.31   0.12)
(sat.stats    388   5202    8   227/227   386/197  62       0    19.31   0.12)
(sat.stats    391   5309    9   227/227   389/197  62       0    19.31   0.12)
(sat.stats    394   5407   10   227/227   392/197  62       0    19.31   0.12)
(sat.stats    397   5558   11   227/227   395/197  62       0    19.31   0.12)
(sat.stats    400   5681   12   227/227   398/199  62       0    19.31   0.12)
(sat.stats    467   6498   13   227/227   465/222  62       0    19.41   0.12)
(sat.stats    470   6519   14   227/227   468/222  62       0    19.41   0.12)
(sat.stats    473   6521   15   227/227   471/222  62       0    19.41   0.12)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 3815 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4042 :time 0.00)
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 1 := 39 >>l 39
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 0&128
lshr: (lshr[64] (bv2int %0) (mod (+ #63 #678) 64)) 35184372069743 := 39 >>l 39
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 4284 :time 0.00)
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 7 := 63&128
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 12 := 63&128
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 18 := 63&128
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 56 := 63&128
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 16 := 63&128
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 32 := 63&128
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 63&128
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 23 := 128&63
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 63&128
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 42 := 128&63
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 63&128
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 48 := 128&63
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 63&128
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 44 := 128&63
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 63&128
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 40 := 128&63
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 63&128
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 32 := 128&63
 (sat-cleaner :elim-literals 9 :elim-clauses 1 :cost 5874 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 7308 :time 0.00)
(sat.stats :conflicts   :restarts       :learned/bin        :gc          :time)
(sat.stats      :decisions    :clauses/bin       :units         :memory       )
(sat.stats    711  18111   59  4157/4117   745/346 173       0    20.99   0.27)
 (sat-cleaner :elim-literals 38 :elim-clauses 1 :cost 9240 :time 0.00)
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 26 := 14293651161134 >>l 29
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
lshr: (lshr[64] (bv2int %0) (mod (+ #63 #678) 64)) 70368744177678 := 14293651161134 >>l 29
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 64 := 131072&26624
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 17152 := 131072&26624
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 128 := 131072&26624
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 17920 := 131072&26624
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 15360 := 131072&26624
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 14336 := 131072&26624
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 20480 := 131072&26624
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 8192 := 131072&26624
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 26624&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 16384 := 131072&26624
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 2688 := 26624&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 64 := 26624&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 23552 := 26624&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 768 := 26624&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 512 := 26624&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 20480 := 26624&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 2048 := 26624&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 8192 := 26624&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 16384 := 26624&131072
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 12468 :time 0.00)
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 512 := 24575&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 256 := 24575&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 128 := 24575&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 64 := 24575&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 1024 := 24575&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 4096 := 24575&131072
(sat.stats   1065  45773  115  9325/9283  1133/428 292       0    22.83   0.57)
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 32768 := 33792&131072
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 63487&131072
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 32768 := 131072&63487
ramon: poll                 wall=1.000s usage=0.926s mem=25368KiB load=0.93 rootload=0.90
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 19999 :time 0.00)
 (sat-cleaner :elim-literals 0 :elim-clauses 1 :cost 20546 :time 0.00)
(sat.stats   1817  88609  184 19514/19472  2018/704 347       0    25.23   1.35)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 26734 :time 0.00)
lshr: (lshr[45] (bv2int %0) (mod (bv2int %0) 45)) 122 := 35183835218702 >>l 2
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
lshr: (lshr[64] (bv2int %0) (mod (+ #63 #678) 64)) 35183835218702 := 35183835218702 >>l 2
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 1899298816 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 1748893696 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 513802240 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 262144 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 1048576 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 524288 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 130161836032 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 163141648384 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 50331648 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 8388608 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 33554432 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 4344493637632 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 2213250334720 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 721017634816 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 6493990551552 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 22548578304 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 17179869184 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 12884901888 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 2147483648 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 8589934592 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 3848290697216 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 274877906944 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 206158430208 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 137438953472 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 3298534883328 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 6597069766656 := 17592186044416&8795958804675
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 0 := 8795958804675&17592186044416
band: (band[45] (if (= #549 63) 36893488147419103232 (if #551 18446744073709551616 #675)) (lshr[64] (bv2int %0) (mod #679 64))) 4398046511104 := 17592186044416&8795958804675
 (sat-cleaner :elim-literals 2 :elim-clauses 2 :cost 29432 :time 0.00)
ramon: poll                 wall=2.000s usage=1.926s mem=28488KiB load=1.00 rootload=0.99
band: (band[45] (lshr[45] (bv2int %0) (mod #63 45)) (if (= #446 44) 35184372088832 (if #448 17592186044416 #534))) 65536 := 8796093022181&17592186044416
ramon: poll                 wall=3.000s usage=2.926s mem=30628KiB load=1.00 rootload=1.00
(sat.stats   3240 144218  219 42085/42041  3550/958 529       0    30.33   3.25)
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 37574 :time 0.00)
ramon: poll                 wall=4.000s usage=3.926s mem=33292KiB load=1.00 rootload=0.99
(sat.stats   3767 169726  255 52786/52742  4116/1210 537       0    32.43   4.20)
ramon: poll                 wall=5.000s usage=4.926s mem=33924KiB load=1.00 rootload=1.00
ramon: poll                 wall=6.000s usage=5.925s mem=43912KiB load=1.00 rootload=0.99
ramon: poll                 wall=7.000s usage=6.925s mem=50528KiB load=1.00 rootload=0.99
ramon: poll                 wall=8.000s usage=7.925s mem=54840KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.925s mem=58172KiB load=1.00 rootload=0.99
ramon: poll                 wall=10.000s usage=9.925s mem=70988KiB load=1.00 rootload=0.99
ramon: poll                 wall=11.000s usage=10.924s mem=73352KiB load=1.00 rootload=0.99
ramon: poll                 wall=12.000s usage=11.924s mem=75900KiB load=1.00 rootload=0.99
ramon: poll                 wall=13.000s usage=12.924s mem=79692KiB load=1.00 rootload=0.99
ramon: poll                 wall=14.000s usage=13.924s mem=83152KiB load=1.00 rootload=1.00
ramon: poll                 wall=15.000s usage=14.923s mem=86148KiB load=1.00 rootload=1.00
ramon: poll                 wall=16.000s usage=15.923s mem=90056KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.923s mem=96096KiB load=1.00 rootload=1.00
ramon: poll                 wall=18.000s usage=17.923s mem=98432KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.923s mem=99MiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.922s mem=103MiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:36:22 2024
ramon: root.execname        z3
ramon: root.utime           19.880s
ramon: root.stime           0.120s
ramon: group.total          20.006s
ramon: group.utime          19.890s
ramon: group.stime          0.116s
ramon: group.mempeak        104MiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.084s
ramon: loadavg              1.00
