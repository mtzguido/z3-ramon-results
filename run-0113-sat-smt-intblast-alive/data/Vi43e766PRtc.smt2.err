ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Wed Dec 25 16:03:57 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         40359 MiB
ramon: sys.mem.avail        61379 MiB
ramon: sys.nprocs           1322
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/Vi43e766PRtc.smt2
ramon: argv                 2 = sat.smt=true
ramon: argv                 3 = smt.bv.solver=2
ramon: argv                 4 = -T:20
ramon: argv                 5 = -v:2
ramon: argv                 6 = -st
ramon: argv                 7 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 8 = model_validate=true
ramon: childpid             3871583
(sat.copy :learned 0)
(sat.solver)
(sat.copy :learned 0)
(sat.stats   :conflicts  :restarts       :learned/bin    :gc          :time)
(sat.stats          :decisions :clauses/bin    :units        :memory       )
(sat.stats      0      0    0   240/240     0/0  63       0    18.51   0.00)
(sat.stats    103    605    0   240/240   103/31  63       0    18.82   0.01)
 (sat-cleaner :elim-literals 0 :elim-clauses 0 :cost 274 :time 0.00)
(sat.stats    103    605    0   240/240   103/31  63       0    18.82   0.01)
(sat.stats    103    605    0   240/240   103/31  63       0    18.82   0.01)
(sat.simplify :simplifications 1)
 (sat-scc :elim-vars 2 :time 0.00)
 (sat-probing :cost 376018.82 :time 0.00)
(sat.stats    103    605    0   242/242    39/30  63       0    18.82   0.01)
(sat.stats    171   1525    1   242/242   107/84  63       0    18.92   0.01)
(sat.stats :conflicts    :restarts     :learned/bin       :gc          :time)
(sat.stats       :decisions    :clauses/bin     :units        :memory       )
(sat.stats    174   1575    2   242/242   110/84  63       0    18.92   0.01)
(sat.stats    177   1616    3   242/242   113/84  63       0    18.92   0.01)
(sat.stats    180   1671    4   242/242   116/84  63       0    18.92   0.01)
(sat.stats    183   1721    5   242/242   119/84  63       0    18.92   0.01)
(sat.stats    186   1781    6   242/242   122/84  63       0    18.92   0.01)
(sat.stats    189   1844    7   242/242   125/84  63       0    18.92   0.01)
(sat.stats    192   1913    8   242/242   128/84  63       0    18.92   0.01)
(sat.stats    195   2014    9   242/242   131/85  63       0    18.92   0.01)
(sat.stats    198   2044   10   242/242   134/88  63       0    18.92   0.01)
(sat.stats    201   2101   11   242/242   137/91  63       0    18.92   0.01)
(sat.stats    204   2185   12   242/242   140/94  63       0    18.92   0.01)
(sat.stats :conflicts   :restarts      :learned/bin        :gc          :time)
(sat.stats       :decisions    :clauses/bin      :units        :memory       )
(sat.stats    210   2340   14   242/242   146/100  63       0    18.92   0.01)
(sat.stats    375   5462   17   274/274   311/192  63       0    19.81   0.09)
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 3134 :time 0.00)
lshr: (lshr[54] (bv2int %0) (+ 54 (* 18014398509481983 #61))) 0 := 2885118511284225 >>l 17
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 0&4260607557632
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 63 #595 #599) 64)) 512 := 512 >>l 26
 (sat-cleaner :elim-literals 2 :elim-clauses 0 :cost 3573 :time 0.00)
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 29932 := 137438949893&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 1 := 1&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 2 := 2&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 8 := 8&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 16 := 16&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 32 := 32&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 64 := 64&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 128 := 128&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 256 := 256&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 512 := 512&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 1024 := 1024&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 2048 := 2048&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 4096 := 4096&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 8192 := 8192&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 16384 := 16384&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 32768 := 32768&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 65536 := 65536&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 131072 := 131072&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 262144 := 262144&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 524288 := 524288&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 1048576 := 1048576&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 2097152 := 2097152&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 4194304 := 4194304&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 8388608 := 8388608&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 16777216 := 16777216&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 33554432 := 33554432&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 67108864 := 67108864&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 134217728 := 134217728&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 268435456 := 268435456&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 536870912 := 536870912&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 1073741824 := 1073741824&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 2147483648 := 2147483648&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 4294967296 := 4294967296&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 8589934592 := 8589934592&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 17179869184 := 17179869184&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 34359738368 := 34359738368&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 68719476736 := 68719476736&4260607557632
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 383 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 268 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 784 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 1024 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 674 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 8 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 384 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 96 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 64 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 512 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1025&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 256 := 4260607557632&1025
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 2048&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 2048 := 4260607557632&2048
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 4096&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 4096 := 4260607557632&4096
(sat.stats    675  10404   20  3242/3239   646/272  89       0    22.39   0.28)
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 8192&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 8192 := 4260607557632&8192
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 16384&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 16384 := 4260607557632&16384
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 32768&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 32768 := 4260607557632&32768
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 65536&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 65536 := 4260607557632&65536
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 131072&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 131072 := 4260607557632&131072
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 262144&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 262144 := 4260607557632&262144
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 524288&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 524288 := 4260607557632&524288
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1048576&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 1048576 := 4260607557632&1048576
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 2097152&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 2097152 := 4260607557632&2097152
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 4194304&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 4194304 := 4260607557632&4194304
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 8388608&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 8388608 := 4260607557632&8388608
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 16777216&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 16777216 := 4260607557632&16777216
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 33554432&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 33554432 := 4260607557632&33554432
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 67108864&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 67108864 := 4260607557632&67108864
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 134217728&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 134217728 := 4260607557632&134217728
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 268435456&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 268435456 := 4260607557632&268435456
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 536870912&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 536870912 := 4260607557632&536870912
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1073741824&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 1073741824 := 4260607557632&1073741824
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 2147483648&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 2147483648 := 4260607557632&2147483648
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 4294967296&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 4294967296 := 4260607557632&4294967296
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 8589934592&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 8589934592 := 4260607557632&8589934592
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 17179869184&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 17179869184 := 4260607557632&17179869184
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 34359738368&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 34359738368 := 4260607557632&34359738368
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 68719476736&4260607557632
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 68719476736 := 4260607557632&68719476736
 (sat-cleaner :elim-literals 77 :elim-clauses 1 :cost 6338 :time 0.00)
(sat.stats    762  11906   24  4322/4319   730/277 534       0    23.35   0.37)
(sat.stats   1208  39453   76  5836/5832  1198/366 534       0    24.11   0.87)
ramon: poll                 wall=1.004s usage=1.002s mem=26148KiB load=1.00 rootload=0.99
(sat.stats   1597  43867  185 10482/10478  1617/376 534       0    24.90   1.79)
ramon: poll                 wall=2.000s usage=1.997s mem=27172KiB load=1.00 rootload=0.99
 (sat-cleaner :elim-literals 21 :elim-clauses 0 :cost 13029 :time 0.00)
ramon: poll                 wall=3.004s usage=3.001s mem=28608KiB load=1.00 rootload=1.01
 (sat-cleaner :elim-literals 1 :elim-clauses 0 :cost 16390 :time 0.00)
lshr: (lshr[54] (bv2int %0) (+ 54 (* 18014398509481983 #61))) 0 := 16874 >>l 13
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 0&68169720922112
lshr: (lshr[64] (* 512 (bv2int %0)) (mod (+ 63 #595 #599) 64)) 1548800 := 1548800 >>l 22
(sat.stats :conflicts  :restarts        :learned/bin         :gc          :time)
(sat.stats      :decisions   :clauses/bin         :units         :memory       )
(sat.stats   2510  95755  225 16997/16992  2837/678 539       0    28.08   3.22)
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 137438953472&68169720922112
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 137438953472 := 68169720922112&137438953472
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 274877906944&68169720922112
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 274877906944 := 68169720922112&274877906944
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 549755813888&68169720922112
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 549755813888 := 68169720922112&549755813888
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 0 := 1099511627776&68169720922112
band: (band[54] (if (= #311 63) 285924533142498050048 (if #451 142962266571249025024 #450)) (lshr[64] (* 512 #63) (mod #602 64))) 1099511627776 := 68169720922112&1099511627776
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 1511828488192 := 2199023255535&68169720922112
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 1374389534720 := 2199023255535&68169720922112
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 1099511627776 := 2199023255535&68169720922112
band: (band[54] (lshr[54] (bv2int %0) (+ 54 #476)) (if (= #84 53) 279223176896970752 (if #480 139611588448485376 #584))) 549755813888 := 2199023255535&68169720922112
ramon: poll                 wall=4.000s usage=3.997s mem=30400KiB load=1.00 rootload=0.99
ramon: poll                 wall=5.000s usage=4.997s mem=31816KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 30914 :time 0.00)
(sat.stats   3711 171698  307 26493/26488  4294/1044 636       0    32.19   5.53)
ramon: poll                 wall=6.000s usage=5.996s mem=36936KiB load=1.00 rootload=1.00
ramon: poll                 wall=7.000s usage=6.996s mem=47204KiB load=1.00 rootload=1.00
ramon: poll                 wall=8.000s usage=7.996s mem=51556KiB load=1.00 rootload=1.00
ramon: poll                 wall=9.000s usage=8.996s mem=53328KiB load=1.00 rootload=1.00
ramon: poll                 wall=10.000s usage=9.995s mem=56396KiB load=1.00 rootload=1.00
ramon: poll                 wall=11.004s usage=10.999s mem=56652KiB load=1.00 rootload=1.00
ramon: poll                 wall=12.000s usage=11.995s mem=57544KiB load=1.00 rootload=1.00
ramon: poll                 wall=13.000s usage=12.994s mem=59632KiB load=1.00 rootload=1.00
 (sat-cleaner :elim-literals 5 :elim-clauses 0 :cost 35414 :time 0.00)
ramon: poll                 wall=14.000s usage=13.989s mem=60792KiB load=0.99 rootload=0.99
ramon: poll                 wall=15.000s usage=14.985s mem=71856KiB load=1.00 rootload=0.99
ramon: poll                 wall=16.000s usage=15.985s mem=78104KiB load=1.00 rootload=1.00
ramon: poll                 wall=17.000s usage=16.984s mem=79776KiB load=1.00 rootload=0.99
ramon: poll                 wall=18.000s usage=17.981s mem=83532KiB load=1.00 rootload=0.99
ramon: poll                 wall=19.000s usage=18.979s mem=86948KiB load=1.00 rootload=1.00
ramon: poll                 wall=20.000s usage=19.978s mem=88996KiB load=1.00 rootload=1.00
ramon: end                  Wed Dec 25 16:04:17 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.993s
ramon: group.utime          19.957s
ramon: group.stime          0.036s
ramon: group.mempeak        89252KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
