ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:29:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25509 MiB
ramon: sys.mem.avail        61753 MiB
ramon: sys.nprocs           1396
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/UjWXERjEJlay.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             53136
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   3194    722  1113/1003/88      96/2     1   13   18.98)
(smt.stats    1    202   4905   1351  1923/1733/90     182/1     2   14   19.08)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 17592186044416 := 56 << 15
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 17592186044416 := 56 << 15
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 17592186044416 := 56 << 15
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 17592186044416 := 144 << 15
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 17592186044416 := 144 << 15
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 17592186044416 := 232 << 15
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&7602176
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 1 := 116 << 16
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 17592186044416 := 144 << 15
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&2359296
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 1 := 268435492 << 16
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126465
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126465
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126465
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126466
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 32766 := 32767&8126466
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 32766 := 32767&8126466
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126466
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 35184372088832 := 536871160 << 15
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 268435579 := 268435580 << 16
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 4 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 8 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 16 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 32 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 32 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 64 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 256 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 512 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 1024 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2048 := 32767&8126464
(smt.stats    2    313   6500   3383  2074/1780/128     276/7     5   23   19.66)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 512 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 1024 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 4096 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 8192 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 16384 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 28672 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 29024 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 29024 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 4096 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 8192 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 16384 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 512 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 512 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 512 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 8192 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 4096 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 1024 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 256 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 256 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 64 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 268435579 := 268435580 << 16
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 1 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 2 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 4 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 32760 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 16 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 32 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 64 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 128 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 256 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 512 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 1024 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 2048 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 4096 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 8192 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 16384 := 32767&8126464
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&8126464
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 8 := 268435580 << 16
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&267649024
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 1 := 32767&267649024
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&1339555840
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 1 := 32767&1339555840
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&1339555840
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 1 := 32767&1339555840
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&2883584
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 4 := 32767&2883584
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 32767&524288
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 4 := 32767&524288
(smt.stats    3    414   7853   5722  2148/1950/295     423/38     8   61   20.27)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 256 := 68719476735&256
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 87960930222336 := 2684354654 << 36
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 256 := 68719476735&1024
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 256 := 68719476735&16384
(smt.stats    4    525   9466   8783  2239/2037/297     573/89    10   68   20.36)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 2047&128
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 87960930222208 := 1048672 << 11
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 2047&128
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 87960930222208 := 1048760 << 11
(smt.stats    5    647  13064  13171  2281/2052/299     712/124    12   70   20.36)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 2047&49152
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 2047&49152
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 2047&212992
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 2047&49152
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 8191&41088
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 105553116307584 := 137438953492 << 13
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 8191&41088
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 105553116307584 := 137438953492 << 13
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 128 := 8191&49280
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 105553116315776 := 51539607652 << 13
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas         :deletions    )
(smt.stats    6    748  16040  16623  2327/2120/318     815/142    14   81   20.46)
(smt.stats    7    859  18443  20391  2361/2129/318     953/148    14   81   20.55)
(smt.stats    8    981  19539  21425  2492/2177/318    1097/185    15   86   20.64)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&73728
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&73730
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 1143492092960770 := 137438953506 << 6
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&73730
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 1143492092960770 := 137438953506 << 6
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&73730
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 1143492092960770 := 137438953506 << 6
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&73730
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 1143492092960770 := 137438953506 << 6
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&73731
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&507518
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&507514
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&163842
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 1143492093050882 := 137438953506 << 6
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&132098
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 1143492093019138 := 137438953506 << 6
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 63&132098
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 43 #873 #875) 64)) 1143492093019138 := 137438953506 << 6
(smt.stats    9   1115  22017  25059  2684/2374/318    1301/200    15   86   20.64)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&139392
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 524288 := 8933531976769 << 7
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&139392
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 524288 := 8933531976769 << 7
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&139392
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 524288 := 8933531976769 << 7
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&145024
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 524288 := 8933531976813 << 7
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&145024
shl: (shl[44] (bv2int %0) (+ 44 (* 17592186044415 #116))) 524288 := 8933531976813 << 7
(smt.stats   10   1216  24341  30219  2750/2495/342    1571/296    17   96   20.83)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 33 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 32 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 16 := 63&9054295364224
(smt.stats   11   1327  25723  33332  2951/2583/349    1755/341    18   97   21.22)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&9019868384384
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 40 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&9019868384384
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 32 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&9019868384384
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 32 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&9019868384384
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 16 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&9019868384384
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 16 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&9019868384384
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 4 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&9019868384384
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 2 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&9019868384384
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 2 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 8 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 4 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 4 := 63&9019868384384
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&9002251432064
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 8 := 63&9002251432064
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&4415663469184
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 8 := 63&4415663469184
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 0 := 63&4415663469184
band: (band[44] (if (= #120 43) 0 (if #550 1 #670)) (shl[44] (bv2int %0) (+ 44 #673))) 8 := 63&4415663469184
(smt.stats   12   1449  27683  39312  3111/2743/359    2011/349    18   97   21.22)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   13   1583  30611  47799  3126/2903/392    2490/520    20  115   21.31)
(smt.stats   14   1730  35485  60947  3181/2949/393    2692/576    22  137   21.31)
(smt.stats   15   1831  40615  70350  3194/2952/394    2841/576    22  137   21.42)
ramon: poll                 wall=1.000s usage=0.929s mem=22704KiB load=0.93 rootload=0.91
(smt.stats   16   1942  44529  79891  3238/2969/394    2989/584    23  142   21.42)
(smt.stats   17   2064  46506  86762  3304/3059/399    3169/598    24  144   21.53)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 2097151&66634
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 2097151&66626
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 2 := 2097151&66626
(smt.stats   18   2198  51937 101080  3384/3066/401    3435/641    26  166   21.81)
(smt.stats   19   2345  53452 104887  3771/3139/411    3733/650    26  166   22.18)
(smt.stats   20   2506  56661 117135  4017/3585/411    4275/703    27  168   22.27)
(smt.stats   21   2607  61121 134281  4061/3781/411    4564/704    27  168   22.27)
(smt.stats   22   2718  62967 138914  4284/3831/411    4874/705    27  168   22.37)
(smt.stats   23   2840  65896 147519  4492/4103/411    5105/708    27  168   22.46)
(smt.stats   24   2974  68920 155150  4736/4331/411    5485/708    27  168   22.57)
(smt.stats   25   3121  74062 176480  4794/4531/413    6548/935    28  169   22.76)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   26   3282  77751 188178  5065/4559/413    6973/1611    29  170   22.86)
ramon: poll                 wall=2.000s usage=1.929s mem=24292KiB load=1.00 rootload=1.00
(smt.stats   27   3459  80586 197900  5474/5105/414    7523/1617    29  170   23.06)
(smt.stats   28   3560  83538 208394  5497/5250/417    7807/1722    30  170   23.06)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 20 := 68719476735&17592186028550
(smt.stats   29   3671  86426 220126  5594/5258/417    8017/1724    30  170   23.15)
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 20 := 68719476735&17592186028580
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 20 := 68719476735&17592186028564
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 20 := 68719476735&17592186028564
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 20 := 68719476735&17592186028348
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 20 := 68719476735&17592186028348
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 20 := 68719476735&17592186028348
band: (band[44] (if (or #685 #686 #687 #688 #689 #690 #691 #692 #693 #694 #695 #696 #697 #698 #699 #700 ...) 0 (if #706 1 #790)) (shl[64] (* 2 #114) (mod #876 64))) 20 := 68719476735&17592186028348
(smt.stats   30   3793  88102 228531  5770/5359/417    8308/1833    31  173   23.34)
(smt.stats   31   3927  90241 236159  6264/5616/427    8877/1833    31  173   23.48)
(smt.stats   32   4074  96745 274204  6285/6035/427   10071/1912    32  175   23.67)
(smt.stats   33   4236 105103 316922  6297/6051/427   10591/1912    32  175   23.67)
ramon: poll                 wall=3.004s usage=2.926s mem=25336KiB load=0.99 rootload=1.00
(smt.stats   34   4413 112515 364851  6372/6058/427   11475/1913    32  175   23.86)
(smt.stats   35   4607 116950 388162  6423/6158/430   12202/2667    33  176   24.06)
(smt.stats   36   4708 118351 394770  6447/6173/430   12498/2667    33  176   24.06)
(smt.stats   37   4819 122752 445883  6461/6193/430   12676/2846    34  184   24.15)
(smt.stats   38   4941 128978 513416  6464/6206/430   12850/2846    34  184   24.15)
(smt.delete-inactive-clauses  :num-deleted-clauses 146)
(smt.stats   39   5075 132045 534851  6473/6215/432   12940/2957    35  190   24.15)
ramon: poll                 wall=4.000s usage=3.921s mem=25580KiB load=1.00 rootload=0.99
(smt.stats   40   5222 139272 601175  6491/6228/435   13720/3157    36  198   24.25)
(smt.stats   41   5383 146032 627718  6775/6416/437   14163/3683    37  226   24.44)
(smt.stats   42   5560 151677 651183  6845/6574/441   14897/3685    37  226   24.54)
ramon: poll                 wall=5.000s usage=4.921s mem=26008KiB load=1.00 rootload=1.00
(smt.stats   43   5754 159417 680186  6983/6592/441   15348/3821    38  255   24.54)
(smt.stats   44   5967 166015 698585  7208/6750/441   15826/3826    38  255   24.73)
(smt.stats   45   6068 169766 726207  7226/6952/441   16430/3826    38  255   24.73)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   46   6179 172707 741716  7309/7038/447   16909/4258    39  262   24.83)
(smt.stats   47   6301 175328 751974  7341/7052/447   17066/4259    39  262   24.83)
(smt.stats   48   6435 179214 800353  7385/7113/449   17525/4429    40  291   24.93)
ramon: poll                 wall=6.004s usage=5.924s mem=26388KiB load=1.00 rootload=1.01
(smt.stats   49   6582 183496 812810  7490/7119/449   18018/4437    40  291   25.03)
(smt.stats   50   6743 188098 836517  7704/7229/450   18588/4444    40  291   25.22)
(smt.stats   51   6920 193052 867039  8015/7530/450   19372/4619    41  292   25.32)
ramon: poll                 wall=7.000s usage=6.919s mem=26952KiB load=1.00 rootload=0.99
(smt.stats   52   7114 198141 887050  8117/7763/450   19877/4620    41  292   25.41)
(smt.stats   53   7327 205094 913880  8335/7867/450   20663/4620    41  292   25.61)
(smt.stats   54   7561 212299 948587  8550/8109/450   21801/4625    41  292   25.80)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   55   7662 219073 1023823  8582/8310/451   21909/5137    42  294   25.80)
ramon: poll                 wall=8.000s usage=7.919s mem=27300KiB load=1.00 rootload=1.00
(smt.stats   56   7773 223622 1062804  8652/8311/451   22290/5140    42  294   25.89)
(smt.stats   57   7895 230217 1136657  8762/8398/451   22530/5142    42  294   26.09)
(smt.stats   58   8029 233223 1153219  8862/8503/451   23266/5143    42  294   26.09)
ramon: poll                 wall=9.000s usage=8.915s mem=27788KiB load=1.00 rootload=1.00
(smt.stats   59   8176 236111 1167841  9204/8647/451   23635/5146    42  294   26.38)
(smt.stats   60   8337 241223 1218719  9423/9133/452   24950/5306    43  294   26.48)
(smt.stats   61   8514 244365 1245081  9560/9166/452   26083/5307    43  294   26.48)
ramon: poll                 wall=10.000s usage=9.915s mem=28364KiB load=1.00 rootload=1.00
(smt.stats   62   8708 251766 1299977  9627/9301/452   26996/5307    43  294   26.77)
(smt.stats   63   8921 255676 1346731 10069/9430/452   27823/5311    43  294   26.92)
(smt.stats   64   9155 261525 1404913 10099/9816/452   29455/5315    43  294   27.13)
ramon: poll                 wall=11.000s usage=10.915s mem=28916KiB load=1.00 rootload=1.00
(smt.stats   65   9412 267568 1458653 10460/9832/453   30973/5809    44  301   27.42)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   66   9513 269558 1470938 10466/10190/453   31795/5809    44  301   27.52)
(smt.stats   67   9624 274362 1488527 10521/10203/453   32556/5810    44  301   27.61)
(smt.stats   68   9746 280530 1586823 10535/10263/454   33196/6114    45  313   27.61)
(smt.stats   69   9880 284819 1615011 10605/10277/455   33866/6119    45  313   27.81)
(smt.delete-inactive-clauses  :num-deleted-clauses 1382)
(smt.stats   70  10027 288415 1653915 10638/10357/455   32877/6120    45  313   27.81)
ramon: poll                 wall=12.000s usage=11.915s mem=29372KiB load=1.00 rootload=0.99
(smt.stats   71  10188 295801 1728428 10674/10387/455   33870/6268    46  313   27.81)
(smt.stats   72  10365 302880 1804992 10792/10405/456   34414/6355    47  318   27.91)
(smt.stats   73  10559 307715 1827066 10890/10543/456   34970/6360    47  318   27.91)
ramon: poll                 wall=13.000s usage=12.906s mem=29516KiB load=0.99 rootload=1.00
(smt.stats   74  10772 316496 1950097 10914/10642/457   35590/6550    48  318   27.91)
(smt.stats   75  11006 324289 2002033 11135/10644/457   36710/6556    48  318   28.11)
(smt.stats   76  11263 332718 2054113 11499/10872/457   37259/6570    48  318   28.30)
ramon: poll                 wall=14.000s usage=13.906s mem=29904KiB load=1.00 rootload=1.00
(smt.stats   77  11545 339682 2089163 11633/11292/457   38082/6571    48  318   28.51)
(smt.stats   78  11646 344071 2109991 11679/11365/457   38363/6571    48  318   28.51)
(smt.stats   79  11757 347450 2119183 11757/11422/457   38553/6571    48  318   28.51)
ramon: poll                 wall=15.000s usage=14.906s mem=30168KiB load=1.00 rootload=1.00
(smt.stats   80  11879 351534 2136016 11847/11497/457   38825/6575    48  318   28.60)
(smt.stats   81  12013 353970 2150419 11930/11621/457   39544/6575    48  318   28.60)
(smt.stats   82  12160 357655 2165731 12008/11659/457   39861/6576    48  318   28.70)
ramon: poll                 wall=16.000s usage=15.906s mem=30632KiB load=1.00 rootload=1.00
(smt.stats   83  12321 360418 2173204 12257/11757/457   40329/6579    48  318   28.89)
(smt.stats   84  12498 361819 2183455 12338/12037/457   40895/6579    48  318   28.89)
(smt.stats   85  12692 366803 2208007 12554/12281/458   41697/7302    49  318   29.09)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   86  12905 371978 2251881 12626/12299/458   42197/7305    49  318   29.19)
ramon: poll                 wall=17.000s usage=16.905s mem=30896KiB load=1.00 rootload=0.99
(smt.stats   87  13139 376740 2289250 12817/12495/461   43150/7505    50  319   29.47)
(smt.stats   88  13396 384653 2323704 12880/12600/463   43612/7505    50  319   29.47)
(smt.stats   89  13678 389941 2366176 13034/12627/463   44934/7507    50  319   29.66)
ramon: poll                 wall=18.000s usage=17.905s mem=31268KiB load=1.00 rootload=1.00
(smt.stats   90  13988 394533 2408574 13522/12786/463   46436/7558    51  327   29.85)
(smt.stats   91  14089 395917 2419296 13547/13275/463   46668/7558    51  327   29.85)
(smt.stats   92  14200 397943 2437415 13574/13280/464   47008/7558    51  327   29.85)
(smt.stats   93  14322 401033 2479922 13701/13306/464   47359/7563    51  327   29.95)
ramon: poll                 wall=19.000s usage=18.905s mem=31552KiB load=1.00 rootload=1.00
(smt.stats   94  14456 402573 2498373 14012/13740/466   48266/7775    52  332   29.95)
(smt.stats   95  14603 409429 2533124 14024/13744/466   48548/7775    52  332   30.06)
(smt.stats   96  14764 413711 2593748 14341/13793/466   49291/7778    52  332   30.25)
ramon: poll                 wall=20.000s usage=19.899s mem=32164KiB load=0.99 rootload=1.00
ramon: end                  Fri Nov  1 18:29:26 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.010s
ramon: group.total          19.976s
ramon: group.utime          19.964s
ramon: group.stime          0.012s
ramon: group.mempeak        33864KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.074s
ramon: loadavg              1.00
