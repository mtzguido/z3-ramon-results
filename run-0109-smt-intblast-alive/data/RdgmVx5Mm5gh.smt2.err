ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:18:42 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41605 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1255
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/RdgmVx5Mm5gh.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2962409
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   3800   2319  1216/1093/91      96/7     3   13   19.17)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&100
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&100
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&100
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 49 := 50 << 1
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&100
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 1 := 50 << 1
(smt.stats    1    202   5190   4021  2070/1863/99     190/8     6   16   19.27)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&92
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&92
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&92
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&92
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&92
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&92
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&92
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&92
(smt.stats    2    313   6100   6426  2317/2089/124     300/23    10   22   19.48)
(smt.stats    3    414   9351   8753  2344/2112/124     403/23    10   22   19.58)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&70368744177661
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&11
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&11
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&11
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&16
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&32
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&32
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&64
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&64
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&24
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&64
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 70368744177662&128
(smt.stats    4    540  10142  11123  2441/2210/188     455/44    13   55   19.82)
(smt.stats    5    662  10898  12573  2585/2210/189     611/45    13   55   20.11)
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    763  11711  13966  2819/2403/189     796/47    14   56   20.30)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&70368744192898
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&70368744192898
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 1&70368744192898
band: (band[51] (if (= #120 50) 1 (if #564 3 #706)) (shl[51] (bv2int %0) (+ 51 #709))) 1 := 1&70368744192898
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&70368744192898
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1 := 1&70368744192898
(smt.stats    7    874  12859  16442  3025/2602/190     966/52    14   56   20.39)
(smt.stats    8    996  14030  21300  3034/2791/193    1451/68    15   57   20.39)
(smt.stats    9   1130  19482  31040  3052/2814/195    1608/235    16   61   20.50)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 2251799813685202&70368744186375
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 2251799813685202&70368744186375
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 2251799813685202&70368744186373
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 2251799813685202&70368744186373
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 2251799813685202&70368744186373
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 2251799813685202&70368744186373
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 2251799813685202&70368744186373
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 512 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 512 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 512 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 25088 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 25088 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 512 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 512 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 7680 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 512 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 512 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&70368744186368
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 70368744178176 := 2251799813685202&70368744186368
(smt.stats   10   1231  22236  38423  3126/2859/218    1815/306    18   65   20.60)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 70368744178176 := 2251799813685202&70368744186368
(smt.stats   11   1342  22632  39229  3197/2937/248    1954/308    18   65   20.79)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&70368744177536
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&70368744177408
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&70368744177408
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&70368744177152
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&25088
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&25088
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8704 := 2251799813685202&41472
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1464  24308  46744  3609/3369/285    2354/492    20   82   20.89)
(smt.stats   13   1598  28398  63741  3651/3411/286    2533/492    20   82   21.02)
(smt.stats   14   1745  33851  87636  3662/3423/289    2681/643    21  109   21.02)
(smt.stats   15   1846  37429 102545  3707/3458/290    2830/653    22  115   21.02)
(smt.stats   16   1957  39840 115355  3752/3476/292    2975/699    24  117   21.12)
ramon: poll                 wall=1.000s usage=0.906s mem=22324KiB load=0.91 rootload=0.89
(smt.stats   17   2079  41578 127470  3898/3505/292    3192/702    24  117   21.12)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 6 := 281474976710650&281474976749569
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 4 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 16 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 32 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 64 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 256 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 256 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 252 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 248 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 240 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 32 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 64 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 124 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 8 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 16 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 32 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 64 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 28 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 24 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 16 := 281474976710650&281474976748545
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976745473
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976764033
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976764289
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976764033
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976764289
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976764289
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976764033
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 128 := 281474976710650&281474976764033
(smt.stats   18   2213  43748 138020  4180/3927/360    3483/778    26  130   21.51)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488392320 := 281474976710650&281474976765057
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488392320 := 281474976710650&281474976765057
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488425088 := 281474976710650&281474976765057
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488425088 := 281474976710650&281474976765057
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488425088 := 281474976710650&281474976765057
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488457856 := 281474976710650&281474976765057
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488457856 := 281474976710650&281474976765057
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488458880 := 281474976710650&281474976765057
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488458880 := 281474976710650&281474976765057
(smt.stats   19   2360  46244 148148  4398/3976/376    3896/822    27  138   21.79)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488998529 := 281474976710650&140737489010817
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737489010688 := 281474976710650&140737489010688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 29414135066918912 := 2533274790395850 << 47
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737489010688 := 281474976710650&140737489010688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 29414135066918912 := 2392537302696000 << 47
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737489010688 := 281474976710650&140737489010688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 29414135066918912 := 4503599627369466 << 47
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737489010688 := 281474976710650&140737489010688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 29414135066918912 := 4503599627369874 << 47
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737489010688 := 281474976710650&140737489010688
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 29414135066918912 := 4503599627369874 << 47
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710650&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 958 := 1266637398212688 << 48
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710650&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 958 := 1266637398212688 << 48
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710650&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 956 := 1266637398212688 << 48
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 0 := 281474976710650&0
shl: (shl[51] (bv2int %0) (+ 51 (* 2251799813685247 #116))) 4 := 2251799811457104 << 48
(smt.stats   20   2521  48959 158894  4668/4210/376    4678/830    27  138   22.09)
(smt.stats   21   2622  50451 164351  4785/4484/391    4850/995    28  141   22.28)
(smt.stats   22   2733  53309 178746  4817/4518/391    5028/1000    28  141   22.60)
(smt.stats   23   2855  56679 192143  5001/4679/391    5227/1102    29  141   22.60)
(smt.stats   24   2989  59654 208165  5027/4705/395    5798/1157    30  145   22.79)
(smt.stats   25   3136  66645 257045  5047/4721/396    6024/1316    31  150   22.90)
(smt.stats   26   3297  73567 295754  5062/4736/398    6384/1348    33  161   22.90)
(smt.stats   27   3474  81179 346933  5093/4765/400    6716/1436    35  177   23.00)
ramon: poll                 wall=2.000s usage=1.902s mem=24328KiB load=1.00 rootload=0.98
(smt.stats   28   3575  87752 362310  5095/4767/400    6860/1436    35  177   23.10)
(smt.stats   29   3686  93595 378636  5097/4769/400    7155/1456    36  180   23.10)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   30   3808 100377 405481  5114/4786/401    7586/1617    37  182   23.21)
(smt.stats   31   3942 105156 430716  5125/4789/401    7925/1618    37  182   23.21)
(smt.stats   32   4089 111351 469465  5138/4806/401    8329/1618    37  182   23.32)
(smt.stats   33   4250 117178 503235  5261/4879/403    8771/1807    38  182   23.41)
(smt.stats   34   4427 124584 545468  5365/5037/407    9418/1909    40  192   23.70)
ramon: poll                 wall=3.000s usage=2.894s mem=25208KiB load=0.99 rootload=0.99
(smt.stats   35   4621 131567 583001  5402/5050/407   10560/1912    40  192   23.89)
(smt.stats   36   4722 135953 603931  5453/5092/407   10956/2131    41  193   23.89)
(smt.stats   37   4833 139294 619641  5561/5129/407   11351/2133    41  193   24.01)
(smt.stats   38   4955 142594 636218  5630/5302/410   12118/2168    42  205   24.21)
(smt.delete-inactive-clauses  :num-deleted-clauses 411)
(smt.stats   39   5089 146609 651437  5740/5313/410   11998/2172    42  205   24.30)
ramon: poll                 wall=4.000s usage=3.894s mem=25944KiB load=1.00 rootload=1.00
(smt.stats   40   5236 151895 676433  5917/5428/410   12444/2373    43  218   24.40)
(smt.stats   41   5397 159043 710576  6092/5712/412   13627/2427    45  233   24.59)
(smt.stats   42   5574 170440 775033  6117/5788/413   14192/2427    45  233   24.84)
(smt.stats   43   5768 176078 816021  6145/5817/414   15039/2577    46  244   24.84)
(smt.stats   44   5981 181946 848228  6169/5841/416   15752/2711    47  255   24.94)
ramon: poll                 wall=5.002s usage=4.888s mem=26452KiB load=0.99 rootload=1.00
(smt.stats   45   6082 185160 859243  6171/5841/416   16042/2712    47  255   25.03)
(smt.stats   46   6193 190774 880593  6244/5859/416   16504/2718    47  255   25.03)
(smt.stats   47   6315 196649 907923  6303/5943/416   16802/2977    48  268   25.03)
(smt.stats   48   6449 201609 937952  6431/6004/416   17375/2984    48  268   25.13)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&65536
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&63488
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&63488
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&63488
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&63488
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&63488
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&63488
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&61440
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 18403959877249593344 := 4503599627370076 << 48
(smt.stats   49   6596 205484 954440  6531/6120/416   17776/2991    48  268   25.22)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&61440
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 18444492273895927808 := 4503599627370382 << 48
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 61440 := 562949953421300&61440
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 50 #885 #887) 64)) 18430981475013816320 := 4503599627370382 << 48
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   50   6757 208202 965910  6599/6217/436   18045/3072    49  272   25.32)
(smt.stats   51   6934 214088 988298  6625/6292/438   18340/3086    50  293   25.42)
ramon: poll                 wall=6.000s usage=5.882s mem=26936KiB load=1.00 rootload=0.99
(smt.stats   52   7128 221060 1029432  6679/6340/443   19203/3088    50  293   25.51)
(smt.stats   53   7341 228139 1060581  6793/6383/444   19839/3228    51  327   25.72)
(smt.stats   54   7575 233920 1089254  6955/6552/445   20649/3269    52  329   25.82)
ramon: poll                 wall=7.000s usage=6.880s mem=27468KiB load=1.00 rootload=0.99
(smt.stats   55   7676 238001 1106259  7025/6629/445   21117/3275    52  329   25.91)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   56   7787 240595 1118334  7085/6748/446   21617/3357    53  332   25.91)
(smt.stats   57   7909 242658 1130232  7153/6771/446   22097/3358    53  332   26.01)
(smt.stats   58   8043 247788 1158211  7176/6837/449   22770/3358    53  332   26.10)
(smt.stats   59   8190 253309 1189620  7208/6847/449   23731/3532    54  341   26.20)
ramon: poll                 wall=8.000s usage=7.880s mem=27980KiB load=1.00 rootload=1.00
(smt.stats   60   8351 258025 1198816  7357/6878/449   24065/3538    54  341   26.39)
(smt.stats   61   8528 263054 1226483  7583/7199/450   24682/3788    55  347   26.49)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 140737488355584 := 281474976710650&1688849860263936
ramon: poll                 wall=9.000s usage=8.880s mem=28236KiB load=1.00 rootload=1.00
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 281474976679936 := 281474976710650&1688849860263936
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 281474976679936 := 281474976710650&1688849860263936
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 281474976679936 := 281474976710650&1688849860263936
(smt.stats   62   8722 269307 1248057  7792/7287/451   25246/3791    55  347   26.58)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 281474976702464 := 281474976710650&1688849860263936
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 281474976694272 := 281474976710650&1688849860263936
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 281474976677888 := 281474976710650&1688849860263936
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 281474976677888 := 281474976710650&1688849860263936
(smt.stats   63   8935 274300 1269736  8067/7472/451   25738/3796    55  347   26.85)
(smt.stats   64   9169 289073 1311424  8141/7775/461   26852/3975    56  353   26.94)
ramon: poll                 wall=10.000s usage=9.880s mem=28748KiB load=1.00 rootload=1.00
(smt.stats   65   9426 302654 1390246  8411/8072/463   27765/4361    57  382   27.26)
(smt.stats   66   9527 305806 1407102  8427/8088/463   28067/4361    57  382   27.37)
(smt.stats   67   9638 309962 1446614  8436/8093/463   28328/4361    57  382   27.37)
(smt.stats   68   9760 316657 1484876  8472/8103/464   28776/4530    58  418   27.59)
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1794 := 16383&2047
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1794 := 16383&2047
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1795 := 16383&2047
band: (band[51] (if (or #721 #722 #723 #724 #725 #726 #727 #728 #729 #730 #731 #732 #733) 0 (if #734 1 #834)) (shl[64] (* 2 #114) (mod #888 64))) 1799 := 16383&2047
(smt.stats   69   9895 321228 1512453  8563/8157/464   29276/4534    58  418   27.69)
ramon: poll                 wall=11.000s usage=10.879s mem=29320KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 681)
(smt.stats   70  10042 326615 1554656  8624/8278/470   29161/4629    59  447   27.69)
(smt.stats   71  10203 334293 1610135  8703/8291/470   29508/4638    59  447   27.78)
(smt.stats   72  10380 338306 1636324  8927/8418/470   29829/4639    59  447   27.88)
(smt.stats   73  10574 345627 1683050  8985/8639/471   30349/4839    60  474   27.88)
ramon: poll                 wall=12.000s usage=11.871s mem=29960KiB load=0.99 rootload=0.99
(smt.stats   74  10787 356713 1729425  9106/8714/472   30828/4885    61  474   27.97)
(smt.stats   75  11021 364892 1759739  9155/8816/473   31504/4885    61  474   28.07)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   76  11278 375583 1813800  9306/8877/474   32293/5014    62  493   28.16)
(smt.stats   77  11560 385011 1863984  9394/9026/475   33326/5106    63  497   28.26)
(smt.stats   78  11661 389519 1886150  9480/9076/475   33579/5109    63  497   28.26)
ramon: poll                 wall=13.000s usage=12.871s mem=29960KiB load=1.00 rootload=1.00
(smt.stats   79  11772 394777 1913348  9597/9163/475   33944/5215    64  499   28.35)
(smt.stats   80  11894 399263 1936718  9702/9286/475   34209/5215    64  499   28.35)
(smt.stats   81  12028 403332 1961438  9778/9429/475   34698/5215    64  499   28.35)
(smt.stats   82  12175 409134 1978644  9895/9453/475   35017/5218    64  499   28.59)
(smt.stats   83  12336 413658 2002213 10086/9580/475   35516/5221    64  499   28.59)
ramon: poll                 wall=14.000s usage=13.871s mem=30216KiB load=1.00 rootload=1.00
(smt.stats   84  12513 420380 2034086 10113/9771/475   36319/5221    64  499   28.68)
(smt.stats   85  12707 426855 2066408 10272/9851/477   37055/5513    65  499   28.78)
(smt.stats   86  12920 431502 2096682 10441/9962/477   37975/5514    65  499   28.98)
ramon: poll                 wall=15.000s usage=14.871s mem=30728KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   87  13154 440136 2125624 10465/10126/477   38548/5514    65  499   29.07)
(smt.stats   88  13411 450778 2182782 10577/10128/477   39785/5622    66  503   29.17)
(smt.stats   89  13693 463734 2250309 10616/10250/477   40695/5623    66  503   29.26)
ramon: poll                 wall=16.000s usage=15.871s mem=31096KiB load=1.00 rootload=1.00
(smt.stats   90  14003 475489 2313318 10699/10288/479   41952/5801    67  504   29.57)
(smt.stats   91  14104 479967 2331954 10716/10377/479   42281/5801    67  504   29.66)
(smt.stats   92  14215 485034 2374037 10737/10389/479   42623/5985    68  504   29.66)
(smt.stats   93  14337 488521 2384203 10802/10400/479   42815/5987    68  504   29.66)
(smt.stats   94  14471 491510 2402662 10896/10557/480   43724/5987    68  504   29.85)
ramon: poll                 wall=17.000s usage=16.858s mem=31588KiB load=0.99 rootload=0.99
(smt.stats   95  14618 495596 2419886 10907/10567/480   44737/5987    68  504   29.85)
(smt.stats   96  14779 500531 2458453 10965/10613/483   45606/6317    69  507   29.95)
(smt.stats   97  14956 507143 2504952 11036/10697/488   46089/6322    69  507   30.05)
(smt.delete-inactive-clauses  :num-deleted-clauses 334)
(smt.stats   98  15150 514424 2535671 11084/10706/488   45940/6529    70  633   30.14)
(smt.stats   99  15364 522152 2590167 11247/10770/488   46541/6530    70  633   30.24)
ramon: poll                 wall=18.000s usage=17.854s mem=31952KiB load=1.00 rootload=1.00
(smt.stats  100  15598 528618 2636745 11469/10951/488   47674/6532    70  633   30.33)
ramon: poll                 wall=19.000s usage=18.854s mem=32208KiB load=1.00 rootload=1.00
(smt.stats  101  15855 536237 2688435 11785/11161/489   48348/6598    71  635   30.43)
(smt.stats  102  16137 544555 2740292 12038/11498/489   49559/6601    71  635   30.62)
ramon: poll                 wall=20.000s usage=19.854s mem=32464KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:19:03 2024
ramon: root.execname        z3
ramon: root.utime           19.900s
ramon: root.stime           0.030s
ramon: group.total          19.940s
ramon: group.utime          19.908s
ramon: group.stime          0.032s
ramon: group.mempeak        34532KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.087s
ramon: loadavg              0.99
