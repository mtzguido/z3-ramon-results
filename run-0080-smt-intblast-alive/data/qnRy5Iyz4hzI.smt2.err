ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:02:59 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24634 MiB
ramon: sys.mem.avail        61750 MiB
ramon: sys.nprocs           1393
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/qnRy5Iyz4hzI.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             162591
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4106    638  1187/1067/89     101/1     2   13   19.08)
(smt.stats    1    202   7387   1961  1800/1624/99     170/13     7   17   19.27)
(smt.stats    2    313   9283   4798  2262/2042/105     247/14     9   17   19.46)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 83 := 2147483647&83
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 83 := 83 << 32
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 83 := 2147483647&83
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 83 := 83 << 32
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 185 := 2147483647&185
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 185 := 185 << 32
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 2147483647 := 2147483647&4294967327
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 2147483584 := 2147483647&4294967327
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 134 := 2147483647&134
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 134 := 134 << 32
(smt.stats    3    414  10851   6286  2324/2064/116     337/18    12   31   19.56)
(smt.stats    4    525  13186   7777  2389/2157/130     434/21    13   44   19.66)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 51 := 562949953421311&51
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 2251799813685299 := 50 << 50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 49 := 562949953421311&49
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 54043195528446001 := 50 << 50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 562949953421311&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 50 << 50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 562949953421311&0
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 1 := 50 << 50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&4294967297
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&4294967296
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&4294967295
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&52
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&50
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&53
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&52
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 16 := 281474976710655&56
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 9 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 8 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&128
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&64
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&128
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&256
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&256
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&512
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&1024
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&1024
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&2048
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&1024
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&2048
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&4096
(smt.stats    5    647  15408  10362  2525/2222/199     558/29    15   60   20.16)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&132
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&132
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&144
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&144
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&144
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 281474976710655&144
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 40 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 32 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 32 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 32 := 281474976710655&160
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 160 := 281474976710655&162
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 2 := 281474976710655&10
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  16689  13771  2599/2352/314     727/62    18   88   20.45)
(smt.stats    7    859  17233  14730  2777/2366/314     954/73    18   88   20.83)
(smt.stats    8    981  17632  15539  2955/2589/314    1215/78    18   88   21.02)
(smt.stats    9   1115  22686  29111  3104/2828/314    1515/78    18   88   21.02)
(smt.stats   10   1216  24430  37286  3254/2872/314    1911/86    18   88   21.11)
(smt.stats   11   1327  26545  44718  3353/3106/318    2661/425    19   88   21.21)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  30882  49908  3375/3122/318    2986/426    19   88   21.32)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&40960
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 83316593106395136 := 7 << 7
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&40960
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 81064793292709888 := 7 << 7
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&40960
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 81064793292709888 := 7 << 7
(smt.stats   13   1583  34141  60487  3432/3161/331    3258/586    21  138   21.32)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 0 := 7 << 7
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
shl: (shl[51] (bv2int %0) (mod (bv2int %0) 51)) 0 := 7 << 7
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 1 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 2 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 60 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 56 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 48 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 32 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 2 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 1 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 16 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 16 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 32 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 32 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 2 := 63&896
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 16 := 63&896
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 32 := 63&896
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 4 := 63&896
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 8 := 896&63
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 63&896
band: (band[51] (shl[51] (bv2int %0) (mod #110 51)) (if (= #615 50) 0 (if #617 1 #757))) 4 := 896&63
(smt.stats   14   1730  35350  64714  3538/3299/402    3492/749    22  153   22.09)
(smt.stats   15   1831  35586  67835  3584/3333/403    3658/765    23  154   22.21)
(smt.stats   16   1942  40526  79353  3701/3424/406    4082/827    24  169   22.50)
(smt.stats   17   2064  46196  84594  3752/3464/406    4406/827    24  169   22.60)
(smt.stats   18   2198  55966 114231  3784/3496/407    4593/1024    25  171   22.80)
ramon: poll                 wall=1.000s usage=0.937s mem=24228KiB load=0.94 rootload=0.92
(smt.stats   19   2345  61176 119794  3919/3501/407    4848/1033    25  171   23.00)
(smt.stats   20   2506  66292 135131  3985/3699/415    5446/1056    26  175   23.18)
(smt.stats   21   2607  69480 144746  4075/3709/415    5704/1059    26  175   23.28)
ramon: poll                 wall=2.000s usage=1.937s mem=24756KiB load=1.00 rootload=1.00
(smt.stats   22   2718  72866 154020  4145/3797/416    5985/1153    27  180   23.28)
(smt.stats   23   2840  78812 171771  4227/3887/416    6246/1163    28  180   23.37)
(smt.stats   24   2974  82346 184172  4284/3954/416    6707/1165    28  180   23.47)
(smt.stats   25   3121  87578 198528  4304/4008/416    7269/1165    28  180   23.47)
(smt.stats   26   3282  93758 226014  4319/4031/416    7658/1165    28  180   23.57)
(smt.stats   27   3459  99362 251629  4361/4075/419    8520/1381    29  180   23.67)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   28   3560 101950 260968  4365/4077/420    9013/1381    29  180   23.67)
ramon: poll                 wall=3.000s usage=2.937s mem=25040KiB load=1.00 rootload=1.00
(smt.stats   29   3671 104826 275915  4532/4089/420    9350/1383    29  180   23.76)
(smt.stats   30   3793 110680 302538  4549/4263/423    9578/1479    31  260   23.76)
(smt.stats   31   3927 114148 321662  4722/4436/424   10028/1493    32  268   23.96)
(smt.stats   32   4074 121600 353618  4728/4440/424   10503/1495    32  268   24.06)
(smt.stats   33   4235 125034 367036  4927/4621/426   10886/1662    33  282   24.15)
(smt.stats   34   4412 133325 380661  4945/4659/426   11143/1662    33  282   24.32)
(smt.stats   35   4606 145962 403899  4952/4666/426   11428/1662    33  282   24.32)
ramon: poll                 wall=4.000s usage=3.937s mem=25660KiB load=1.00 rootload=1.00
(smt.stats   36   4707 154510 457193  4955/4669/426   11609/1662    33  282   24.32)
(smt.stats   37   4818 158406 475434  5033/4669/426   11843/1663    33  282   24.41)
(smt.stats   38   4940 161922 484984  5155/4792/426   12120/1663    33  282   24.41)
(smt.delete-inactive-clauses  :num-deleted-clauses 175)
(smt.stats   39   5074 167811 509112  5252/4936/426   12284/1668    33  282   24.60)
(smt.stats   40   5221 173095 525252  5365/4991/426   12575/1672    33  282   24.60)
ramon: poll                 wall=5.000s usage=4.936s mem=26228KiB load=1.00 rootload=1.00
(smt.stats   41   5382 179981 546075  5444/5107/429   12897/1890    34  285   24.70)
(smt.stats   42   5559 182839 552504  5743/5261/429   13279/1895    34  285   24.89)
(smt.stats   43   5753 185075 556311  5964/5493/429   13507/1933    35  299   24.89)
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 67553994410561536 := 1446957302154248 << 2
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 67553994410561536 := 1446957302154248 << 2
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 67553994410561536 := 1446957302154248 << 2
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 69805794224246784 := 549755813889032 << 2
band: (band[51] (if (or #773 #774 #775 #776 #777 #778 #779 #780 #781 #782 #783 #784 #785 #786 #787) 0 (if #788 1 #884)) (shl[64] (bv2int %0) (mod #941 64))) 0 := 1&4096
shl: (shl[64] (bv2int %0) (mod (+ #110 #940) 64)) 69805794224246784 := 549755813889032 << 2
(smt.stats   44   5966 188877 573966  6049/5744/435   13944/1934    35  299   24.98)
(smt.stats   45   6067 192843 586695  6083/5753/435   14165/1936    35  299   25.08)
ramon: poll                 wall=6.000s usage=5.936s mem=26496KiB load=1.00 rootload=1.00
(smt.stats   46   6178 196600 601807  6158/5782/435   14362/2028    36  301   25.17)
(smt.stats   47   6300 200976 630817  6189/5853/436   14498/2028    36  301   25.17)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   48   6434 203991 642970  6314/5889/436   14905/2036    37  306   25.27)
(smt.stats   49   6581 210322 672596  6324/6017/437   15233/2036    37  306   25.27)
(smt.stats   50   6742 217864 731606  6326/6017/438   15609/2101    38  311   25.27)
(smt.stats   51   6919 226082 775741  6341/6034/441   16159/2150    39  322   25.36)
ramon: poll                 wall=7.000s usage=6.936s mem=26868KiB load=1.00 rootload=1.00
(smt.stats   52   7113 233524 809586  6401/6040/441   16942/2203    40  337   25.56)
(smt.stats   53   7326 242449 859266  6663/6103/441   17680/2210    40  337   25.75)
ramon: poll                 wall=8.000s usage=7.936s mem=27284KiB load=1.00 rootload=0.99
(smt.stats   54   7560 252342 916309  6855/6385/441   18572/2213    40  337   25.85)
(smt.stats   55   7661 259982 951964  6934/6549/441   18987/2219    40  337   25.95)
(smt.stats   56   7772 265573 975245  7106/6632/441   19476/2222    40  337   26.04)
ramon: poll                 wall=9.000s usage=8.936s mem=27480KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   57   7894 271150 1000750  7258/6815/442   19965/2608    41  339   26.14)
(smt.stats   58   8028 273665 1010107  7291/6969/442   20387/2608    41  339   26.23)
(smt.stats   59   8175 276921 1019886  7509/6988/442   20700/2614    41  339   26.33)
(smt.stats   60   8336 282391 1050274  7727/7247/442   21448/2616    41  339   26.42)
(smt.stats   61   8513 286351 1069901  7777/7470/445   23149/2735    42  354   26.78)
ramon: poll                 wall=10.000s usage=9.935s mem=28276KiB load=1.00 rootload=0.99
(smt.stats   62   8707 293307 1112769  7798/7491/448   24543/2945    43  386   26.88)
(smt.stats   63   8920 305201 1235862  7815/7502/448   26061/2945    43  386   27.07)
(smt.stats   64   9154 312913 1282449  7893/7524/448   26781/2950    43  386   27.16)
ramon: poll                 wall=11.000s usage=10.935s mem=28836KiB load=1.00 rootload=1.00
(smt.stats   65   9411 321341 1342629  8447/7860/449   27598/3215    44  390   27.62)
(smt.stats   66   9512 322792 1363625  8453/8141/449   28338/3216    44  390   27.71)
(smt.stats   67   9623 325195 1380738  8545/8146/449   28573/3217    44  390   27.81)
ramon: poll                 wall=12.000s usage=11.935s mem=29256KiB load=1.00 rootload=1.00
(smt.stats   68   9745 328561 1405550  8635/8280/449   29542/3218    44  390   27.90)
(smt.stats   69   9879 338408 1469643  8648/8326/449   30136/3218    44  390   27.90)
(smt.delete-inactive-clauses  :num-deleted-clauses 17)
(smt.stats   70  10026 342429 1495114  8656/8338/449   30732/3218    44  390   27.99)
(smt.stats   71  10187 350315 1533328  8868/8338/449   31767/3221    44  390   28.18)
ramon: poll                 wall=13.000s usage=12.935s mem=29648KiB load=1.00 rootload=1.00
(smt.stats   72  10364 357245 1578105  9136/8600/449   32519/3221    44  390   28.28)
(smt.stats   73  10558 363797 1613477  9195/8838/449   33107/3222    44  390   28.37)
ramon: poll                 wall=14.000s usage=13.934s mem=29992KiB load=1.00 rootload=1.00
(smt.stats   74  10771 373718 1668878  9485/8882/449   34080/3223    44  390   28.47)
(smt.stats   75  11005 381092 1720445  9736/9207/450   35758/3777    45  394   28.76)
ramon: poll                 wall=15.000s usage=14.934s mem=30412KiB load=1.00 rootload=1.00
(smt.stats   76  11262 389357 1779015 10135/9453/450   36983/3779    45  394   28.85)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   77  11544 399777 1863955 10260/9865/450   38599/3780    45  394   29.24)
ramon: poll                 wall=16.000s usage=15.934s mem=31024KiB load=1.00 rootload=1.00
(smt.stats   78  11645 402507 1877947 10368/9951/450   39280/3786    45  394   29.24)
(smt.stats   79  11756 405741 1895577 10505/10070/450   40006/3790    45  394   29.34)
(smt.stats   80  11878 410340 1929553 10675/10219/450   40958/3793    45  394   29.53)
(smt.stats   81  12012 413200 1953092 10765/10416/451   41856/4476    46  400   29.79)
ramon: poll                 wall=17.000s usage=16.934s mem=31424KiB load=1.00 rootload=1.00
(smt.stats   82  12159 418695 2010307 10959/10471/451   42995/4480    46  400   29.88)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   83  12320 423769 2066779 11298/10663/451   43974/4482    46  400   30.08)
ramon: poll                 wall=18.000s usage=17.934s mem=31608KiB load=1.00 rootload=1.00
(smt.stats   84  12497 427854 2105489 11410/11011/451   45636/4486    46  400   30.17)
(smt.stats   85  12691 436913 2144813 11486/11111/452   46738/4737    47  404   30.29)
ramon: poll                 wall=19.000s usage=18.933s mem=31972KiB load=1.00 rootload=1.00
(smt.stats   86  12904 445413 2224047 11794/11194/452   48510/4747    47  404   30.58)
(smt.stats   87  13138 452019 2264175 11937/11526/453   50133/4844    48  406   30.87)
ramon: poll                 wall=20.000s usage=19.933s mem=32480KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:03:19 2024
ramon: root.execname        z3
ramon: root.utime           19.960s
ramon: root.stime           0.030s
ramon: group.total          20.001s
ramon: group.utime          19.969s
ramon: group.stime          0.032s
ramon: group.mempeak        32996KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.068s
ramon: loadavg              1.00
