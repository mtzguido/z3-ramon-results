ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:18:06 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41595 MiB
ramon: sys.mem.avail        61711 MiB
ramon: sys.nprocs           1249
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/RJMsr6f2NQ5q.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2960282
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&1
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&1
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&2
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&4
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&4
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&8
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&16
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&32
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&16
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&32
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&16
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&32
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&64
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&64
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&64
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&128
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&256
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&256
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&512
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&512
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&512
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&1024
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&1024
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&2048
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&1024
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&2048
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&4096
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&8192
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&16384
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&1024
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&2048
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&4096
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&8192
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&16384
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&32768
(smt.stats    0    101   4872   1036  1273/1020/101     112/13     7   15   19.54)
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 575 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 574 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 572 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 128 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 192 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 383 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 382 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 380 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 320 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 504 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 496 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 448 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 352 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 320 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 320 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 224 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 192 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 192 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 96 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&576
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&1088
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&1088
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&1088
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&1088
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&2112
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&2112
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&2112
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&8256
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&32832
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&65600
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&65600
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&131136
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&65600
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&65600
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&32832
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&131136
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&262208
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&524352
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&524352
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 64 := 137438953471&524352
(smt.stats    1    202   6712   2431  2098/1760/267     335/62     9   49   20.13)
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 127 := 137438953471&32832
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 126 := 137438953471&32832
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 126 := 137438953471&32832
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 125 := 137438953471&32832
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 125 := 137438953471&32833
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 125 := 137438953471&32773
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 125 := 137438953471&32781
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 125 := 137438953471&32797
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 125 := 137438953471&32829
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 125 := 137438953471&32893
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 125 := 137438953471&32893
(smt.stats    2    313  10197   6516  2617/2393/370     538/177    12   72   20.34)
(smt.stats    3    414  13274   9999  2742/2520/381     706/232    15   76   20.45)
(smt.stats    4    525  15192  12522  2758/2537/387     902/293    18   98   20.55)
(smt.stats    5    647  17397  15006  2776/2545/387    1021/320    19   99   20.69)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  22100  19106  2833/2607/388    1148/328    20  100   20.79)
(smt.stats    7    859  23344  20208  2934/2673/388    1262/334    20  100   21.46)
(smt.stats    8    981  23800  21264  3271/2976/388    1394/334    20  100   21.46)
(smt.stats    9   1115  28909  29494  3321/3091/392    1650/431    22  107   21.46)
(smt.stats   10   1216  31585  34319  3391/3132/393    1764/450    23  112   21.55)
ramon: poll                 wall=1.000s usage=0.890s mem=22820KiB load=0.89 rootload=0.87
(smt.stats   11   1327  34622  40148  3427/3202/394    1906/487    24  117   21.55)
(smt.stats   12   1449  38963  45743  3466/3243/399    2093/530    25  119   21.55)
(smt.stats   13   1583  42067  53246  3504/3246/400    2232/547    26  130   21.68)
(smt.stats   14   1730  49220  63291  3534/3311/404    2372/556    28  146   21.68)
(smt.stats   15   1831  54933  73014  3537/3314/404    2479/563    29  147   21.78)
(smt.stats   16   1942  59628  83532  3550/3327/405    2593/575    30  152   21.78)
(smt.stats   17   2064  63332  91185  3558/3328/406    2732/585    31  160   21.78)
(smt.stats   18   2198  68970 104612  3572/3346/407    2915/640    32  167   21.87)
(smt.stats   19   2345  76293 122540  3586/3363/407    3094/640    32  167   21.87)
(smt.stats   20   2506  80961 138342  3595/3368/411    3321/740    34  179   21.87)
(smt.stats   21   2607  84857 148134  3604/3378/411    3424/740    34  179   21.97)
(smt.stats   22   2718  86890 155934  3608/3386/412    3526/739    35  189   21.97)
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8 := 127&8320
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8 := 127&8320
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8 := 127&8360
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8 := 127&8328
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093030536 := 8796093030536 << 6
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8 := 127&8328
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093030536 := 8796093030536 << 6
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8 := 127&8328
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093030536 := 8796093030536 << 6
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8 := 127&8328
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093030536 := 8796093030538 << 6
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8 := 127&8328
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093030536 := 8796093030538 << 6
(smt.stats   23   2840  89547 165208  3644/3418/418    3663/751    36  191   21.97)
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 8 := 255&8328
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 128 := 255&8328
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 136 := 255&8328
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093030536 := 8796093030598 << 7
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 136 := 255&8328
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093030536 := 8192 << 7
(smt.stats   24   2974  92110 174196  3754/3525/428    3830/781    37  199   21.97)
(smt.stats   25   3121  94764 182974  3854/3554/428    3973/785    37  199   22.09)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   26   3282  97455 193726  3925/3659/428    4132/797    38  207   22.22)
ramon: poll                 wall=2.000s usage=1.890s mem=23788KiB load=1.00 rootload=0.99
(smt.stats   27   3459  99638 204027  4003/3727/428    4323/800    38  207   22.22)
(smt.stats   28   3560 103550 211107  4015/3785/429    4450/821    39  214   22.22)
(smt.stats   29   3671 106823 217397  4083/3790/429    4584/828    39  214   22.22)
(smt.stats   30   3793 110785 227063  4139/3890/429    4735/830    39  214   22.22)
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 1 := 2199023255551&524289
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 1 := 2199023255551&524289
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 2199023255551&524289
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 128 := 2199023255551&128
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 128 := 4398046511100 << 40
(smt.stats   31   3927 113596 235937  4280/3976/431    4970/900    40  219   22.32)
(smt.stats   32   4074 116782 241677  4335/4086/442    5124/902    40  219   22.32)
(smt.stats   33   4235 119223 258494  4380/4108/442    5312/955    41  231   22.53)
(smt.stats   34   4412 122482 274203  4417/4163/442    5528/956    41  231   22.53)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   35   4606 125398 285667  4542/4193/444    5811/1024    42  236   22.63)
(smt.stats   36   4707 126221 291185  4856/4481/445    6088/1028    42  236   22.73)
(smt.stats   37   4818 128362 295965  4973/4717/445    6326/1073    43  243   22.83)
(smt.stats   38   4940 130675 311856  5012/4750/445    6702/1073    43  243   22.83)
(smt.delete-inactive-clauses  :num-deleted-clauses 8)
(smt.stats   39   5074 134003 330424  5055/4771/449    6937/1167    44  244   22.94)
(smt.stats   40   5221 139418 352721  5121/4813/449    7142/1218    45  249   22.94)
(smt.stats   41   5382 143262 373214  5205/4892/449    7541/1219    45  249   23.04)
ramon: poll                 wall=3.000s usage=2.889s mem=24236KiB load=1.00 rootload=1.00
(smt.stats   42   5559 147570 395204  5249/4987/450    8223/1523    46  252   23.13)
(smt.stats   43   5753 151952 416884  5344/5085/453    8554/1637    47  256   23.13)
(smt.stats   44   5966 155654 443410  5422/5107/453    8941/1640    47  256   23.25)
(smt.stats   45   6067 157503 458289  5446/5195/453    9092/1641    47  256   23.25)
(smt.stats   46   6178 159426 467188  5497/5205/453    9397/1642    47  256   23.25)
(smt.stats   47   6300 160054 476143  5499/5252/455    9554/1851    48  259   23.35)
(smt.stats   48   6434 161815 490539  5509/5254/456    9824/1853    48  259   23.35)
(smt.stats   49   6581 163178 508380  5516/5265/456    9981/1916    49  277   23.35)
(smt.stats   50   6742 169832 536771  5527/5280/456   10426/1916    49  277   23.35)
ramon: poll                 wall=4.000s usage=3.889s mem=24644KiB load=1.00 rootload=1.00
(smt.stats   51   6919 183344 609135  5532/5285/458   10603/1994    50  283   23.46)
(smt.stats   52   7113 189496 642972  5542/5291/458   10973/1994    50  283   23.46)
(smt.stats   53   7326 197894 691441  5583/5297/458   11961/2029    51  289   23.56)
(smt.stats   54   7560 203661 733697  5750/5471/459   12358/2092    52  290   23.78)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   55   7661 204256 739399  5750/5471/459   12473/2092    52  290   23.78)
(smt.stats   56   7772 207495 753891  5751/5472/460   12680/2167    53  292   23.78)
(smt.stats   57   7894 215136 781192  5751/5472/460   12802/2167    53  292   23.89)
(smt.stats   58   8028 221467 804359  5754/5475/461   13211/2177    54  304   23.89)
(smt.stats   59   8175 228166 833438  5759/5476/461   13448/2177    54  304   23.99)
(smt.stats   60   8336 240297 887449  5762/5483/461   13675/2177    54  304   24.17)
ramon: poll                 wall=5.000s usage=4.888s mem=25588KiB load=1.00 rootload=1.00
(smt.stats   61   8513 245192 916422  5791/5491/462   14395/2347    55  308   24.27)
(smt.stats   62   8707 247489 961647  5900/5549/462   14644/2347    55  308   24.27)
(smt.stats   63   8920 249243 996045  5938/5636/462   14899/2347    55  308   24.38)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   64   9154 253001 1022166  5953/5665/463   15216/2421    56  313   24.38)
(smt.stats   65   9411 264065 1065199  5964/5672/469   15542/2421    56  313   24.38)
(smt.stats   66   9512 264993 1080044  5970/5677/474   15814/2518    57  320   24.48)
(smt.stats   67   9623 267074 1090561  6002/5697/474   15970/2518    57  320   24.60)
(smt.stats   68   9745 271488 1118751  6007/5711/474   16223/2518    57  320   24.60)
(smt.stats   69   9879 277909 1140372  6095/5719/474   16554/2586    58  340   24.69)
(smt.delete-inactive-clauses  :num-deleted-clauses 20)
(smt.stats   70  10026 280196 1153463  6123/5817/474   16774/2589    58  340   24.69)
ramon: poll                 wall=6.000s usage=5.886s mem=26000KiB load=1.00 rootload=1.00
(smt.stats   71  10187 283083 1179497  6144/5835/474   16983/2592    58  340   24.69)
(smt.stats   72  10364 288300 1217408  6198/5863/474   17258/2594    58  340   24.69)
(smt.stats   73  10558 290197 1238382  6204/5912/475   17678/2719    59  346   24.82)
(smt.stats   74  10771 297792 1254215  6211/5918/477   17975/2719    59  346   24.82)
(smt.stats   75  11005 300265 1271185  6240/5948/479   18244/2878    60  362   24.94)
ramon: poll                 wall=7.000s usage=6.886s mem=26440KiB load=1.00 rootload=1.00
(smt.stats   76  11262 308028 1300257  6542/5953/479   19043/2890    60  362   25.13)
(smt.stats   77  11544 312932 1334613  6740/6301/480   19832/2903    60  362   25.33)
(smt.stats   78  11645 317262 1351122  6776/6484/481   20539/3111    61  368   25.33)
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093284352 := 8796093284352 << 9
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093284352 := 8796094590976 << 9
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093284352 := 8796094590974 << 9
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
shl: (shl[64] (* 2 (bv2int %1)) (mod (+ 42 #799 #803) 64)) 8796093284352 := 8796093284354 << 9
(smt.stats   79  11756 321472 1385371  6804/6485/482   20853/3112    61  368   25.47)
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
shl: (shl[43] (bv2int %1) (+ 43 (* 8796093022207 #104))) 4406636445951 := 4406636445952 << 10
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
shl: (shl[43] (bv2int %1) (+ 43 (* 8796093022207 #104))) 262145 := 4406636445952 << 10
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
shl: (shl[43] (bv2int %1) (+ 43 (* 8796093022207 #104))) 4406636445951 := 4406636445952 << 10
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 1023 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 1022 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 1020 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 8 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 8 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 16 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 32 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 64 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 16 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 192 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 16 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 128 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 128 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 128 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 128 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
shl: (shl[43] (bv2int %1) (+ 43 (* 8796093022207 #104))) 1024 := 4406636445952 << 10
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 800 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 800 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 847 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 846 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 846 := 1023&262144
(smt.stats   80  11878 322849 1389328  6986/6519/487   21061/3299    62  392   25.66)
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 68 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 64 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 64 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 16 := 1023&262144
band: (band[43] (if (= #333 63) 1 (if #559 3 #792)) (shl[64] (* 2 #317) (mod #807 64))) 0 := 1023&262144
band: (band[43] (if (= #108 42) 1 (if #582 3 #700)) (shl[43] (bv2int %1) (+ 43 #703))) 16 := 1023&262144
(smt.stats   81  12012 325527 1403464  7061/6719/569   21391/3305    62  392   25.95)
(smt.stats   82  12159 326684 1412797  7141/6810/569   21567/3305    62  392   25.95)
ramon: poll                 wall=8.000s usage=7.886s mem=27900KiB load=1.00 rootload=1.00
(smt.stats   83  12320 331845 1429820  7350/6817/569   21907/3316    62  392   25.95)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   84  12497 334374 1448261  7414/7103/571   22139/3431    63  427   26.08)
(smt.stats   85  12691 337688 1467671  7520/7153/573   22686/3433    63  427   26.27)
(smt.stats   86  12904 342707 1494218  7824/7275/573   23216/3435    63  427   26.37)
(smt.stats   87  13138 351708 1558318  7857/7507/573   23891/3506    64  432   26.46)
ramon: poll                 wall=9.000s usage=8.885s mem=27976KiB load=1.00 rootload=1.00
(smt.stats   88  13395 358612 1636295  8382/7618/573   24735/3522    64  432   26.83)
(smt.stats   89  13677 365848 1702257  8543/8187/573   25266/3523    64  432   26.94)
ramon: poll                 wall=10.000s usage=9.885s mem=28624KiB load=1.00 rootload=1.00
(smt.stats   90  13987 375392 1773438  8636/8296/574   27017/3894    65  441   27.23)
(smt.stats   91  14088 380219 1785706  8709/8298/574   27487/3901    65  441   27.42)
(smt.stats   92  14199 384402 1808422  8815/8385/574   28232/3907    65  441   27.52)
(smt.stats   93  14321 386923 1821923  8888/8520/574   28598/3909    65  441   27.64)
(smt.stats   94  14455 389795 1837893  8913/8563/574   29784/3910    65  441   27.73)
(smt.stats   95  14602 398537 1852933  8919/8579/574   30168/3910    65  441   27.73)
ramon: poll                 wall=11.000s usage=10.885s mem=29296KiB load=1.00 rootload=1.00
(smt.stats   96  14763 405870 1919212  9061/8593/577   31409/4421    66  445   27.93)
(smt.stats   97  14940 409241 1934396  9169/8795/579   31895/4423    66  445   28.03)
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   98  15134 414577 1974821  9215/8826/579   32376/4783    67  466   28.12)
ramon: poll                 wall=12.000s usage=11.884s mem=30304KiB load=1.00 rootload=1.00
(smt.stats   99  15347 422018 2000712  9306/8875/579   33071/4789    67  466   28.32)
(smt.stats  100  15581 429087 2033938  9413/8994/580   33949/4794    67  466   28.54)
(smt.stats  101  15838 436171 2072287  9503/9102/580   34458/5087    68  468   28.72)
ramon: poll                 wall=13.000s usage=12.884s mem=30380KiB load=1.00 rootload=1.00
(smt.stats  102  16120 443246 2123606  9605/9190/582   35783/5090    68  468   28.81)
(smt.stats  103  16430 455313 2225389  9737/9383/584   37396/5382    70  486   29.00)
ramon: poll                 wall=14.000s usage=13.884s mem=30696KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats  104  16770 473621 2373310  9755/9401/586   40088/5382    70  486   29.20)
(smt.stats  105  16871 477974 2392253  9907/9401/586   40346/5721    71  499   29.29)
(smt.stats  106  16982 480837 2412584  9985/9631/587   40869/5721    71  499   29.29)
(smt.stats  107  17104 485616 2443345 10033/9634/587   41183/5728    71  499   29.90)
ramon: poll                 wall=15.000s usage=14.883s mem=31404KiB load=1.00 rootload=0.99
(smt.stats  108  17238 488138 2466333 10133/9720/587   41526/5729    71  499   30.00)
(smt.stats  109  17385 492206 2512537 10247/9814/587   41961/5935    72  505   30.10)
(smt.stats  110  17546 495552 2558277 10304/9903/587   42287/5936    72  505   30.10)
ramon: poll                 wall=16.000s usage=15.883s mem=31676KiB load=1.00 rootload=1.00
(smt.stats  111  17723 500655 2594621 10493/9961/587   42821/5946    72  505   30.20)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats  112  17917 509235 2659697 10592/10237/588   44258/6187    73  515   30.39)
ramon: poll                 wall=17.000s usage=16.883s mem=32124KiB load=1.00 rootload=1.00
(smt.stats  113  18130 515380 2708496 10685/10252/589   45223/6192    73  515   30.68)
ramon: poll                 wall=18.000s usage=17.883s mem=32392KiB load=1.00 rootload=1.00
(smt.stats  114  18364 525358 2819952 11019/10563/591   46510/6320    74  551   30.96)
ramon: poll                 wall=19.000s usage=18.882s mem=32796KiB load=1.00 rootload=1.00
(smt.stats  115  18621 532777 2853840 11250/10746/592   47957/6324    74  551   31.29)
ramon: poll                 wall=20.000s usage=19.882s mem=33036KiB load=1.00 rootload=1.00
ramon: end                  Tue Dec 24 15:18:26 2024
ramon: root.execname        z3
ramon: root.utime           19.930s
ramon: root.stime           0.020s
ramon: group.total          19.962s
ramon: group.utime          19.938s
ramon: group.stime          0.024s
ramon: group.mempeak        33292KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.081s
ramon: loadavg              0.99
