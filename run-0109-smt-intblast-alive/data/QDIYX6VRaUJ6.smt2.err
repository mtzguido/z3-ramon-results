ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Tue Dec 24 15:15:50 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         41567 MiB
ramon: sys.mem.avail        61712 MiB
ramon: sys.nprocs           1256
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/QDIYX6VRaUJ6.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = smt.bv.solver=2
ramon: argv                 6 = tactic.default_tactic=(then simplify propagate-values solve-eqs smt)model_validate=true
ramon: childpid             2952608
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.78)
(smt.stats    0    101   2786    322   703/641/115     106/10    10   18   18.85)
(smt.stats    1    202   3804    886  1302/1124/115     253/13    10   18   18.95)
(smt.stats    2    313   5513   2247  1359/1221/121     420/53    11   21   18.95)
(smt.stats    3    415   7692   3756  1394/1284/126     562/78    14   25   18.95)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 32 := 33&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 33&268419072
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 33 := 32 >>l 18
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 33&268419072
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 33 := 32 >>l 18
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 33&268419072
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 33 := 32 >>l 18
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 1&268419072
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 1 := 524288 >>l 18
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 1&268419072
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 1 := 524288 >>l 18
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 1&268419072
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 1 := 16384 >>l 14
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 1&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 1 := 1&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 1&268419072
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 1 := 16384 >>l 14
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 1&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 1 := 1&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 1&268419072
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 2 := 32767 >>l 14
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 1&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 1 := 1&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 2&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2 := 2&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 3 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 4 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 8 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 4 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 16 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 32 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 64 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 128 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 256 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 512 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 1024 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2048 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 4096 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 8192 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 16384 := 268435455 >>l 14
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 8192 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16383&268419072
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 3072 := 16383&268419072
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 268435439&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 268435439&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 268402687&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 65535&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 268369919&268402688
(smt.stats    4    527   9753   6201  1566/1434/247     757/175    17   55   19.75)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 268304384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 268304384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 4026548224 := 4294967280 >>l 17
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 4026548224 := 4294967280 >>l 17
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 32767&268402688
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 16384 := 268435455 >>l 13
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 32767&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 16384 := 32767&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 16384 := 2147745776 >>l 17
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
lshr: (lshr[28] (bv2int %0) (mod (bv2int %1) 28)) 32768 := 134225919 >>l 13
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 4096 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 4096 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 2 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 4096 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 4096 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 20480&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 4096 := 20480&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 4096 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 3072 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 17408&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 3072 := 17408&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16416&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16416&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16416&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16416&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16416&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16416&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16416&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16416&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16416&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16416&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16416&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2080 := 16416&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16416&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2112 := 16416&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2112 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16448&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2112 := 16448&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16386&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 2 := 16386&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16384&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 1 := 16384&268402688
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16385&268402688
band: (band[28] (lshr[28] (bv2int %0) (mod #107 28)) (if (= #335 27) 18014398375264256 (if #337 9007199187632128 #389))) 1 := 16385&268402688
(smt.stats    5    649  12163   9234  1671/1535/322    1029/236    19   79   19.96)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas          :deletions    )
(smt.stats    6    750  15675  13788  1767/1631/336    1248/274    22   96   20.08)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 24569&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 20470&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 18431&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 18431&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 32766&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 18431&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 32761&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 32761&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 32761&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 32761&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 16386&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 24578&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 24826&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 24694&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 24694&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 0 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 49152 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 81920 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 147456 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 245760 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 81920 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 147456 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 49152 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 262144 := 540672&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 540672&268433408
(smt.stats    7    861  18310  18106  1962/1769/388    1498/300    23  104   20.47)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 278528&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 540672&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 2113536&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 2113536&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 20480 := 2113536&268433408
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 2113536&268433408
(smt.stats    8    984  20467  22986  2036/1872/459    1807/382    25  142   20.66)
(smt.stats    9   1118  25025  30289  2057/1888/461    2114/449    27  157   21.06)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 8192 := 16384&264241152
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 16384 := 16384&264241152
(smt.stats   10   1219  26724  36322  2255/1963/461    2416/450    27  157   21.15)
(smt.stats   11   1330  27730  38057  2381/2120/461    2637/450    27  157   21.36)
(smt.stats   12   1452  29190  41438  2620/2323/461    2963/451    27  157   21.36)
ramon: poll                 wall=1.000s usage=0.991s mem=22644KiB load=0.99 rootload=0.98
(smt.stats   13   1586  33619  56453  2674/2475/464    3868/557    28  165   21.57)
(smt.stats   14   1733  39291  80575  2680/2515/465    4156/719    29  175   21.57)
(smt.stats   15   1834  43054  94705  2711/2539/467    4698/781    30  177   21.69)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   16   1945  45747 108859  2742/2572/469    5015/837    32  194   21.69)
(smt.stats   17   2067  49667 123570  2813/2621/470    5324/898    33  209   21.79)
(smt.stats   18   2201  54974 145006  2824/2661/471    5909/898    33  209   21.88)
(smt.stats   19   2348  59204 164293  2859/2667/472    6379/999    34  211   21.98)
(smt.stats   20   2509  63083 179084  3012/2827/478    6995/1042    35  221   22.19)
ramon: poll                 wall=2.000s usage=1.990s mem=23368KiB load=1.00 rootload=1.00
(smt.stats   21   2610  66771 193168  3101/2844/479    7200/1106    36  250   22.34)
(smt.stats   22   2721  69735 207342  3179/2922/479    7459/1115    36  250   22.34)
(smt.stats   23   2843  72750 216638  3288/3021/479    7737/1158    37  250   22.34)
(smt.stats   24   2977  75172 229235  3320/3135/482    8101/1188    38  258   22.44)
(smt.stats   25   3124  79479 248850  3352/3154/482    8580/1190    38  258   22.54)
(smt.stats   26   3285  84423 270258  3436/3223/491    9354/1262    39  262   22.63)
ramon: poll                 wall=3.000s usage=2.990s mem=24112KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   27   3462  90485 289351  3584/3259/494   10189/1451    40  323   23.20)
(smt.stats   28   3563  93158 307852  3617/3426/495   10764/1632    41  350   23.20)
(smt.stats   29   3674  96756 327017  3685/3480/496   11199/1637    41  350   23.20)
(smt.stats   30   3796 100622 351466  3863/3501/496   11636/1692    42  350   23.32)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6140 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6136 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6140 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6136 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6128 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6112 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6080 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6016 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6128 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6112 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 4096 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6140 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6136 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6128 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6112 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6080 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 6016 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 5888 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 5632 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 5120 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 4096 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 4096 := 20480&234881024
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 8192 := 28672&234881024
(smt.stats   31   3930 104019 377633  4003/3687/496   12165/1695    42  350   23.75)
(smt.stats   32   4077 107689 392073  4031/3824/517   12741/1814    43  358   23.75)
ramon: poll                 wall=4.000s usage=3.990s mem=25120KiB load=1.00 rootload=0.99
(smt.stats   33   4238 111371 409853  4111/3892/517   13167/1815    43  358   23.75)
(smt.stats   34   4415 115414 430425  4288/3933/517   14097/1966    44  358   23.94)
(smt.stats   35   4609 122580 462227  4427/4177/520   15084/2086    45  388   24.04)
(smt.stats   36   4710 125539 475357  4495/4262/521   15338/2087    45  388   24.13)
(smt.stats   37   4821 128477 489456  4614/4307/521   15758/2091    45  388   24.13)
(smt.stats   38   4943 131361 506422  4713/4448/521   16198/2298    46  393   24.23)
ramon: poll                 wall=5.000s usage=4.989s mem=25904KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 1256)
(smt.stats   39   5077 133137 525613  4725/4534/525   16641/2466    47  446   24.42)
(smt.stats   40   5224 136372 544668  4921/4535/525   17170/2473    47  446   24.51)
(smt.stats   41   5385 139896 578314  5339/4827/525   17973/2485    47  446   24.70)
(smt.stats   42   5562 143915 605734  5440/5249/528   19171/2699    48  447   24.80)
(smt.stats   43   5756 150209 657664  5482/5260/528   20872/2702    48  447   24.90)
ramon: poll                 wall=6.000s usage=5.984s mem=26316KiB load=1.00 rootload=1.00
(smt.stats   44   5969 154046 680848  5527/5332/529   22215/3007    49  463   25.10)
(smt.stats   45   6070 156209 703113  5539/5340/531   22645/3007    49  463   25.10)
(smt.stats   46   6181 159501 735289  5574/5371/532   23214/3155    50  626   25.22)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   47   6303 163190 763468  5600/5388/532   23927/3159    50  626   25.22)
(smt.stats   48   6437 165635 780137  5681/5488/536   24426/3269    51  626   25.41)
(smt.stats   49   6584 169816 800402  5727/5493/536   24958/3272    51  626   25.41)
ramon: poll                 wall=7.000s usage=6.984s mem=26832KiB load=1.00 rootload=1.00
(smt.stats   50   6745 175233 847591  5858/5571/536   26297/3277    51  626   25.51)
(smt.stats   51   6922 179308 889656  5954/5761/538   27490/3419    52  653   25.89)
(smt.stats   52   7116 184962 911598  6151/5763/538   28603/3435    52  653   25.99)
ramon: poll                 wall=8.000s usage=7.983s mem=27416KiB load=1.00 rootload=1.00
(smt.stats   53   7329 191761 954162  6508/6021/538   29539/3644    53  671   26.20)
(smt.stats :restarts :decisions     :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas           :deletions     )
(smt.stats   54   7563 200249 1019388  6684/6333/538   31263/3648    53  671   26.40)
ramon: poll                 wall=9.004s usage=8.987s mem=27876KiB load=1.00 rootload=1.00
(smt.stats   55   7664 202887 1035933  6785/6522/538   31523/3650    53  671   26.50)
(smt.stats   56   7775 206495 1064322  6898/6595/538   32069/3654    53  671   26.69)
(smt.stats   57   7897 210073 1102663  6956/6715/538   33123/3655    53  671   26.69)
(smt.stats   58   8031 212499 1127495  6968/6775/539   34472/4173    54  678   26.88)
(smt.stats   59   8178 215779 1161722  7003/6802/540   35019/4175    54  678   26.98)
ramon: poll                 wall=10.000s usage=9.982s mem=28368KiB load=1.00 rootload=0.99
(smt.stats   60   8339 218269 1191417  7077/6824/540   35302/4179    54  678   26.98)
(smt.stats   61   8516 221961 1231101  7159/6908/540   37302/4181    54  678   27.26)
(smt.stats   62   8710 226082 1276157  7377/6966/540   37887/4473    55  678   27.26)
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 8192 := 8192&268435440
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 3758104576 := 4284077568 >>l 28
band: (band[28] (lshr[32] (* 16 #106) (mod #240 32)) (if (= #412 31) 576460748008456192 (if #414 288230374004228096 #474))) 8192 := 8192&268435440
lshr: (lshr[32] (* 16 (bv2int %0)) (mod (+ 4 #107 #239) 32)) 3758104576 := 4284077568 >>l 28
(smt.stats   63   8923 228382 1294412  7541/7211/540   38367/4474    55  678   27.36)
(smt.stats   64   9157 232604 1319323  7851/7355/545   39380/4486    55  678   27.71)
ramon: poll                 wall=11.000s usage=10.982s mem=29132KiB load=1.00 rootload=1.00
(smt.stats   65   9414 238014 1374391  8673/7778/545   40723/4503    55  678   27.99)
(smt.stats   66   9515 239935 1397315  8695/8493/546   41259/4848    56  679   28.19)
(smt.stats   67   9627 243653 1440858  8762/8522/546   42009/4848    56  679   28.28)
ramon: poll                 wall=12.000s usage=11.981s mem=29696KiB load=1.00 rootload=1.00
(smt.stats   68   9749 247311 1463876  9046/8565/546   42598/4849    56  679   28.38)
(smt.stats   69   9883 250771 1496683  9194/8854/546   43137/4850    56  679   28.38)
(smt.delete-inactive-clauses  :num-deleted-clauses 588)
(smt.stats   70  10030 253788 1528381  9361/9081/546   42982/5275    57  692   28.47)
ramon: poll                 wall=13.004s usage=12.984s mem=29980KiB load=1.00 rootload=1.00
(smt.stats   71  10191 259259 1607353  9655/9203/546   43847/5284    57  692   28.57)
(smt.stats   72  10368 264372 1664316  9902/9471/546   44698/5293    57  692   28.66)
(smt.stats   73  10562 267262 1703985 10030/9724/546   46444/5294    57  692   28.96)
(smt.stats :restarts :decisions    :clauses/bin/units            :simplify    :memory)
(smt.stats    :conflicts   :propagations           :lemmas           :deletions     )
(smt.stats   74  10775 271769 1756654 10149/9837/546   48136/5296    57  692   29.15)
ramon: poll                 wall=14.000s usage=13.979s mem=30620KiB load=1.00 rootload=1.00
(smt.stats   75  11009 278241 1842133 10469/10005/546   49757/5297    57  692   29.39)
(smt.stats   76  11266 284916 1912216 10574/10291/546   52245/5300    57  692   29.58)
ramon: poll                 wall=15.000s usage=14.979s mem=31188KiB load=1.00 rootload=1.00
(smt.stats   77  11548 295149 2019249 10617/10416/547   54032/6876    58  698   29.78)
(smt.stats   78  11649 298372 2071262 10621/10420/547   55729/6876    58  698   29.88)
(smt.stats   79  11760 302264 2121154 10670/10439/547   56826/6877    58  698   30.09)
ramon: poll                 wall=16.000s usage=15.979s mem=31840KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats    :conflicts   :propagations            :lemmas           :deletions     )
(smt.stats   80  11882 308092 2194032 10732/10485/547   57335/6878    58  698   30.29)
(smt.stats   81  12016 311656 2236250 10775/10556/547   57713/6878    58  698   30.29)
(smt.stats   82  12163 317483 2306358 10826/10594/547   58504/6878    58  698   30.38)
ramon: poll                 wall=17.000s usage=16.979s mem=32060KiB load=1.00 rootload=1.00
(smt.stats   83  12324 322152 2359974 10909/10626/547   59661/6880    58  698   30.48)
(smt.stats   84  12501 327556 2430753 11001/10727/547   60639/6885    58  698   30.60)
(smt.stats   85  12695 332392 2510424 11101/10882/548   61659/7979    59  723   30.98)
ramon: poll                 wall=18.000s usage=17.979s mem=32500KiB load=1.00 rootload=1.00
(smt.stats   86  12908 338747 2619481 11117/10916/548   64346/7979    59  723   31.19)
(smt.stats   87  13142 346524 2715037 11185/10935/550   67577/8508    60  735   31.51)
ramon: poll                 wall=19.004s usage=18.981s mem=33156KiB load=1.00 rootload=1.01
(smt.stats   88  13399 353179 2782001 11498/11024/550   68291/8520    60  735   31.63)
(smt.stats   89  13681 358187 2808917 11531/11325/550   68700/8520    60  735   31.72)
(smt.stats   90  13991 364845 2887409 11691/11344/550   70180/8523    60  735   31.91)
ramon: poll                 wall=20.000s usage=19.977s mem=33496KiB load=1.00 rootload=0.99
ramon: end                  Tue Dec 24 15:16:10 2024
ramon: root.execname        z3
ramon: root.utime           19.970s
ramon: root.stime           0.010s
ramon: group.total          19.991s
ramon: group.utime          19.971s
ramon: group.stime          0.020s
ramon: group.mempeak        33752KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.015s
ramon: loadavg              1.00
