ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 18:34:54 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         25364 MiB
ramon: sys.mem.avail        61752 MiB
ramon: sys.nprocs           1391
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/YCyV160hsIic.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             72922
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 1 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 1 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 7&1
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 1 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4611686018427387904 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4611686018427387904 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4611686018427387904 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&126
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 5 := 7&5
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 13835058055282163717 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 5 := 7&2305843009213693950
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&126
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&0
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 13835058055282163712 := 252 << 59
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 7 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 6 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 6 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 2305843009213693953 := 126 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 1 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 1 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 7&2305843009213693952
(smt.stats    0    101   1238    913  1358/1204/156      83/11    12   31   19.18)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 2 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 4 := 7&2305843009213693952
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 7&2305843009213693952
band: (band[62] (if (or #641 #642 #643 #644 #645 #646 #647 #648 #649 #650 #651 #652 #653 #654 #655 #656 ...) 0 (if #698 1 #706)) (shl[62] (bv2int %0) (+ 62 #930))) 2 := 7&2305843009213693952
(smt.stats    1    202   2206   2249  1476/1327/192     177/13    14   38   19.47)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&323
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 323 := 322 << 24
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&323
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 323 := 322 << 24
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&323
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 323 := 322 << 24
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263552
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 5402263554 := 161 << 25
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263547
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 5402263547 := 322 << 24
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263552
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 5402263554 := 161 << 25
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263552
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 5402263554 := 161 << 25
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263552
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 5402263554 := 161 << 25
(smt.stats    2    313   3985   3859  1565/1406/206     297/20    16   47   19.66)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 320 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&320
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 320 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&328
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 328 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&4328521720
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4328521720 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&4328521736
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 4328521736 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&5402263544
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 5402263544 := 258 << 56
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&144115188075855872
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 144115188075855880 := 129 << 57
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&144115188075855872
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 144115188075855880 := 129 << 57
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 0 := 0&144115188075855872
shl: (shl[62] (bv2int %0) (+ 62 (* 4611686018427387903 #108))) 144115188075855880 := 129 << 57
(smt.stats    3    414   6430   6913  1684/1504/220     430/25    17   52   19.95)
(smt.stats    4    525   8104   9492  1763/1558/229     557/47    19   69   20.14)
(smt.stats    5    647   9696  11711  1843/1638/232     695/58    21   72   20.61)
ramon: poll                 wall=1.000s usage=0.992s mem=21796KiB load=0.99 rootload=0.98
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  10141  12107  2058/1823/232     807/64    22   73   20.80)
(smt.stats    7    859  10738  13106  2335/2095/232     952/64    22   73   20.80)
(smt.stats    8    981  12838  17715  2479/2225/235    1109/82    23   79   20.90)
ramon: poll                 wall=2.000s usage=1.992s mem=22096KiB load=1.00 rootload=1.00
(smt.stats    9   1115  14432  19709  2617/2307/235    1277/132    24   82   20.90)
ramon: poll                 wall=3.000s usage=2.991s mem=22200KiB load=1.00 rootload=1.00
(smt.stats   10   1216  16113  22260  2845/2509/235    1410/133    24   82   20.99)
(smt.stats   11   1327  18619  27263  3016/2787/237    1541/193    25   86   20.99)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas          :deletions    )
(smt.stats   12   1449  21199  31931  3127/2936/252    1684/203    26   87   21.09)
ramon: poll                 wall=4.000s usage=3.991s mem=22352KiB load=1.00 rootload=1.00
(smt.stats   13   1583  23795  36265  3186/2945/253    1848/213    27  101   21.19)
(smt.stats   14   1730  28675  48404  3266/3003/254    2010/248    28  105   21.19)
(smt.stats   15   1831  30096  51835  3315/3098/254    2122/250    28  105   21.28)
ramon: poll                 wall=5.000s usage=4.991s mem=22620KiB load=1.00 rootload=1.00
(smt.stats   16   1942  32104  57792  3362/3145/254    2242/252    28  105   21.30)
(smt.stats   17   2064  35870  61336  3419/3216/254    2392/256    28  105   21.30)
(smt.stats   18   2198  38954  65791  3493/3244/254    2553/258    28  105   21.40)
ramon: poll                 wall=6.000s usage=5.990s mem=22708KiB load=1.00 rootload=1.00
(smt.stats   19   2345  39595  66876  3727/3341/254    2718/258    28  105   21.49)
ramon: poll                 wall=7.000s usage=6.990s mem=22796KiB load=1.00 rootload=1.00
(smt.stats   20   2506  41193  69471  3932/3588/254    2956/267    28  105   21.59)
(smt.stats   21   2607  45258  76314  3992/3758/254    3076/270    28  105   21.59)
(smt.stats   22   2718  49119  83394  4092/3821/254    3278/270    28  105   21.69)
ramon: poll                 wall=8.000s usage=7.990s mem=22968KiB load=1.00 rootload=1.00
(smt.stats   23   2840  53658  91643  4132/3909/258    3455/349    29  127   21.69)
(smt.stats   24   2974  57866  97170  4152/3956/258    3605/349    29  127   21.69)
(smt.stats   25   3121  61081 103583  4197/3981/258    3792/355    29  127   21.78)
ramon: poll                 wall=9.000s usage=8.989s mem=23224KiB load=1.00 rootload=1.00
(smt.stats   26   3282  65580 110862  4341/4028/259    4060/395    30  128   21.91)
(smt.stats   27   3459  69764 120155  4391/4183/259    4423/398    30  128   21.91)
(smt.stats   28   3560  72801 127043  4415/4223/260    4578/448    31  132   22.00)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946351
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946351
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946350
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946350
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946350
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946358
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946452
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 6917531226664334356 := 2 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946364
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946364
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946348
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946348
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946348
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946340
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 6917531226664334244 := 2 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946340
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 11529217245091722148 := 2 << 60
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 4 := 15&2305845208236946340
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 11529217245091722148 := 2 << 60
(smt.stats   29   3671  75347 134122  4491/4287/292    4807/478    32  159   22.00)
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946340
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946469
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946545
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946545
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946561
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 2305845208236946561 := 0 << 61
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946545
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946545
band: (band[62] (if (or #456 #459 #462 #465 #468 #471 #474 #477 #480 #483 #486 #489 #492 #495 #498 #501 ...) 0 (if #453 1 #943)) (shl[64] (* 2 #106) (mod #1181 64))) 1 := 31&2305845208236946497
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 61 #1173 #1177) 64)) 2305845208236946497 := 0 << 61
(smt.stats   30   3793  77080 140277  4626/4337/292    5044/485    32  159   22.10)
(smt.stats   31   3927  79722 147768  4696/4438/327    5202/515    33  171   22.39)
ramon: poll                 wall=10.005s usage=9.994s mem=23732KiB load=1.00 rootload=1.00
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   32   4074  84055 157560  4812/4551/329    5344/528    34  315   22.39)
ramon: poll                 wall=11.000s usage=10.988s mem=24012KiB load=1.00 rootload=0.99
(smt.stats   33   4235  89478 168674  4919/4609/330    5688/555    35  320   22.58)
ramon: poll                 wall=12.000s usage=11.988s mem=24068KiB load=1.00 rootload=1.00
(smt.stats   34   4412  93189 177334  5247/4780/330    6018/575    36  320   22.68)
(smt.stats   35   4606  98858 188334  5318/5033/330    6503/578    36  320   22.87)
ramon: poll                 wall=13.000s usage=12.988s mem=24276KiB load=1.00 rootload=1.00
ramon: poll                 wall=14.000s usage=13.987s mem=24432KiB load=1.00 rootload=1.00
(smt.stats   36   4707 101925 194216  5511/5131/330    6694/580    36  320   22.87)
(smt.stats   37   4818 105332 205285  5635/5363/331    6907/707    37  320   23.16)
ramon: poll                 wall=15.000s usage=14.987s mem=24892KiB load=1.00 rootload=1.00
(smt.stats   38   4940 107920 211757  5748/5423/331    7134/708    37  320   23.25)
ramon: poll                 wall=16.000s usage=15.987s mem=24916KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   39   5074 111554 219964  5810/5582/332    7339/727    38  321   23.35)
(smt.stats   40   5221 117054 228812  5966/5591/332    7631/729    38  321   23.35)
ramon: poll                 wall=17.000s usage=16.982s mem=25176KiB load=1.00 rootload=0.99
(smt.stats   41   5382 121601 238036  6059/5750/332    7832/730    38  321   23.44)
ramon: poll                 wall=18.000s usage=17.980s mem=25240KiB load=1.00 rootload=1.00
(smt.stats   42   5559 126329 249820  6159/5913/333    8254/812    39  322   23.54)
ramon: poll                 wall=19.000s usage=18.968s mem=25544KiB load=0.99 rootload=0.99
(smt.stats   43   5753 130669 262955  6368/6000/333    8598/818    39  322   23.63)
(smt.stats   44   5966 135699 281602  6463/6226/336    9230/994    40  325   23.73)
ramon: poll                 wall=20.000s usage=19.950s mem=25552KiB load=0.98 rootload=0.98
ramon: end                  Fri Nov  1 18:35:14 2024
ramon: root.execname        z3
ramon: root.utime           19.940s
ramon: root.stime           0.010s
ramon: group.total          19.956s
ramon: group.utime          19.940s
ramon: group.stime          0.016s
ramon: group.mempeak        25808KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.007s
ramon: loadavg              1.00
