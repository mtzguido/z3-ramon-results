ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 22:33:33 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         28134 MiB
ramon: sys.mem.avail        62085 MiB
ramon: sys.nprocs           1383
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/TeQ2ppZDL9UA.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=true
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             817266
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   50.49)
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&1
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&1
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&36028797018963967
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&2
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&2
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&1
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&1
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&4
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&4
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&8
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&4
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&9
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&8
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&16
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&16
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&32
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&32
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&64
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&128
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&16
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&16
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&32
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&32
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&64
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&256
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&32
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 36028797018963967&64
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 64 := 36028797018963967&65
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 64 := 36028797018963967&68
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 64 := 36028797018963967&68
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 67 := 36028797018963967&68
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 66 := 36028797018963967&68
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 64 := 36028797018963967&68
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 64 := 36028797018963967&68
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 67 := 36028797018963967&68
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 66 := 36028797018963967&68
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 64 := 36028797018963967&68
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 65 := 36028797018963967&69
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 68 := 36028797018963967&69
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 64 := 36028797018963967&65
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 128 := 36028797018963967&256
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1      1   51.5464     10000        49          0            1        2)
(smt.stats    0    101   4277    547  1375/1242/225      86/16    12   46   52.58)
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 256 := 36028797018963967&1024
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 512 := 36028797018963967&1024
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 512 := 36028797018963967&1024
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 1024 := 36028797018963967&36028797018963200
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 1024 := 36028797018963967&36028797018962944
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 1024 := 36028797018963967&36028797018962944
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 512 := 36028797018963967&1024
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4096 := 36028797018963967&5120
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 1024 := 36028797018963967&4096
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 2048 := 36028797018963967&4096
(smt.stats    1    202   4640    778  2619/2338/230     213/27    13   47   53.06)
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4096 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4096 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4352 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4352 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 66304 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 66304 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 66304 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 65280 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 13056 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 13056 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 21403 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 21248 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 23296 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 33536 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 33536 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 37632 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 7067 := 36028797018963967&70400
(sat.ddfw       1      1   27.1766     20001        98          1            1        3)
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 7066 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 7064 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 6912 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 7056 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 7056 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 7056 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 7040 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 6912 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&70400
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&136192
(smt.stats    2    313   6219   3243  3041/2795/353     657/181    16   74   53.35)
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&136192
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&136192
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4864 := 36028797018963967&136192
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4608 := 36028797018963967&136192
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4224 := 36028797018963967&136192
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 4096 := 36028797018963967&136192
(sat.ddfw       1      1    27.933     40001       196          2            1        5)
ramon: poll                 wall=1.000s usage=0.762s mem=55704KiB load=0.76 rootload=0.75
(sat.ddfw       1      1   26.5957     70001       343          3            1        8)
(smt.stats    3    414   7786   4832  3114/2873/357     853/211    17   75   53.54)
(sat.ddfw       1      1   23.6407    110001       539          4            1       12)
(smt.stats    4    525  10339   9533  3212/2956/364    1190/356    20   98   53.63)
ramon: poll                 wall=2.000s usage=1.759s mem=55908KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   20.9288    160000       784          5            1       17)
ramon: poll                 wall=3.000s usage=2.761s mem=56084KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   18.6512    220001      1078          6            1       23)
ramon: poll                 wall=4.000s usage=3.760s mem=56084KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   16.7104    290001      1421          7            1       30)
ramon: poll                 wall=5.003s usage=4.718s mem=56084KiB load=0.96 rootload=0.96
(sat.ddfw       1      1   15.0546    370001      1813          8            1       38)
ramon: poll                 wall=6.000s usage=5.621s mem=56084KiB load=0.91 rootload=0.90
(smt.stats    5    647  12267  11955  3333/2999/365    1390/468    22  100   53.84)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats      :conflicts  :propagations          :lemmas         :deletions     )
(smt.stats    6    748  16345  18956  3499/3161/365    1516/470    22  100   53.93)
(sat.ddfw       1      1   13.5054    460001      2254          9            1       47)
(smt.stats    7    859  22307  28797  3543/3280/365    1638/470    22  100   54.03)
ramon: poll                 wall=7.000s usage=6.533s mem=56388KiB load=0.91 rootload=0.91
(smt.stats    8    981  27309  40109  3586/3339/367    1883/587    23  103   54.13)
(smt.stats    9   1115  36779  60419  3592/3344/367    2118/600    24  104   54.23)
(smt.stats   10   1216  44101  76798  3596/3347/367    2224/600    24  104   54.43)
(smt.stats   11   1327  53062  97217  3601/3352/367    2370/600    24  104   54.43)
(smt.stats   12   1449  59729 114558  3611/3364/368    2557/702    25  110   54.61)
(smt.stats   13   1583  68356 138168  3615/3366/375    2735/722    26  115   54.71)
(smt.stats   14   1730  78416 168041  3616/3369/375    2890/768    27  139   54.71)
(smt.stats   15   1831  83411 183292  3626/3377/375    3018/768    27  139   54.71)
ramon: poll                 wall=8.000s usage=7.516s mem=56908KiB load=0.98 rootload=0.98
(smt.stats   16   1942  89281 201422  3629/3380/377    3132/825    28  145   54.71)
(sat.ddfw       1      1   12.3153    560001      2745         10            1       57)
(smt.stats   17   2064  95085 220048  3648/3386/379    3291/827    29  159   55.19)
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas         :deletions     )
(smt.stats   18   2198 102096 242691  3658/3408/379    3435/855    30  161   55.19)
(smt.stats   19   2345 110497 271933  3658/3408/379    3606/855    30  161   55.19)
(smt.stats   20   2506 117434 296658  3666/3416/380    4014/994    31  164   55.19)
(smt.stats   21   2607 122352 313601  3666/3416/380    4115/994    31  164   55.19)
(smt.stats   22   2718 128825 334146  3667/3417/380    4225/994    31  164   55.19)
ramon: poll                 wall=9.000s usage=8.523s mem=57408KiB load=1.01 rootload=1.01
(smt.stats   23   2840 135867 356226  3667/3417/380    4354/994    31  164   55.19)
(smt.stats   24   2974 143784 380804  3667/3417/381    4552/1135    32  167   55.53)
(smt.stats   25   3121 151367 408372  3670/3419/382    4763/1135    33  169   55.53)
(smt.stats   26   3282 159282 435736  3683/3427/382    4931/1135    33  169   55.53)
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 3&169984
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #874 #878) 64)) 36028797019133952 := 216 << 1
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 3&169984
shl: (shl[64] (* 2 (bv2int %0)) (mod (+ 54 #874 #878) 64)) 169984 := 216 << 1
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 3&432
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 1 := 108 << 2
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 3&432
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 2 := 108 << 2
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 3&432
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 2 := 108 << 2
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 3&432
shl: (shl[55] (bv2int %0) (+ 55 (* 36028797018963967 #116))) 2 := 108 << 2
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 1 := 3&432
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 2 := 3&432
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 3&432
band: (band[55] (if (= #120 54) 1 (if #633 3 #787)) (shl[55] (bv2int %0) (+ 55 #790))) 1 := 3&432
band: (band[55] (if (= #411 63) 1 (if #613 3 #867)) (shl[64] (* 2 #114) (mod #882 64))) 0 := 3&432
band: (band[55] (if (= #120 54) 1 (if #633 3 #787)) (shl[55] (bv2int %0) (+ 55 #790))) 2 := 3&432
(smt.stats   27   3459 162872 447145  3760/3502/416    5149/1217    34  169   55.62)
(sat.ddfw       1      1    11.339    670001      3284         11            1       68)
(smt.stats   28   3560 164051 457636  3825/3545/422    5359/1240    35  185   56.03)
ramon: poll                 wall=10.000s usage=9.516s mem=58324KiB load=0.99 rootload=0.99
(smt.stats   29   3671 165220 462373  4001/3654/422    5526/1244    35  185   56.41)
ramon: poll                 wall=11.000s usage=10.515s mem=59008KiB load=1.00 rootload=1.00
(smt.stats   30   3793 167025 471822  4122/3729/422    5682/1350    36  187   56.50)
(sat.ddfw       1      1   10.5652    790001      3872         12            1       80)
ramon: poll                 wall=12.000s usage=11.517s mem=59008KiB load=1.00 rootload=1.00
(smt.stats   31   3927 168762 475622  4328/3868/423    5840/1355    36  187   56.60)
ramon: poll                 wall=13.000s usage=12.478s mem=59360KiB load=0.96 rootload=0.97
(smt.stats   32   4074 171130 487659  4450/4058/428    6070/1385    37  194   56.69)
(sat.ddfw       1      1   9.81206    920001      4509         13            1       93)
(smt.stats   33   4235 177248 515176  4515/4205/430    6343/1430    38  211   56.89)
ramon: poll                 wall=14.000s usage=13.479s mem=59100KiB load=1.00 rootload=1.00
(smt.stats   34   4412 186417 550923  4555/4251/432    6622/1458    40  226   56.99)
(smt.stats   35   4606 196081 575559  4581/4273/432    6903/1460    40  226   57.22)
ramon: poll                 wall=15.000s usage=14.480s mem=59580KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   9.19903   1060001      5196         14            1      108)
(smt.stats   36   4707 199278 581761  4727/4309/432    7085/1468    40  226   57.40)
ramon: poll                 wall=16.000s usage=15.479s mem=60172KiB load=1.00 rootload=0.99
(smt.stats   37   4818 201841 589423  4898/4476/432    7228/1481    40  226   57.50)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   38   4940 205983 609365  4933/4642/435    7516/1621    41  227   57.50)
(smt.delete-inactive-clauses  :num-deleted-clauses 126)
(smt.stats   39   5074 212786 635674  4945/4651/435    7734/1621    41  227   57.92)
ramon: poll                 wall=17.000s usage=16.476s mem=60252KiB load=1.00 rootload=1.00
(sat.ddfw       1      1   8.65551   1210001      5931         15            1      123)
(smt.stats   40   5221 222357 646141  5070/4660/439    7989/1763    42  230   58.01)
ramon: poll                 wall=18.000s usage=17.476s mem=60276KiB load=1.00 rootload=1.00
ramon: poll                 wall=19.000s usage=18.476s mem=60304KiB load=1.00 rootload=1.00
(smt.stats   41   5382 230376 660633  5324/5031/444    8364/1818    43  250   58.20)
(smt.stats   42   5559 236534 680494  5336/5046/447    8754/1880    44  261   58.20)
(sat.ddfw       1      1   8.17202   1370001      6715         16            1      139)
ramon: poll                 wall=20.000s usage=19.477s mem=60348KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 22:33:53 2024
ramon: root.execname        z3
ramon: root.utime           19.550s
ramon: root.stime           0.010s
ramon: group.total          19.568s
ramon: group.utime          19.557s
ramon: group.stime          0.012s
ramon: group.mempeak        60608KiB
ramon: group.pidpeak        3
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.096s
ramon: loadavg              0.97
