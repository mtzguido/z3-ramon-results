ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Fri Nov  1 19:05:29 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         24653 MiB
ramon: sys.mem.avail        61749 MiB
ramon: sys.nprocs           1395
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/alive-arm-tv-smt-benchmarks/sigYS7GjgjaX.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = smt.bv.solver=2
ramon: argv                 5 = smt.sls.enable=false
ramon: argv                 6 = sat.smt=false
ramon: argv                 7 = -st
ramon: argv                 8 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify smt)
ramon: argv                 9 = model_validate=true
ramon: childpid             170284
(smt.searching)
(smt.stats :restarts     :decisions   :clauses/bin/units :simplify   :memory)
(smt.stats        :conflicts    :propagations    :lemmas      :deletions   )
(smt.stats    0      0      0      0     0/0/1       0/0     0    0   17.81)
(smt.stats    0    101   4209   2355  1184/1069/100      90/20     7   17   19.21)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&8796093022208
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 327680 >>l 21
(smt.stats    1    202   6386   4021  2055/1858/110     177/35    10   25   19.50)
(smt.stats    2    313   8119   5157  2200/1978/111     294/45    11   26   19.60)
(smt.stats    3    414   8762   6695  2594/2362/113     403/72    12   28   19.70)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&134217728
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 281474983329792 >>l 37
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 134217728 := 134217732&134217728
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 134217732 := 281474983329792 >>l 37
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 134217728 := 134217732&134217728
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 134217732 := 281474983329792 >>l 37
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2048 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2048&134217728
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 4294967429 := 4294967397 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2048&134217728
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 4294967008 := 4294967397 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2048&134217728
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 4294967008 := 4294967397 >>l 21
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1 := 2048&134217728
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2 := 2048&134217728
(smt.stats    4    525   9831   8373  2643/2399/135     515/77    14   38   19.89)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17732923532771329 := 0 >>l 16
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17732923532771329 := 0 >>l 16
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17732923532771329 := 0 >>l 16
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 0 >>l 16
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&0
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 0 >>l 16
(smt.stats    5    647  11848  10381  2721/2454/137     631/85    15   46   19.89)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 786432&68719476736
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 786432 := 786432 >>l 28
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 786431&68719476736
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 786431 := 786432 >>l 28
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 13&68719476736
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 13 := 786432 >>l 28
(smt.stats :restarts :decisions    :clauses/bin/units         :simplify    :memory)
(smt.stats      :conflicts  :propagations           :lemmas        :deletions    )
(smt.stats    6    748  13386  12570  2751/2497/144     736/89    17   48   19.99)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 0 := 131072 >>l 18
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 70368744177665 := 2 >>l 2
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 0 := 131072 >>l 18
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 87 := 2 >>l 2
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 0 := 131072 >>l 18
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&70368744177664
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 87 := 2 >>l 2
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&70368744177664
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 131072 >>l 18
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1 := 1&274877906944
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&274877906944
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 655360 >>l 26
(smt.stats    7    860  15393  15493  2797/2546/170     857/93    19   54   20.08)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&549755813888
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 281474976710656 := 589824 >>l 25
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 12 := 12&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 16 := 16&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 40 := 40&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 32 := 32&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 32 := 32&549755813888
(smt.stats    8    982  17347  17936  2871/2617/191     989/96    20   59   20.18)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 80 := 80&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 96 := 96&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 76 := 76&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 72 := 72&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 64 := 64&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 72 := 72&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 192 := 192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 256 := 256&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1024 := 1024&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2048 := 2048&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8192 := 8192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 16384 := 16384&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 32768 := 32768&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 65536 := 65536&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 131072 := 131072&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 262144 := 262144&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 524288 := 524288&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 262144 := 262144&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 524288 := 524288&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&549755813888
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 0 := 589824 >>l 25
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 0&549755813888
lshr: (lshr[48] (bv2int %0) (mod (bv2int %0) 48)) 1 := 9 >>l 9
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 64 := 64&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 64 := 64&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 128 := 128&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 128 := 128&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 128 := 128&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 128 := 128&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 512 := 512&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 256 := 256&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 256 := 256&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2048 := 2048&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8192 := 8192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8192 := 8192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8192 := 8192&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4096 := 4096&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 32768 := 32768&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 131072 := 131072&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1024 := 1024&549755813888
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&549755813888
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 589824 >>l 25
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 1&549755813888
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 1 := 589824 >>l 25
(smt.stats    9   1116  19129  21928  3034/2767/339    1241/143    21   93   20.78)
(smt.stats   10   1217  21327  26173  3089/2828/345    1370/157    22   95   20.89)
(smt.stats   11   1328  24000  29353  3165/2898/346    1550/196    23   95   21.30)
ramon: poll                 wall=1.000s usage=0.947s mem=22880KiB load=0.95 rootload=0.93
(smt.stats :restarts :decisions    :clauses/bin/units          :simplify    :memory)
(smt.stats     :conflicts   :propagations          :lemmas         :deletions     )
(smt.stats   12   1450  26587  34548  3173/2913/352    1716/280    25  112   21.39)
(smt.stats   13   1584  32045  40634  3189/2916/358    1855/280    25  112   21.39)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048577 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2097156 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 2097156 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048648 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048640 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048640 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 1048576 := 8585215&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4194304 := 4194306&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 8388608 := 8388610&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 4194304 := 6291456&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 3145728 := 6291456&35184372088832
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 3145728 := 7340032&35184372088832
(smt.stats   14   1731  35231  47139  3375/3105/391    2289/342    27  128   21.49)
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 4194304&35184372088832
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17169973583544320 := 281474982150144 >>l 19
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2097152&35184372088832
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17169973581447168 := 281474982150144 >>l 19
band: (band[48] (lshr[64] (* 65536 #98) (mod #302 64)) (if (= #598 63) 18446744073709551616 (if #600 9223372036854775808 #724))) 0 := 2097152&35184372088832
lshr: (lshr[64] (* 65536 (bv2int %0)) (mod (+ 16 #98 #301) 64)) 17169973581447168 := 281474982150144 >>l 19
(smt.stats   15   1832  39287  54556  3395/3116/401    2459/343    27  128   21.65)
(smt.stats   16   1943  41265  58483  3560/3226/408    2659/541    28  135   21.96)
(smt.stats   17   2065  44391  64738  3731/3442/409    2999/594    29  148   21.96)
(smt.stats   18   2199  47950  71764  3923/3492/409    3305/727    30  154   22.25)
ramon: poll                 wall=2.000s usage=1.947s mem=23540KiB load=1.00 rootload=1.00
(smt.stats   19   2346  54404  87269  4096/3790/414    3611/829    31  160   22.33)
(smt.stats   20   2507  59570  97597  4451/4148/417    3981/893    33  182   22.62)
(smt.stats   21   2608  64017 107155  4544/4171/418    4571/900    33  182   22.81)
ramon: poll                 wall=3.000s usage=2.946s mem=24352KiB load=1.00 rootload=0.99
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations           :lemmas          :deletions     )
(smt.stats   22   2719  67511 115036  4701/4337/419    4935/1100    34  185   23.00)
(smt.stats   23   2841  71663 124386  4899/4603/420    5284/1170    35  185   23.10)
(smt.stats   24   2975  75511 133677  4939/4634/422    5546/1316    36  198   23.19)
ramon: poll                 wall=4.000s usage=3.945s mem=24668KiB load=1.00 rootload=1.00
(smt.stats   25   3122  85743 152143  5019/4720/424    6018/1390    38  208   23.19)
(smt.stats   26   3283  95653 168083  5117/4724/424    6368/1395    38  208   23.39)
(smt.stats   27   3460 104073 197425  5193/4897/427    6961/1584    39  222   23.39)
(smt.stats   28   3561 107090 206598  5279/4911/429    7220/1586    39  222   23.51)
(smt.stats   29   3672 109265 217454  5293/4997/429    7397/1638    40  246   23.60)
ramon: poll                 wall=5.000s usage=4.944s mem=25004KiB load=1.00 rootload=1.00
(smt.stats   30   3794 110603 222003  5411/5000/429    7602/1641    40  246   23.79)
(smt.stats   31   3928 111090 223319  5794/5285/429    7764/1641    40  246   23.89)
ramon: poll                 wall=6.000s usage=5.943s mem=25860KiB load=1.00 rootload=1.00
(smt.stats   32   4075 116323 238167  6052/5731/434    8577/1719    41  255   23.98)
(smt.stats   33   4236 123670 262184  6113/5782/437    9077/1801    42  291   23.98)
(smt.stats   34   4413 135131 301802  6312/5829/437    9384/1903    43  318   24.08)
(smt.stats   35   4607 140559 320896  6361/6044/440   10131/1964    44  325   24.17)
(smt.stats   36   4708 144586 336961  6405/6072/441   10628/1964    44  325   24.27)
ramon: poll                 wall=7.000s usage=6.943s mem=25628KiB load=1.00 rootload=1.00
(smt.stats   37   4819 152519 362567  6514/6115/442   11255/2217    45  343   24.27)
(smt.stats   38   4941 158129 379485  6609/6244/442   11762/2217    45  343   24.37)
(smt.delete-inactive-clauses  :num-deleted-clauses 687)
(smt.stats   39   5075 164161 397340  6633/6320/442   11763/2220    45  343   24.46)
(smt.stats   40   5222 172471 414826  6766/6374/443   12034/2847    46  360   24.46)
ramon: poll                 wall=8.000s usage=7.941s mem=26128KiB load=1.00 rootload=1.00
(smt.stats   41   5383 174174 420214  7076/6493/443   12312/2851    46  360   24.65)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   42   5560 178723 425609  7421/6889/443   12598/2851    46  360   24.75)
ramon: poll                 wall=9.000s usage=8.941s mem=26284KiB load=1.00 rootload=1.00
(smt.stats   43   5754 184831 464675  7462/7166/443   13137/2851    46  360   24.97)
(smt.stats   44   5967 186780 480862  7464/7168/444   13631/2956    47  367   24.97)
(smt.stats   45   6068 191861 489923  7494/7174/446   14215/3183    48  388   24.97)
(smt.stats   46   6179 196535 509557  7566/7226/446   14560/3185    48  388   24.97)
(smt.stats   47   6301 203395 523443  7683/7291/446   14907/3189    48  388   25.06)
(smt.stats   48   6435 208759 544655  7797/7410/446   15340/3190    48  388   25.16)
ramon: poll                 wall=10.000s usage=9.940s mem=26660KiB load=1.00 rootload=1.00
(smt.stats   49   6582 212398 553534  7867/7508/447   15642/3594    49  390   25.16)
(smt.stats   50   6743 219672 592966  7932/7595/447   15959/3594    49  390   25.26)
(smt.stats   51   6920 223707 603578  8074/7652/448   16195/3638    50  393   25.26)
(smt.stats   52   7114 231500 625741  8244/7822/450   16866/3728    51  399   25.45)
ramon: poll                 wall=11.000s usage=10.938s mem=26880KiB load=1.00 rootload=0.99
(smt.stats   53   7327 243259 657386  8447/7961/450   17530/3733    51  399   25.45)
(smt.stats   54   7561 252501 692613  8669/8250/451   18419/4113    52  401   25.64)
(smt.stats   55   7662 256636 708564  8822/8378/451   18826/4119    52  401   25.84)
ramon: poll                 wall=12.000s usage=11.938s mem=27412KiB load=1.00 rootload=1.00
(smt.stats   56   7773 263035 742519  8864/8532/451   19121/4119    52  401   26.00)
(smt.stats   57   7895 270214 770287  8977/8588/451   19566/4120    52  401   25.90)
(smt.stats   58   8029 274776 789027  9061/8712/452   20224/4282    53  405   26.00)
ramon: poll                 wall=13.000s usage=12.937s mem=27620KiB load=1.00 rootload=0.99
(smt.stats   59   8176 279328 810084  9290/8766/453   20520/4286    53  405   26.09)
(smt.stats   60   8337 282400 822893  9697/9067/453   20727/4519    54  412   26.19)
ramon: poll                 wall=14.000s usage=13.937s mem=27804KiB load=1.00 rootload=1.00
(smt.stats   61   8514 289712 868117  9773/9418/453   21614/4521    54  412   26.28)
(smt.stats :restarts :decisions    :clauses/bin/units           :simplify    :memory)
(smt.stats     :conflicts  :propagations          :lemmas           :deletions     )
(smt.stats   62   8708 299864 901762  9870/9494/453   22152/4523    54  412   26.38)
(smt.stats   63   8921 306058 914176 10155/9581/453   22582/4529    54  412   26.66)
ramon: poll                 wall=15.000s usage=14.936s mem=28724KiB load=1.00 rootload=1.00
(smt.stats   64   9155 310965 952020 10372/9934/455   23166/4693    55  480   26.75)
ramon: poll                 wall=16.000s usage=15.936s mem=28740KiB load=1.00 rootload=1.00
(smt.stats   65   9412 314348 965697 10807/10118/455   23625/4699    55  480   26.94)
(smt.stats   66   9513 315878 975336 10923/10627/455   24124/4699    55  480   26.94)
(smt.stats   67   9624 320001 999703 10927/10631/455   24375/4699    55  480   27.04)
(smt.stats :restarts :decisions    :clauses/bin/units             :simplify    :memory)
(smt.stats     :conflicts  :propagations            :lemmas           :deletions     )
(smt.stats   68   9746 326816 1023320 10997/10632/455   24622/4703    55  480   27.04)
(smt.stats   69   9880 334240 1068025 11064/10729/455   25049/4703    55  480   27.04)
ramon: poll                 wall=17.000s usage=16.936s mem=28772KiB load=1.00 rootload=1.00
(smt.delete-inactive-clauses  :num-deleted-clauses 0)
(smt.stats   70  10027 339433 1091558 11110/10773/455   25629/4703    55  480   27.24)
(smt.stats   71  10188 348328 1132017 11178/10832/455   25878/4703    55  480   27.15)
(smt.stats   72  10365 361553 1225173 11182/10886/455   26150/4703    55  480   27.41)
(smt.stats   73  10559 366962 1254679 11232/10920/456   26559/5193    56  483   27.41)
ramon: poll                 wall=18.000s usage=17.935s mem=29092KiB load=1.00 rootload=1.00
(smt.stats   74  10772 375181 1297171 11400/10949/456   26989/5196    56  483   27.51)
(smt.stats   75  11006 380912 1346479 11452/11156/457   27430/5338    57  483   27.65)
(smt.stats   76  11263 385166 1379742 11492/11173/457   28023/5341    57  483   27.75)
ramon: poll                 wall=19.000s usage=18.934s mem=29360KiB load=1.00 rootload=1.00
(smt.stats   77  11545 394692 1447725 11558/11229/458   28921/5441    58  494   27.84)
(smt.stats   78  11646 398601 1472270 11639/11272/458   29285/5441    58  494   27.94)
(smt.stats   79  11757 402114 1485674 11745/11370/459   29647/5639    59  497   27.94)
(smt.stats   80  11879 404571 1500330 11852/11500/459   29860/5640    59  497   28.03)
(smt.stats   81  12013 407630 1515927 11903/11584/459   30229/5641    59  497   28.03)
ramon: poll                 wall=20.004s usage=19.942s mem=29616KiB load=1.00 rootload=1.00
ramon: end                  Fri Nov  1 19:05:49 2024
ramon: root.execname        z3
ramon: root.utime           19.950s
ramon: root.stime           0.030s
ramon: group.total          19.992s
ramon: group.utime          19.960s
ramon: group.stime          0.032s
ramon: group.mempeak        29616KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             20.054s
ramon: loadavg              1.00
