ramon: cwd                  /home/gh1/A/_work/z3-poly-testing/z3-poly-testing
ramon: start                Mon Dec 30 12:23:13 2024
ramon: nproc                32
ramon: sys.mem              63442 MiB
ramon: sys.mem.free         20151 MiB
ramon: sys.mem.avail        62136 MiB
ramon: sys.nprocs           1192
ramon: argv                 0 = z3
ramon: argv                 1 = inputs/QF_BV_SAT/innd_innd_vc32648.smt2
ramon: argv                 2 = -T:20
ramon: argv                 3 = -v:2
ramon: argv                 4 = -st
ramon: argv                 5 = tactic.default_tactic=(then simplify propagate-values solve-eqs simplify sls-smt)
ramon: argv                 6 = model_validate=true
ramon: childpid             1341672
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
tabu (if (= (if #2803 #2798 #357) bv[0:8]) (if (bvsle bv[0:64] v45713748) (if #2827 #3117 bv[0:8]) (extract[7:0] v67057336)) (if (and #1690 #2795) (if #1716 v52145336 bv[0:8]) (extract[7:0] v59259004)))
(sat.ddfw :unsat :models :kflips/sec  :flips  :restarts  :reinits  :unsat_vars  :shifts)
(sat.ddfw       1     28   116.314     10003        21          0            1       42)
(sat.ddfw       1     35   57.7919     20001        46          1            1       44)
(sat.ddfw       1     44   57.6398     40002        94          2            1       45)
(sat.ddfw       1     58    49.425     70003       167          3            1       61)
ramon: poll                 wall=1.000s usage=0.952s mem=18876KiB load=0.95 rootload=0.94
(sat.ddfw       1     59   41.9727    110003       264          4            1       63)
(sat.ddfw       1     61   37.2286    160001       386          5            1       66)
(sat.ddfw       1     74   32.3979    220002       532          6            1       71)
ramon: poll                 wall=2.000s usage=1.952s mem=18876KiB load=1.00 rootload=1.00
(sat.ddfw       1     80   28.7474    290002       702          7            1       74)
ramon: poll                 wall=3.000s usage=2.951s mem=18876KiB load=1.00 rootload=1.00
(sat.ddfw       1     86   25.7978    370001       895          8            1       78)
(sat.ddfw       0      1   8.76233    399311       966          9            0       83)
ramon: end                  Mon Dec 30 12:23:17 2024
ramon: root.execname        z3
ramon: root.utime           3.340s
ramon: root.stime           0.000s
ramon: group.total          3.354s
ramon: group.utime          3.346s
ramon: group.stime          0.008s
ramon: group.mempeak        19132KiB
ramon: group.pidpeak        2
ramon: status               exited
ramon: exitcode             0
ramon: walltime             3.403s
ramon: loadavg              0.99
